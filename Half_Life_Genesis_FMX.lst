  Wed Apr 14 2021  0:19                                                                                                    Page 1


                                               ***************************************
                                               **      WDC 65C816 Macro Assembler   **
                                               **                                   **
                                               **     Version 3.49.1- Feb  6 2006    **
                                               ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\Half_Life_Genesis_FMX.c",0
     7                        ;#include "FMX.h"
     8                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\FMX.h",0
     9                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\w65c816.h",0
    10                        	.line	33
    11                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\FMX.h",27
    12                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\w65c22.h",0
    13                        	.file	"C:\WDC\Tools\INCLUDE\inttypes.h",0
    14                        	.stag	fake1_,64,1
    15                        	.member	quot,0,7,8,32
    16                        	.member	rem,32,7,8,32
    17                        	.eos
    18                        	.line	111
    19                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\w65c22.h",27
    20                        	.stag	fake2_,128,2
    21                        	.member	orb,0,14,8,8
    22                        	.member	ora,8,14,8,8
    23                        	.member	ddrb,16,14,8,8
    24                        	.member	ddra,24,14,8,8
    25                        	.member	t1cl,32,14,8,8
    26                        	.member	t1ch,40,14,8,8
    27                        	.member	t1ll,48,14,8,8
    28                        	.member	t1lh,56,14,8,8
    29                        	.member	t2cl,64,14,8,8
    30                        	.member	t2ch,72,14,8,8
    31                        	.member	sr,80,14,8,8
    32                        	.member	acr,88,14,8,8
    33                        	.member	pcr,96,14,8,8
    34                        	.member	ifr,104,14,8,8
    35                        	.member	ier,112,14,8,8
    36                        	.member	oran,120,14,8,8
    37                        	.eos
    38                        	.line	142
    39                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\FMX.h",28
    40                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\w65c21.h",0
    41                        	.file	"C:\WDC\Tools\INCLUDE\inttypes.h",0
    42                        	.line	111
    43                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\w65c21.h",27
    44                        	.stag	fake3_,32,3
    45                        	.member	pia,0,14,8,8
    46                        	.member	cra,8,14,8,8
    47                        	.member	pib,16,14,8,8
    48                        	.member	crb,24,14,8,8
    49                        	.eos
    50                        	.line	81
    51                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\FMX.h",29
    52                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\w65c51.h",0
  Wed Apr 14 2021  0:19                                                                                                    Page 2


    53                        	.file	"C:\WDC\Tools\INCLUDE\inttypes.h",0
    54                        	.line	111
    55                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\w65c51.h",29
    56                        	.stag	fake4_,32,4
    57                        	.member	buf,0,14,8,8
    58                        	.member	sr,8,14,8,8
    59                        	.member	cmd,16,14,8,8
    60                        	.member	ctl,24,14,8,8
    61                        	.eos
    62                        	.line	117
    63                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\FMX.h",30
    64                        	.line	52
    65                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\Half_Life_Genesis_FMX.c",1
    66                        ;#include "Util.h"
    67                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\Util.h",0
    68                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\FMX.h",0
    69                        	.line	52
    70                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\Util.h",1
    71                        	.line	14
    72                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\Half_Life_Genesis_FMX.c",2
    73                        ;#include "Half_Life_Genesis_FMX.h"
    74                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\Half_Life_Genesis_FMX.h",0
    75                        	.stag	Point,48,5
    76                        	.member	x,0,16,8,16
    77                        	.member	y,16,16,8,16
    78                        	.member	z,32,16,8,16
    79                        	.eos
    80                        	data
    81                        	xdef	~~text
    82                        ~~text:
    83 00:0000: 68 65 6C 6C  	db	$68,$65,$6C,$6C,$6F,$20,$43,$20,$77,$6F
       00:0004: 6F 20 43 20 
       00:0008: 77 6F 
    84 00:000A: 72 6C 64 00  	db	$72,$6C,$64,$0
    85 00:000E:              	ends
    86                        	data
    87                        	xdef	~~points
    88                        ~~points:
    89 00:000E: 07 00 15 00  	dw	$7,$15,$0,$46,$D,$0,$46,$D,$0,$6A
       00:0012: 00 00 46 00 
       00:0016: 0D 00 00 00 
       00:001A: 46 00 0D 00 
       00:001E: 00 00 6A 00 
    90 00:0022: 12 00 00 00  	dw	$12,$0,$6A,$12,$0,$2C,$1B,$0,$2C,$1B
       00:0026: 6A 00 12 00 
       00:002A: 00 00 2C 00 
       00:002E: 1B 00 00 00 
       00:0032: 2C 00 1B 00 
    91 00:0036: 00 00 07 00  	dw	$0,$7,$15,$0,$7,$15,$0,$8,$39,$0
       00:003A: 15 00 00 00 
       00:003E: 07 00 15 00 
       00:0042: 00 00 08 00 
       00:0046: 39 00 00 00 
    92 00:004A: 2C 00 1B 00  	dw	$2C,$1B,$0,$2E,$4B,$0,$8,$39,$0,$2E
       00:004E: 00 00 2E 00 
       00:0052: 4B 00 00 00 
       00:0056: 08 00 39 00 
       00:005A: 00 00 2E 00 
  Wed Apr 14 2021  0:19                                                                                                    Page 3


    93 00:005E: 4B 00 00 00  	dw	$4B,$0,$2E,$4B,$0,$6D,$32,$0,$6D,$32
       00:0062: 2E 00 4B 00 
       00:0066: 00 00 6D 00 
       00:006A: 32 00 00 00 
       00:006E: 6D 00 32 00 
    94 00:0072: 00 00 6A 00  	dw	$0,$6A,$12,$0
       00:0076: 12 00 00 00 
    95 00:007A:              	ends
    96                        	data
    97                        	xdef	~~point_2
    98                        ~~point_2:
    99 00:007A: 28 00 32 00  	dw	$28,$32,$0,$28,$C8,$0,$5A,$26,$0,$C8
       00:007E: 00 00 28 00 
       00:0082: C8 00 00 00 
       00:0086: 5A 00 26 00 
       00:008A: 00 00 C8 00 
   100 00:008E: 26 00 00 00  	dw	$26,$0
   101 00:0092:              	ends
   102                        	data
   103                        	xdef	~~point_3
   104                        ~~point_3:
   105 00:0092: C8 00 64 00  	dw	$C8,$64,$0,$32,$A,$0
       00:0096: 00 00 32 00 
       00:009A: 0A 00 00 00 
   106 00:009E:              	ends
   107                        	data
   108                        	xdef	~~point_4
   109                        ~~point_4:
   110 00:009E: 00 00 0A 00  	dw	$0,$A,$0,$0,$3C,$0
       00:00A2: 00 00 00 00 
       00:00A6: 3C 00 00 00 
   111 00:00AA:              	ends
   112                        	data
   113                        	xdef	~~point_dest
   114                        ~~point_dest:
   115 00:00AA: 00 00 0A 00  	dw	$0,$A,$0,$0,$3C,$0
       00:00AE: 00 00 00 00 
       00:00B2: 3C 00 00 00 
   116 00:00B6:              	ends
   117                        	data
   118                        	xdef	~~cube
   119                        ~~cube:
   120 00:00B6: 64 00 64 00  	dw	$64,$64,$64,$C8,$64,$64,$C8,$C8,$64,$64
       00:00BA: 64 00 C8 00 
       00:00BE: 64 00 64 00 
       00:00C2: C8 00 C8 00 
       00:00C6: 64 00 64 00 
   121 00:00CA: C8 00 64 00  	dw	$C8,$64,$64,$64,$96,$C8,$64,$96,$C8,$C8
       00:00CE: 64 00 64 00 
       00:00D2: 96 00 C8 00 
       00:00D6: 64 00 96 00 
       00:00DA: C8 00 C8 00 
   122 00:00DE: 96 00 64 00  	dw	$96,$64,$C8,$96
       00:00E2: C8 00 96 00 
   123 00:00E6:              	ends
   124                        	data
   125                        	xdef	~~cube_p
   126                        ~~cube_p:
  Wed Apr 14 2021  0:19                                                                                                    Page 4


   127 00:00E6: 00 00 00 00  	dw	$0,$0,$0,$0,$0,$0,$0,$0,$0,$0
       00:00EA: 00 00 00 00 
       00:00EE: 00 00 00 00 
       00:00F2: 00 00 00 00 
       00:00F6: 00 00 00 00 
   128 00:00FA: 00 00 00 00  	dw	$0,$0,$0,$0,$0,$0,$0,$0,$0,$0
       00:00FE: 00 00 00 00 
       00:0102: 00 00 00 00 
       00:0106: 00 00 00 00 
       00:010A: 00 00 00 00 
   129 00:010E: 00 00 00 00  	dw	$0,$0,$0,$0
       00:0112: 00 00 00 00 
   130 00:0116:              	ends
   131                        	data
   132                        	xdef	~~line
   133                        ~~line:
   134 00:0116: 00 00 01 00  	dw	$0,$1,$0,$1,$2,$0,$2,$3,$0,$3
       00:011A: 00 00 01 00 
       00:011E: 02 00 00 00 
       00:0122: 02 00 03 00 
       00:0126: 00 00 03 00 
   135 00:012A: 00 00 00 00  	dw	$0,$0,$4,$5,$0,$5,$6,$0,$6,$7
       00:012E: 04 00 05 00 
       00:0132: 00 00 05 00 
       00:0136: 06 00 00 00 
       00:013A: 06 00 07 00 
   136 00:013E: 00 00 07 00  	dw	$0,$7,$4,$0,$0,$4,$0,$1,$5,$0
       00:0142: 04 00 00 00 
       00:0146: 00 00 04 00 
       00:014A: 00 00 01 00 
       00:014E: 05 00 00 00 
   137 00:0152: 02 00 06 00  	dw	$2,$6,$0,$3,$7,$0
       00:0156: 00 00 03 00 
       00:015A: 07 00 00 00 
   138 00:015E:              	ends
   139                        	data
   140                        	xdef	~~result_projection
   141                        ~~result_projection:
   142 00:015E: 00 00 00 00  	dw	$0,$0,$0,$0,$0,$0
       00:0162: 00 00 00 00 
       00:0166: 00 00 00 00 
   143 00:016A:              	ends
   144                        	data
   145                        	xdef	~~mv
   146                        ~~mv:
   147 00:016A: 64 00 64 00  	dw	$64,$64,$0
       00:016E: 00 00 
   148 00:0170:              	ends
   149                        	data
   150                        	xdef	~~mv_3d
   151                        ~~mv_3d:
   152 00:0170: 1E 00 64 00  	dw	$1E,$64,$0
       00:0174: 00 00 
   153 00:0176:              	ends
   154                        	.line	124
   155                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\Half_Life_Genesis_FMX.c",3
   156                        ;#include "Math.h"
   157                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\Math.h",0
  Wed Apr 14 2021  0:19                                                                                                    Page 5


   158                        	.line	59
   159                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\Half_Life_Genesis_FMX.c",4
   160                        ;#include "VKYII_CFP9553_GENERAL_def.h"
   161                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\VKYII_CFP9553_GENERAL_def.h",
                    0
   162                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\VKYII_CFP9553_BITMAP_def.h",0
   163                        	.line	31
   164                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\VKYII_CFP9553_GENERAL_def.h",
                    1
   165                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\VKYII_CFP9553_COLLISION_def.h
                    ",0
   166                        	.line	75
   167                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\VKYII_CFP9553_GENERAL_def.h",
                    2
   168                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\VKYII_CFP9553_SPRITE_def.h",0
   169                        	.line	598
   170                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\VKYII_CFP9553_GENERAL_def.h",
                    3
   171                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\VKYII_CFP9553_TILEMAP_def.h",
                    0
   172                        	.line	107
   173                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\VKYII_CFP9553_GENERAL_def.h",
                    4
   174                        	.line	133
   175                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\Half_Life_Genesis_FMX.c",5
   176                        ;#include "VKYII_CFP9553_TILEMAP_def.h"
   177                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\VKYII_CFP9553_TILEMAP_def.h",
                    0
   178                        	.line	107
   179                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\Half_Life_Genesis_FMX.c",6
   180                        ;#include "VKYII.h"
   181                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\VKYII.h",0
   182                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\FMX.h",0
   183                        	.line	52
   184                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\VKYII.h",1
   185                        	.line	3
   186                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\Half_Life_Genesis_FMX.c",7
   187                        ;#include "palette.h"
   188                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\palette.h",0
   189                        	data
   190                        	xdef	~~palette
   191                        ~~palette:
   192 00:0176: 00 00 00 00  	db	$0,$0,$0,$0,$D,$E,$E,$0,$11,$12
       00:017A: 0D 0E 0E 00 
       00:017E: 11 12 
   193 00:0180: 12 00 25 26  	db	$12,$0,$25,$26,$26,$0,$2D,$2E,$2E,$0
       00:0184: 26 00 2D 2E 
       00:0188: 2E 00 
   194 00:018A: 47 48 48 00  	db	$47,$48,$48,$0,$58,$59,$59,$0,$0,$DE
       00:018E: 58 59 59 00 
       00:0192: 00 DE 
   195 00:0194: FF 00 00 DC  	db	$FF,$0,$0,$DC,$FE,$0,$0,$D8,$FC,$0
       00:0198: FE 00 00 D8 
       00:019C: FC 00 
   196 00:019E: 00 D5 F9 00  	db	$0,$D5,$F9,$0,$1,$D0,$F8,$0,$1,$CB
       00:01A2: 01 D0 F8 00 
       00:01A6: 01 CB 
   197 00:01A8: F5 00 01 BE  	db	$F5,$0,$1,$BE,$F2,$0,$2,$B3,$EC,$0
  Wed Apr 14 2021  0:19                                                                                                    Page 6


       00:01AC: F2 00 02 B3 
       00:01B0: EC 00 
   198 00:01B2: 03 A1 DA 00  	db	$3,$A1,$DA,$0,$1,$A6,$E7,$0,$7,$8F
       00:01B6: 01 A6 E7 00 
       00:01BA: 07 8F 
   199 00:01BC: C3 00 03 97  	db	$C3,$0,$3,$97,$E5,$0,$3,$8D,$D8,$0
       00:01C0: E5 00 03 8D 
       00:01C4: D8 00 
   200 00:01C6: 03 7E C0 00  	db	$3,$7E,$C0,$0,$2,$5C,$93,$0,$3,$88
       00:01CA: 02 5C 93 00 
       00:01CE: 03 88 
   201 00:01D0: DF 00 03 81  	db	$DF,$0,$3,$81,$DC,$0,$6,$68,$B0,$0
       00:01D4: DC 00 06 68 
       00:01D8: B0 00 
   202 00:01DA: 03 78 D9 00  	db	$3,$78,$D9,$0,$3,$6A,$C9,$0,$3,$4
       00:01DE: 03 6A C9 00 
       00:01E2: 03 04 
   203 00:01E4: 05 00 05 06  	db	$5,$0,$5,$6,$7,$0,$D,$F,$11,$0
       00:01E8: 07 00 0D 0F 
       00:01EC: 11 00 
   204 00:01EE: 15 16 17 00  	db	$15,$16,$17,$0,$18,$19,$1A,$0,$19,$1A
       00:01F2: 18 19 1A 00 
       00:01F6: 19 1A 
   205 00:01F8: 1B 00 29 2A  	db	$1B,$0,$29,$2A,$2B,$0,$3,$6A,$D7,$0
       00:01FC: 2B 00 03 6A 
       00:0200: D7 00 
   206 00:0202: 04 5D D1 00  	db	$4,$5D,$D1,$0,$4,$59,$C7,$0,$E,$11
       00:0206: 04 59 C7 00 
       00:020A: 0E 11 
   207 00:020C: 15 00 10 12  	db	$15,$0,$10,$12,$15,$0,$11,$13,$16,$0
       00:0210: 15 00 11 13 
       00:0214: 16 00 
   208 00:0216: 16 18 1B 00  	db	$16,$18,$1B,$0,$2C,$2E,$31,$0,$6,$4D
       00:021A: 2C 2E 31 00 
       00:021E: 06 4D 
   209 00:0220: C7 00 06 09  	db	$C7,$0,$6,$9,$E,$0,$F,$12,$17,$0
       00:0224: 0E 00 0F 12 
       00:0228: 17 00 
   210 00:022A: 12 15 1A 00  	db	$12,$15,$1A,$0,$9,$44,$BC,$0,$5,$A
       00:022E: 09 44 BC 00 
       00:0232: 05 0A 
   211 00:0234: 14 00 04 06  	db	$14,$0,$4,$6,$A,$0,$E,$13,$1D,$0
       00:0238: 0A 00 0E 13 
       00:023C: 1D 00 
   212 00:023E: 04 05 07 00  	db	$4,$5,$7,$0,$9,$B,$F,$0,$B,$D
       00:0242: 09 0B 0F 00 
       00:0246: 0B 0D 
   213 00:0248: 11 00 19 1D  	db	$11,$0,$19,$1D,$25,$0,$8,$9,$B,$0
       00:024C: 25 00 08 09 
       00:0250: 0B 00 
   214 00:0252: 09 0A 0C 00  	db	$9,$A,$C,$0,$27,$2B,$33,$0,$B,$C
       00:0256: 27 2B 33 00 
       00:025A: 0B 0C 
   215 00:025C: 0E 00 0C 0D  	db	$E,$0,$C,$D,$F,$0,$2D,$30,$36,$0
       00:0260: 0F 00 2D 30 
       00:0264: 36 00 
   216 00:0266: 0F 10 12 00  	db	$F,$10,$12,$0,$12,$13,$15,$0,$13,$14
       00:026A: 12 13 15 00 
  Wed Apr 14 2021  0:19                                                                                                    Page 7


       00:026E: 13 14 
   217 00:0270: 16 00 14 15  	db	$16,$0,$14,$15,$17,$0,$34,$36,$3A,$0
       00:0274: 17 00 34 36 
       00:0278: 3A 00 
   218 00:027A: 44 46 4A 00  	db	$44,$46,$4A,$0,$2C,$2D,$2F,$0,$2B,$2C
       00:027E: 2C 2D 2F 00 
       00:0282: 2B 2C 
   219 00:0284: 2E 00 32 33  	db	$2E,$0,$32,$33,$35,$0,$53,$54,$56,$0
       00:0288: 35 00 53 54 
       00:028C: 56 00 
   220 00:028E: 05 3B B2 00  	db	$5,$3B,$B2,$0,$13,$1D,$33,$0,$15,$1B
       00:0292: 13 1D 33 00 
       00:0296: 15 1B 
   221 00:0298: 28 00 15 19  	db	$28,$0,$15,$19,$22,$0,$23,$29,$36,$0
       00:029C: 22 00 23 29 
       00:02A0: 36 00 
   222 00:02A2: 2A 2E 37 00  	db	$2A,$2E,$37,$0,$4,$2C,$91,$0,$4,$26
       00:02A6: 04 2C 91 00 
       00:02AA: 04 26 
   223 00:02AC: 7C 00 04 25  	db	$7C,$0,$4,$25,$74,$0,$6,$35,$A7,$0
       00:02B0: 74 00 06 35 
       00:02B4: A7 00 
   224 00:02B6: 05 28 81 00  	db	$5,$28,$81,$0,$4,$22,$6C,$0,$8,$31
       00:02BA: 04 22 6C 00 
       00:02BE: 08 31 
   225 00:02C0: 98 00 09 30  	db	$98,$0,$9,$30,$8D,$0,$9,$2D,$86,$0
       00:02C4: 8D 00 09 2D 
       00:02C8: 86 00 
   226 00:02CA: 0E 3F B4 00  	db	$E,$3F,$B4,$0,$8,$22,$62,$0,$5,$15
       00:02CE: 08 22 62 00 
       00:02D2: 05 15 
   227 00:02D4: 3D 00 07 1D  	db	$3D,$0,$7,$1D,$54,$0,$7,$1B,$4D,$0
       00:02D8: 54 00 07 1B 
       00:02DC: 4D 00 
   228 00:02DE: 0B 26 6A 00  	db	$B,$26,$6A,$0,$12,$3C,$A6,$0,$5,$10
       00:02E2: 12 3C A6 00 
       00:02E6: 05 10 
   229 00:02E8: 2C 00 0C 25  	db	$2C,$0,$C,$25,$64,$0,$6,$13,$32,$0
       00:02EC: 64 00 06 13 
       00:02F0: 32 00 
   230 00:02F2: 0A 1D 4D 00  	db	$A,$1D,$4D,$0,$C,$23,$5A,$0,$15,$3A
       00:02F6: 0C 23 5A 00 
       00:02FA: 15 3A 
   231 00:02FC: 95 00 09 19  	db	$95,$0,$9,$19,$40,$0,$9,$17,$3A,$0
       00:0300: 40 00 09 17 
       00:0304: 3A 00 
   232 00:0306: 19 39 88 00  	db	$19,$39,$88,$0,$10,$21,$4C,$0,$D,$1B
       00:030A: 10 21 4C 00 
       00:030E: 0D 1B 
   233 00:0310: 3D 00 0B 16  	db	$3D,$0,$B,$16,$31,$0,$17,$2D,$64,$0
       00:0314: 31 00 17 2D 
       00:0318: 64 00 
   234 00:031A: 1C 36 77 00  	db	$1C,$36,$77,$0,$11,$1F,$42,$0,$B,$14
       00:031E: 11 1F 42 00 
       00:0322: 0B 14 
   235 00:0324: 2A 00 0F 1A  	db	$2A,$0,$F,$1A,$35,$0,$1E,$33,$68,$0
       00:0328: 35 00 1E 33 
       00:032C: 68 00 
  Wed Apr 14 2021  0:19                                                                                                    Page 8


   236 00:032E: 1F 31 5D 00  	db	$1F,$31,$5D,$0,$22,$35,$65,$0,$18,$25
       00:0332: 22 35 65 00 
       00:0336: 18 25 
   237 00:0338: 45 00 09 0D  	db	$45,$0,$9,$D,$17,$0,$24,$32,$55,$0
       00:033C: 17 00 24 32 
       00:0340: 55 00 
   238 00:0342: 08 0B 12 00  	db	$8,$B,$12,$0,$1D,$26,$3C,$0,$11,$16
       00:0346: 1D 26 3C 00 
       00:034A: 11 16 
   239 00:034C: 22 00 26 30  	db	$22,$0,$26,$30,$48,$0,$C,$F,$16,$0
       00:0350: 48 00 0C 0F 
       00:0354: 16 00 
   240 00:0356: 19 1F 2D 00  	db	$19,$1F,$2D,$0,$1C,$22,$31,$0,$F,$12
       00:035A: 1C 22 31 00 
       00:035E: 0F 12 
   241 00:0360: 19 00 14 17  	db	$19,$0,$14,$17,$1E,$0,$2D,$32,$3E,$0
       00:0364: 1E 00 2D 32 
       00:0368: 3E 00 
   242 00:036A: 2A 2C 31 00  	db	$2A,$2C,$31,$0,$37,$39,$3E,$0,$40,$42
       00:036E: 37 39 3E 00 
       00:0372: 40 42 
   243 00:0374: 47 00 04 2F  	db	$47,$0,$4,$2F,$9D,$0,$4,$1E,$61,$0
       00:0378: 9D 00 04 1E 
       00:037C: 61 00 
   244 00:037E: 04 17 49 00  	db	$4,$17,$49,$0,$9,$26,$71,$0,$6,$17
       00:0382: 09 26 71 00 
       00:0386: 06 17 
   245 00:0388: 44 00 0B 2A  	db	$44,$0,$B,$2A,$7A,$0,$D,$2A,$75,$0
       00:038C: 7A 00 0D 2A 
       00:0390: 75 00 
   246 00:0392: 0D 28 6E 00  	db	$D,$28,$6E,$0,$C,$1C,$45,$0,$12,$27
       00:0396: 0C 1C 45 00 
       00:039A: 12 27 
   247 00:039C: 5E 00 08 11  	db	$5E,$0,$8,$11,$28,$0,$7,$E,$22,$0
       00:03A0: 28 00 07 0E 
       00:03A4: 22 00 
   248 00:03A6: 06 0C 1D 00  	db	$6,$C,$1D,$0,$12,$1D,$3A,$0,$C,$12
       00:03AA: 12 1D 3A 00 
       00:03AE: 0C 12 
   249 00:03B0: 22 00 10 18  	db	$22,$0,$10,$18,$2D,$0,$E,$15,$27,$0
       00:03B4: 2D 00 0E 15 
       00:03B8: 27 00 
   250 00:03BA: 0A 0F 1C 00  	db	$A,$F,$1C,$0,$21,$2D,$4C,$0,$16,$1C
       00:03BE: 21 2D 4C 00 
       00:03C2: 16 1C 
   251 00:03C4: 2C 00 25 2C  	db	$2C,$0,$25,$2C,$3E,$0,$12,$15,$1D,$0
       00:03C8: 3E 00 12 15 
       00:03CC: 1D 00 
   252 00:03CE: 2A 30 41 00  	db	$2A,$30,$41,$0,$31,$37,$48,$0,$12,$17
       00:03D2: 31 37 48 00 
       00:03D6: 12 17 
   253 00:03D8: 26 00 15 19  	db	$26,$0,$15,$19,$25,$0,$18,$1A,$20,$0
       00:03DC: 25 00 18 1A 
       00:03E0: 20 00 
   254 00:03E2: 10 11 14 00  	db	$10,$11,$14,$0,$23,$25,$2B,$0,$15,$16
       00:03E6: 23 25 2B 00 
       00:03EA: 15 16 
   255 00:03EC: 19 00 1B 1C  	db	$19,$0,$1B,$1C,$1F,$0,$27,$28,$2B,$0
  Wed Apr 14 2021  0:19                                                                                                    Page 9


       00:03F0: 1F 00 27 28 
       00:03F4: 2B 00 
   256 00:03F6: 2F 30 33 00  	db	$2F,$30,$33,$0,$3D,$3F,$46,$0,$1F,$20
       00:03FA: 3D 3F 46 00 
       00:03FE: 1F 20 
   257 00:0400: 24 00 22 23  	db	$24,$0,$22,$23,$27,$0,$29,$2A,$2E,$0
       00:0404: 27 00 29 2A 
       00:0408: 2E 00 
   258 00:040A: 33 34 38 00  	db	$33,$34,$38,$0,$3C,$3D,$42,$0,$21,$21
       00:040E: 3C 3D 42 00 
       00:0412: 21 21 
   259 00:0414: 22 00 53 53  	db	$22,$0,$53,$53,$55,$0,$51,$51,$53,$0
       00:0418: 55 00 51 51 
       00:041C: 53 00 
   260 00:041E: 29 29 2A 00  	db	$29,$29,$2A,$0,$25,$25,$26,$0,$2C,$2C
       00:0422: 25 25 26 00 
       00:0426: 2C 2C 
   261 00:0428: 2D 00 FF FF  	db	$2D,$0,$FF,$FF,$FF,$0,$FC,$FC,$FC,$0
       00:042C: FF 00 FC FC 
       00:0430: FC 00 
   262 00:0432: F8 F8 F8 00  	db	$F8,$F8,$F8,$0,$F3,$F3,$F3,$0,$EC,$EC
       00:0436: F3 F3 F3 00 
       00:043A: EC EC 
   263 00:043C: EC 00 E1 E1  	db	$EC,$0,$E1,$E1,$E1,$0,$DC,$DC,$DC,$0
       00:0440: E1 00 DC DC 
       00:0444: DC 00 
   264 00:0446: D5 D5 D5 00  	db	$D5,$D5,$D5,$0,$D2,$D2,$D2,$0,$CD,$CD
       00:044A: D2 D2 D2 00 
       00:044E: CD CD 
   265 00:0450: CD 00 C9 C9  	db	$CD,$0,$C9,$C9,$C9,$0,$C5,$C5,$C5,$0
       00:0454: C9 00 C5 C5 
       00:0458: C5 00 
   266 00:045A: C3 C3 C3 00  	db	$C3,$C3,$C3,$0,$C0,$C0,$C0,$0,$BA,$BA
       00:045E: C0 C0 C0 00 
       00:0462: BA BA 
   267 00:0464: BA 00 B2 B2  	db	$BA,$0,$B2,$B2,$B2,$0,$AD,$AD,$AD,$0
       00:0468: B2 00 AD AD 
       00:046C: AD 00 
   268 00:046E: A9 A9 A9 00  	db	$A9,$A9,$A9,$0,$A4,$A4,$A4,$0,$9D,$9D
       00:0472: A4 A4 A4 00 
       00:0476: 9D 9D 
   269 00:0478: 9D 00 96 96  	db	$9D,$0,$96,$96,$96,$0,$92,$92,$92,$0
       00:047C: 96 00 92 92 
       00:0480: 92 00 
   270 00:0482: 8E 8E 8E 00  	db	$8E,$8E,$8E,$0,$8A,$8A,$8A,$0,$85,$85
       00:0486: 8A 8A 8A 00 
       00:048A: 85 85 
   271 00:048C: 85 00 82 82  	db	$85,$0,$82,$82,$82,$0,$7D,$7D,$7D,$0
       00:0490: 82 00 7D 7D 
       00:0494: 7D 00 
   272 00:0496: 7A 7A 7A 00  	db	$7A,$7A,$7A,$0,$77,$77,$77,$0,$74,$74
       00:049A: 77 77 77 00 
       00:049E: 74 74 
   273 00:04A0: 74 00 71 71  	db	$74,$0,$71,$71,$71,$0,$6D,$6D,$6D,$0
       00:04A4: 71 00 6D 6D 
       00:04A8: 6D 00 
   274 00:04AA: 6B 6B 6B 00  	db	$6B,$6B,$6B,$0,$68,$68,$68,$0,$66,$66
       00:04AE: 68 68 68 00 
  Wed Apr 14 2021  0:19                                                                                                    Page 10


       00:04B2: 66 66 
   275 00:04B4: 66 00 63 63  	db	$66,$0,$63,$63,$63,$0,$60,$60,$60,$0
       00:04B8: 63 00 60 60 
       00:04BC: 60 00 
   276 00:04BE: 5E 5E 5E 00  	db	$5E,$5E,$5E,$0,$5C,$5C,$5C,$0,$5B,$5B
       00:04C2: 5C 5C 5C 00 
       00:04C6: 5B 5B 
   277 00:04C8: 5B 00 57 57  	db	$5B,$0,$57,$57,$57,$0,$55,$55,$55,$0
       00:04CC: 57 00 55 55 
       00:04D0: 55 00 
   278 00:04D2: 53 53 53 00  	db	$53,$53,$53,$0,$50,$50,$50,$0,$4F,$4F
       00:04D6: 50 50 50 00 
       00:04DA: 4F 4F 
   279 00:04DC: 4F 00 4D 4D  	db	$4F,$0,$4D,$4D,$4D,$0,$4B,$4B,$4B,$0
       00:04E0: 4D 00 4B 4B 
       00:04E4: 4B 00 
   280 00:04E6: 48 48 48 00  	db	$48,$48,$48,$0,$47,$47,$47,$0,$45,$45
       00:04EA: 47 47 47 00 
       00:04EE: 45 45 
   281 00:04F0: 45 00 43 43  	db	$45,$0,$43,$43,$43,$0,$40,$40,$40,$0
       00:04F4: 43 00 40 40 
       00:04F8: 40 00 
   282 00:04FA: 3F 3F 3F 00  	db	$3F,$3F,$3F,$0,$3D,$3D,$3D,$0,$3B,$3B
       00:04FE: 3D 3D 3D 00 
       00:0502: 3B 3B 
   283 00:0504: 3B 00 39 39  	db	$3B,$0,$39,$39,$39,$0,$36,$36,$36,$0
       00:0508: 39 00 36 36 
       00:050C: 36 00 
   284 00:050E: 34 34 34 00  	db	$34,$34,$34,$0,$33,$33,$33,$0,$30,$30
       00:0512: 33 33 33 00 
       00:0516: 30 30 
   285 00:0518: 30 00 2E 2E  	db	$30,$0,$2E,$2E,$2E,$0,$2A,$2A,$2A,$0
       00:051C: 2E 00 2A 2A 
       00:0520: 2A 00 
   286 00:0522: 29 29 29 00  	db	$29,$29,$29,$0,$27,$27,$27,$0,$25,$25
       00:0526: 27 27 27 00 
       00:052A: 25 25 
   287 00:052C: 25 00 23 23  	db	$25,$0,$23,$23,$23,$0,$21,$21,$21,$0
       00:0530: 23 00 21 21 
       00:0534: 21 00 
   288 00:0536: 1E 1E 1E 00  	db	$1E,$1E,$1E,$0,$1C,$1C,$1C,$0,$1A,$1A
       00:053A: 1C 1C 1C 00 
       00:053E: 1A 1A 
   289 00:0540: 1A 00 18 18  	db	$1A,$0,$18,$18,$18,$0,$16,$16,$16,$0
       00:0544: 18 00 16 16 
       00:0548: 16 00 
   290 00:054A: 14 14 14 00  	db	$14,$14,$14,$0,$12,$12,$12,$0,$10,$10
       00:054E: 12 12 12 00 
       00:0552: 10 10 
   291 00:0554: 10 00 0E 0E  	db	$10,$0,$E,$E,$E,$0,$C,$C,$C,$0
       00:0558: 0E 00 0C 0C 
       00:055C: 0C 00 
   292 00:055E: 0B 0B 0B 00  	db	$B,$B,$B,$0,$9,$9,$9,$0,$6,$6
       00:0562: 09 09 09 00 
       00:0566: 06 06 
   293 00:0568: 06 00 05 05  	db	$6,$0,$5,$5,$5,$0,$3,$3,$3,$0
       00:056C: 05 00 03 03 
       00:0570: 03 00 
  Wed Apr 14 2021  0:19                                                                                                    Page 11


   294 00:0572: 01 01 01 00  	db	$1,$1,$1,$0
   295 00:0576:              	ends
   296                        	.line	68
   297                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\Half_Life_Genesis_FMX.c",8
   298                        ;#include "Trigo_LUT.h"
   299                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\Trigo_LUT.h",0
   300                        	data
   301                        	xdef	~~TRIGO_SIN
   302                        ~~TRIGO_SIN:
   303 00:0576: 00 00 06 00  	dw	$0,$6,$C,$12,$19,$1F,$25,$2B,$31,$38
       00:057A: 0C 00 12 00 
       00:057E: 19 00 1F 00 
       00:0582: 25 00 2B 00 
       00:0586: 31 00 38 00 
   304 00:058A: 3E 00 44 00  	dw	$3E,$44,$4A,$50,$56,$5C,$61,$67,$6D,$73
       00:058E: 4A 00 50 00 
       00:0592: 56 00 5C 00 
       00:0596: 61 00 67 00 
       00:059A: 6D 00 73 00 
   305 00:059E: 78 00 7E 00  	dw	$78,$7E,$83,$88,$8E,$93,$98,$9D,$A2,$A7
       00:05A2: 83 00 88 00 
       00:05A6: 8E 00 93 00 
       00:05AA: 98 00 9D 00 
       00:05AE: A2 00 A7 00 
   306 00:05B2: AB 00 B0 00  	dw	$AB,$B0,$B5,$B9,$BD,$C1,$C5,$C9,$CD,$D1
       00:05B6: B5 00 B9 00 
       00:05BA: BD 00 C1 00 
       00:05BE: C5 00 C9 00 
       00:05C2: CD 00 D1 00 
   307 00:05C6: D4 00 D8 00  	dw	$D4,$D8,$DB,$DE,$E1,$E4,$E7,$EA,$EC,$EE
       00:05CA: DB 00 DE 00 
       00:05CE: E1 00 E4 00 
       00:05D2: E7 00 EA 00 
       00:05D6: EC 00 EE 00 
   308 00:05DA: F1 00 F3 00  	dw	$F1,$F3,$F4,$F6,$F8,$F9,$FB,$FC,$FD,$FE
       00:05DE: F4 00 F6 00 
       00:05E2: F8 00 F9 00 
       00:05E6: FB 00 FC 00 
       00:05EA: FD 00 FE 00 
   309 00:05EE: FE 00 FF 00  	dw	$FE,$FF,$FF,$FF,$100,$FF,$FF,$FF,$FE,$FE
       00:05F2: FF 00 FF 00 
       00:05F6: 00 01 FF 00 
       00:05FA: FF 00 FF 00 
       00:05FE: FE 00 FE 00 
   310 00:0602: FD 00 FC 00  	dw	$FD,$FC,$FB,$F9,$F8,$F6,$F4,$F3,$F1,$EE
       00:0606: FB 00 F9 00 
       00:060A: F8 00 F6 00 
       00:060E: F4 00 F3 00 
       00:0612: F1 00 EE 00 
   311 00:0616: EC 00 EA 00  	dw	$EC,$EA,$E7,$E4,$E1,$DE,$DB,$D8,$D4,$D1
       00:061A: E7 00 E4 00 
       00:061E: E1 00 DE 00 
       00:0622: DB 00 D8 00 
       00:0626: D4 00 D1 00 
   312 00:062A: CD 00 C9 00  	dw	$CD,$C9,$C5,$C1,$BD,$B9,$B5,$B0,$AB,$A7
       00:062E: C5 00 C1 00 
       00:0632: BD 00 B9 00 
       00:0636: B5 00 B0 00 
  Wed Apr 14 2021  0:19                                                                                                    Page 12


       00:063A: AB 00 A7 00 
   313 00:063E: A2 00 9D 00  	dw	$A2,$9D,$98,$93,$8E,$88,$83,$7E,$78,$73
       00:0642: 98 00 93 00 
       00:0646: 8E 00 88 00 
       00:064A: 83 00 7E 00 
       00:064E: 78 00 73 00 
   314 00:0652: 6D 00 67 00  	dw	$6D,$67,$61,$5C,$56,$50,$4A,$44,$3E,$38
       00:0656: 61 00 5C 00 
       00:065A: 56 00 50 00 
       00:065E: 4A 00 44 00 
       00:0662: 3E 00 38 00 
   315 00:0666: 31 00 2B 00  	dw	$31,$2B,$25,$1F,$19,$12,$C,$6,$0,$FFFA
       00:066A: 25 00 1F 00 
       00:066E: 19 00 12 00 
       00:0672: 0C 00 06 00 
       00:0676: 00 00 FA FF 
   316 00:067A: F4 FF EE FF  	dw	$FFF4,$FFEE,$FFE7,$FFE1,$FFDB,$FFD5,$FFCF,$FFC8,$FFC2,$FFBC
       00:067E: E7 FF E1 FF 
       00:0682: DB FF D5 FF 
       00:0686: CF FF C8 FF 
       00:068A: C2 FF BC FF 
   317 00:068E: B6 FF B0 FF  	dw	$FFB6,$FFB0,$FFAA,$FFA4,$FF9F,$FF99,$FF93,$FF8D,$FF88,$FF82
       00:0692: AA FF A4 FF 
       00:0696: 9F FF 99 FF 
       00:069A: 93 FF 8D FF 
       00:069E: 88 FF 82 FF 
   318 00:06A2: 7D FF 78 FF  	dw	$FF7D,$FF78,$FF72,$FF6D,$FF68,$FF63,$FF5E,$FF59,$FF55,$FF50
       00:06A6: 72 FF 6D FF 
       00:06AA: 68 FF 63 FF 
       00:06AE: 5E FF 59 FF 
       00:06B2: 55 FF 50 FF 
   319 00:06B6: 4B FF 47 FF  	dw	$FF4B,$FF47,$FF43,$FF3F,$FF3B,$FF37,$FF33,$FF2F,$FF2C,$FF28
       00:06BA: 43 FF 3F FF 
       00:06BE: 3B FF 37 FF 
       00:06C2: 33 FF 2F FF 
       00:06C6: 2C FF 28 FF 
   320 00:06CA: 25 FF 22 FF  	dw	$FF25,$FF22,$FF1F,$FF1C,$FF19,$FF16,$FF14,$FF12,$FF0F,$FF0D
       00:06CE: 1F FF 1C FF 
       00:06D2: 19 FF 16 FF 
       00:06D6: 14 FF 12 FF 
       00:06DA: 0F FF 0D FF 
   321 00:06DE: 0C FF 0A FF  	dw	$FF0C,$FF0A,$FF08,$FF07,$FF05,$FF04,$FF03,$FF02,$FF02,$FF01
       00:06E2: 08 FF 07 FF 
       00:06E6: 05 FF 04 FF 
       00:06EA: 03 FF 02 FF 
       00:06EE: 02 FF 01 FF 
   322 00:06F2: 01 FF 01 FF  	dw	$FF01,$FF01,$FF00,$FF01,$FF01,$FF01,$FF02,$FF02,$FF03,$FF04
       00:06F6: 00 FF 01 FF 
       00:06FA: 01 FF 01 FF 
       00:06FE: 02 FF 02 FF 
       00:0702: 03 FF 04 FF 
   323 00:0706: 05 FF 07 FF  	dw	$FF05,$FF07,$FF08,$FF0A,$FF0C,$FF0D,$FF0F,$FF12,$FF14,$FF16
       00:070A: 08 FF 0A FF 
       00:070E: 0C FF 0D FF 
       00:0712: 0F FF 12 FF 
       00:0716: 14 FF 16 FF 
   324 00:071A: 19 FF 1C FF  	dw	$FF19,$FF1C,$FF1F,$FF22,$FF25,$FF28,$FF2C,$FF2F,$FF33,$FF37
       00:071E: 1F FF 22 FF 
  Wed Apr 14 2021  0:19                                                                                                    Page 13


       00:0722: 25 FF 28 FF 
       00:0726: 2C FF 2F FF 
       00:072A: 33 FF 37 FF 
   325 00:072E: 3B FF 3F FF  	dw	$FF3B,$FF3F,$FF43,$FF47,$FF4B,$FF50,$FF55,$FF59,$FF5E,$FF63
       00:0732: 43 FF 47 FF 
       00:0736: 4B FF 50 FF 
       00:073A: 55 FF 59 FF 
       00:073E: 5E FF 63 FF 
   326 00:0742: 68 FF 6D FF  	dw	$FF68,$FF6D,$FF72,$FF78,$FF7D,$FF82,$FF88,$FF8D,$FF93,$FF99
       00:0746: 72 FF 78 FF 
       00:074A: 7D FF 82 FF 
       00:074E: 88 FF 8D FF 
       00:0752: 93 FF 99 FF 
   327 00:0756: 9F FF A4 FF  	dw	$FF9F,$FFA4,$FFAA,$FFB0,$FFB6,$FFBC,$FFC2,$FFC8,$FFCF,$FFD5
       00:075A: AA FF B0 FF 
       00:075E: B6 FF BC FF 
       00:0762: C2 FF C8 FF 
       00:0766: CF FF D5 FF 
   328 00:076A: DB FF E1 FF  	dw	$FFDB,$FFE1,$FFE7,$FFEE,$FFF4,$FFFA
       00:076E: E7 FF EE FF 
       00:0772: F4 FF FA FF 
   329 00:0776:              	ends
   330                        	data
   331                        	xdef	~~TRIGO_COS
   332                        ~~TRIGO_COS:
   333 00:0776: 00 01 FF 00  	dw	$100,$FF,$FF,$FF,$FE,$FE,$FD,$FC,$FB,$F9
       00:077A: FF 00 FF 00 
       00:077E: FE 00 FE 00 
       00:0782: FD 00 FC 00 
       00:0786: FB 00 F9 00 
   334 00:078A: F8 00 F6 00  	dw	$F8,$F6,$F4,$F3,$F1,$EE,$EC,$EA,$E7,$E4
       00:078E: F4 00 F3 00 
       00:0792: F1 00 EE 00 
       00:0796: EC 00 EA 00 
       00:079A: E7 00 E4 00 
   335 00:079E: E1 00 DE 00  	dw	$E1,$DE,$DB,$D8,$D4,$D1,$CD,$C9,$C5,$C1
       00:07A2: DB 00 D8 00 
       00:07A6: D4 00 D1 00 
       00:07AA: CD 00 C9 00 
       00:07AE: C5 00 C1 00 
   336 00:07B2: BD 00 B9 00  	dw	$BD,$B9,$B5,$B0,$AB,$A7,$A2,$9D,$98,$93
       00:07B6: B5 00 B0 00 
       00:07BA: AB 00 A7 00 
       00:07BE: A2 00 9D 00 
       00:07C2: 98 00 93 00 
   337 00:07C6: 8E 00 88 00  	dw	$8E,$88,$83,$7E,$78,$73,$6D,$67,$61,$5C
       00:07CA: 83 00 7E 00 
       00:07CE: 78 00 73 00 
       00:07D2: 6D 00 67 00 
       00:07D6: 61 00 5C 00 
   338 00:07DA: 56 00 50 00  	dw	$56,$50,$4A,$44,$3E,$38,$31,$2B,$25,$1F
       00:07DE: 4A 00 44 00 
       00:07E2: 3E 00 38 00 
       00:07E6: 31 00 2B 00 
       00:07EA: 25 00 1F 00 
   339 00:07EE: 19 00 12 00  	dw	$19,$12,$C,$6,$0,$FFFA,$FFF4,$FFEE,$FFE7,$FFE1
       00:07F2: 0C 00 06 00 
       00:07F6: 00 00 FA FF 
  Wed Apr 14 2021  0:19                                                                                                    Page 14


       00:07FA: F4 FF EE FF 
       00:07FE: E7 FF E1 FF 
   340 00:0802: DB FF D5 FF  	dw	$FFDB,$FFD5,$FFCF,$FFC8,$FFC2,$FFBC,$FFB6,$FFB0,$FFAA,$FFA4
       00:0806: CF FF C8 FF 
       00:080A: C2 FF BC FF 
       00:080E: B6 FF B0 FF 
       00:0812: AA FF A4 FF 
   341 00:0816: 9F FF 99 FF  	dw	$FF9F,$FF99,$FF93,$FF8D,$FF88,$FF82,$FF7D,$FF78,$FF72,$FF6D
       00:081A: 93 FF 8D FF 
       00:081E: 88 FF 82 FF 
       00:0822: 7D FF 78 FF 
       00:0826: 72 FF 6D FF 
   342 00:082A: 68 FF 63 FF  	dw	$FF68,$FF63,$FF5E,$FF59,$FF55,$FF50,$FF4B,$FF47,$FF43,$FF3F
       00:082E: 5E FF 59 FF 
       00:0832: 55 FF 50 FF 
       00:0836: 4B FF 47 FF 
       00:083A: 43 FF 3F FF 
   343 00:083E: 3B FF 37 FF  	dw	$FF3B,$FF37,$FF33,$FF2F,$FF2C,$FF28,$FF25,$FF22,$FF1F,$FF1C
       00:0842: 33 FF 2F FF 
       00:0846: 2C FF 28 FF 
       00:084A: 25 FF 22 FF 
       00:084E: 1F FF 1C FF 
   344 00:0852: 19 FF 16 FF  	dw	$FF19,$FF16,$FF14,$FF12,$FF0F,$FF0D,$FF0C,$FF0A,$FF08,$FF07
       00:0856: 14 FF 12 FF 
       00:085A: 0F FF 0D FF 
       00:085E: 0C FF 0A FF 
       00:0862: 08 FF 07 FF 
   345 00:0866: 05 FF 04 FF  	dw	$FF05,$FF04,$FF03,$FF02,$FF02,$FF01,$FF01,$FF01,$FF00,$FF01
       00:086A: 03 FF 02 FF 
       00:086E: 02 FF 01 FF 
       00:0872: 01 FF 01 FF 
       00:0876: 00 FF 01 FF 
   346 00:087A: 01 FF 01 FF  	dw	$FF01,$FF01,$FF02,$FF02,$FF03,$FF04,$FF05,$FF07,$FF08,$FF0A
       00:087E: 02 FF 02 FF 
       00:0882: 03 FF 04 FF 
       00:0886: 05 FF 07 FF 
       00:088A: 08 FF 0A FF 
   347 00:088E: 0C FF 0D FF  	dw	$FF0C,$FF0D,$FF0F,$FF12,$FF14,$FF16,$FF19,$FF1C,$FF1F,$FF22
       00:0892: 0F FF 12 FF 
       00:0896: 14 FF 16 FF 
       00:089A: 19 FF 1C FF 
       00:089E: 1F FF 22 FF 
   348 00:08A2: 25 FF 28 FF  	dw	$FF25,$FF28,$FF2C,$FF2F,$FF33,$FF37,$FF3B,$FF3F,$FF43,$FF47
       00:08A6: 2C FF 2F FF 
       00:08AA: 33 FF 37 FF 
       00:08AE: 3B FF 3F FF 
       00:08B2: 43 FF 47 FF 
   349 00:08B6: 4B FF 50 FF  	dw	$FF4B,$FF50,$FF55,$FF59,$FF5E,$FF63,$FF68,$FF6D,$FF72,$FF78
       00:08BA: 55 FF 59 FF 
       00:08BE: 5E FF 63 FF 
       00:08C2: 68 FF 6D FF 
       00:08C6: 72 FF 78 FF 
   350 00:08CA: 7D FF 82 FF  	dw	$FF7D,$FF82,$FF88,$FF8D,$FF93,$FF99,$FF9F,$FFA4,$FFAA,$FFB0
       00:08CE: 88 FF 8D FF 
       00:08D2: 93 FF 99 FF 
       00:08D6: 9F FF A4 FF 
       00:08DA: AA FF B0 FF 
   351 00:08DE: B6 FF BC FF  	dw	$FFB6,$FFBC,$FFC2,$FFC8,$FFCF,$FFD5,$FFDB,$FFE1,$FFE7,$FFEE
  Wed Apr 14 2021  0:19                                                                                                    Page 15


       00:08E2: C2 FF C8 FF 
       00:08E6: CF FF D5 FF 
       00:08EA: DB FF E1 FF 
       00:08EE: E7 FF EE FF 
   352 00:08F2: F4 FF FA FF  	dw	$FFF4,$FFFA,$0,$6,$C,$12,$19,$1F,$25,$2B
       00:08F6: 00 00 06 00 
       00:08FA: 0C 00 12 00 
       00:08FE: 19 00 1F 00 
       00:0902: 25 00 2B 00 
   353 00:0906: 31 00 38 00  	dw	$31,$38,$3E,$44,$4A,$50,$56,$5C,$61,$67
       00:090A: 3E 00 44 00 
       00:090E: 4A 00 50 00 
       00:0912: 56 00 5C 00 
       00:0916: 61 00 67 00 
   354 00:091A: 6D 00 73 00  	dw	$6D,$73,$78,$7E,$83,$88,$8E,$93,$98,$9D
       00:091E: 78 00 7E 00 
       00:0922: 83 00 88 00 
       00:0926: 8E 00 93 00 
       00:092A: 98 00 9D 00 
   355 00:092E: A2 00 A7 00  	dw	$A2,$A7,$AB,$B0,$B5,$B9,$BD,$C1,$C5,$C9
       00:0932: AB 00 B0 00 
       00:0936: B5 00 B9 00 
       00:093A: BD 00 C1 00 
       00:093E: C5 00 C9 00 
   356 00:0942: CD 00 D1 00  	dw	$CD,$D1,$D4,$D8,$DB,$DE,$E1,$E4,$E7,$EA
       00:0946: D4 00 D8 00 
       00:094A: DB 00 DE 00 
       00:094E: E1 00 E4 00 
       00:0952: E7 00 EA 00 
   357 00:0956: EC 00 EE 00  	dw	$EC,$EE,$F1,$F3,$F4,$F6,$F8,$F9,$FB,$FC
       00:095A: F1 00 F3 00 
       00:095E: F4 00 F6 00 
       00:0962: F8 00 F9 00 
       00:0966: FB 00 FC 00 
   358 00:096A: FD 00 FE 00  	dw	$FD,$FE,$FE,$FF,$FF,$FF
       00:096E: FE 00 FF 00 
       00:0972: FF 00 FF 00 
   359 00:0976:              	ends
   360                        	data
   361                        	xdef	~~TROGO_TAN
   362                        ~~TROGO_TAN:
   363 00:0976: 00 00 06 00  	dw	$0,$6,$C,$12,$19,$1F,$25,$2C,$32,$39
       00:097A: 0C 00 12 00 
       00:097E: 19 00 1F 00 
       00:0982: 25 00 2C 00 
       00:0986: 32 00 39 00 
   364 00:098A: 40 00 46 00  	dw	$40,$46,$4D,$54,$5B,$62,$6A,$71,$79,$80
       00:098E: 4D 00 54 00 
       00:0992: 5B 00 62 00 
       00:0996: 6A 00 71 00 
       00:099A: 79 00 80 00 
   365 00:099E: 88 00 91 00  	dw	$88,$91,$99,$A2,$AB,$B4,$BD,$C7,$D2,$DC
       00:09A2: 99 00 A2 00 
       00:09A6: AB 00 B4 00 
       00:09AA: BD 00 C7 00 
       00:09AE: D2 00 DC 00 
   366 00:09B2: E8 00 F3 00  	dw	$E8,$F3,$FF,$100,$100,$100,$100,$100,$100,$100
       00:09B6: FF 00 00 01 
  Wed Apr 14 2021  0:19                                                                                                    Page 16


       00:09BA: 00 01 00 01 
       00:09BE: 00 01 00 01 
       00:09C2: 00 01 00 01 
   367 00:09C6: 00 01 00 01  	dw	$100,$100,$100,$100,$100,$100,$100,$100,$100,$100
       00:09CA: 00 01 00 01 
       00:09CE: 00 01 00 01 
       00:09D2: 00 01 00 01 
       00:09D6: 00 01 00 01 
   368 00:09DA: 00 01 00 01  	dw	$100,$100,$100,$100,$100,$100,$100,$100,$100,$100
       00:09DE: 00 01 00 01 
       00:09E2: 00 01 00 01 
       00:09E6: 00 01 00 01 
       00:09EA: 00 01 00 01 
   369 00:09EE: 00 01 00 01  	dw	$100,$100,$100,$100,$100,$FF00,$FF00,$FF00,$FF00,$FF00
       00:09F2: 00 01 00 01 
       00:09F6: 00 01 00 FF 
       00:09FA: 00 FF 00 FF 
       00:09FE: 00 FF 00 FF 
   370 00:0A02: 00 FF 00 FF  	dw	$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00
       00:0A06: 00 FF 00 FF 
       00:0A0A: 00 FF 00 FF 
       00:0A0E: 00 FF 00 FF 
       00:0A12: 00 FF 00 FF 
   371 00:0A16: 00 FF 00 FF  	dw	$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00
       00:0A1A: 00 FF 00 FF 
       00:0A1E: 00 FF 00 FF 
       00:0A22: 00 FF 00 FF 
       00:0A26: 00 FF 00 FF 
   372 00:0A2A: 00 FF 00 FF  	dw	$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF0D,$FF18,$FF24
       00:0A2E: 00 FF 00 FF 
       00:0A32: 00 FF 00 FF 
       00:0A36: 00 FF 0D FF 
       00:0A3A: 18 FF 24 FF 
   373 00:0A3E: 2E FF 39 FF  	dw	$FF2E,$FF39,$FF43,$FF4C,$FF55,$FF5E,$FF67,$FF6F,$FF78,$FF80
       00:0A42: 43 FF 4C FF 
       00:0A46: 55 FF 5E FF 
       00:0A4A: 67 FF 6F FF 
       00:0A4E: 78 FF 80 FF 
   374 00:0A52: 87 FF 8F FF  	dw	$FF87,$FF8F,$FF96,$FF9E,$FFA5,$FFAC,$FFB3,$FFBA,$FFC0,$FFC7
       00:0A56: 96 FF 9E FF 
       00:0A5A: A5 FF AC FF 
       00:0A5E: B3 FF BA FF 
       00:0A62: C0 FF C7 FF 
   375 00:0A66: CE FF D4 FF  	dw	$FFCE,$FFD4,$FFDB,$FFE1,$FFE7,$FFEE,$FFF4,$FFFA,$0,$6
       00:0A6A: DB FF E1 FF 
       00:0A6E: E7 FF EE FF 
       00:0A72: F4 FF FA FF 
       00:0A76: 00 00 06 00 
   376 00:0A7A: 0C 00 12 00  	dw	$C,$12,$19,$1F,$25,$2C,$32,$39,$40,$46
       00:0A7E: 19 00 1F 00 
       00:0A82: 25 00 2C 00 
       00:0A86: 32 00 39 00 
       00:0A8A: 40 00 46 00 
   377 00:0A8E: 4D 00 54 00  	dw	$4D,$54,$5B,$62,$6A,$71,$79,$80,$88,$91
       00:0A92: 5B 00 62 00 
       00:0A96: 6A 00 71 00 
       00:0A9A: 79 00 80 00 
       00:0A9E: 88 00 91 00 
  Wed Apr 14 2021  0:19                                                                                                    Page 17


   378 00:0AA2: 99 00 A2 00  	dw	$99,$A2,$AB,$B4,$BD,$C7,$D2,$DC,$E8,$F3
       00:0AA6: AB 00 B4 00 
       00:0AAA: BD 00 C7 00 
       00:0AAE: D2 00 DC 00 
       00:0AB2: E8 00 F3 00 
   379 00:0AB6: FF 00 00 01  	dw	$FF,$100,$100,$100,$100,$100,$100,$100,$100,$100
       00:0ABA: 00 01 00 01 
       00:0ABE: 00 01 00 01 
       00:0AC2: 00 01 00 01 
       00:0AC6: 00 01 00 01 
   380 00:0ACA: 00 01 00 01  	dw	$100,$100,$100,$100,$100,$100,$100,$100,$100,$100
       00:0ACE: 00 01 00 01 
       00:0AD2: 00 01 00 01 
       00:0AD6: 00 01 00 01 
       00:0ADA: 00 01 00 01 
   381 00:0ADE: 00 01 00 01  	dw	$100,$100,$100,$100,$100,$100,$100,$100,$100,$100
       00:0AE2: 00 01 00 01 
       00:0AE6: 00 01 00 01 
       00:0AEA: 00 01 00 01 
       00:0AEE: 00 01 00 01 
   382 00:0AF2: 00 01 00 01  	dw	$100,$100,$100,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00
       00:0AF6: 00 01 00 FF 
       00:0AFA: 00 FF 00 FF 
       00:0AFE: 00 FF 00 FF 
       00:0B02: 00 FF 00 FF 
   383 00:0B06: 00 FF 00 FF  	dw	$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00
       00:0B0A: 00 FF 00 FF 
       00:0B0E: 00 FF 00 FF 
       00:0B12: 00 FF 00 FF 
       00:0B16: 00 FF 00 FF 
   384 00:0B1A: 00 FF 00 FF  	dw	$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00,$FF00
       00:0B1E: 00 FF 00 FF 
       00:0B22: 00 FF 00 FF 
       00:0B26: 00 FF 00 FF 
       00:0B2A: 00 FF 00 FF 
   385 00:0B2E: 00 FF 00 FF  	dw	$FF00,$FF00,$FF00,$FF00,$FF00,$FF0D,$FF18,$FF24,$FF2E,$FF39
       00:0B32: 00 FF 00 FF 
       00:0B36: 00 FF 0D FF 
       00:0B3A: 18 FF 24 FF 
       00:0B3E: 2E FF 39 FF 
   386 00:0B42: 43 FF 4C FF  	dw	$FF43,$FF4C,$FF55,$FF5E,$FF67,$FF6F,$FF78,$FF80,$FF87,$FF8F
       00:0B46: 55 FF 5E FF 
       00:0B4A: 67 FF 6F FF 
       00:0B4E: 78 FF 80 FF 
       00:0B52: 87 FF 8F FF 
   387 00:0B56: 96 FF 9E FF  	dw	$FF96,$FF9E,$FFA5,$FFAC,$FFB3,$FFBA,$FFC0,$FFC7,$FFCE,$FFD4
       00:0B5A: A5 FF AC FF 
       00:0B5E: B3 FF BA FF 
       00:0B62: C0 FF C7 FF 
       00:0B66: CE FF D4 FF 
   388 00:0B6A: DB FF E1 FF  	dw	$FFDB,$FFE1,$FFE7,$FFEE,$FFF4,$FFFA
       00:0B6E: E7 FF EE FF 
       00:0B72: F4 FF FA FF 
   389 00:0B76:              	ends
   390                        	.line	4
   391                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\Half_Life_Genesis_FMX.c",9
   392                        ;
   393                        ;#include <stdio.h>
  Wed Apr 14 2021  0:19                                                                                                    Page 18


   394                        	.file	"C:\WDC\Tools\INCLUDE\stdio.h",0
   395                        	.file	"C:\WDC\Tools\INCLUDE\stdarg.h",0
   396                        	.line	51
   397                        	.file	"C:\WDC\Tools\INCLUDE\stdio.h",40
   398                        	.stag	__stdio,160,6
   399                        	.member	_bp,0,142,8,32
   400                        	.member	_bend,32,142,8,32
   401                        	.member	_buff,64,142,8,32
   402                        	.member	_flags,96,15,8,16
   403                        	.member	_unit,112,14,8,8
   404                        	.member	_bytbuf,120,14,8,8
   405                        	.member	_buflen,128,16,8,16
   406                        	.member	_tmpnum,144,15,8,16
   407                        	.eos
   408                        	.line	219
   409                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\Half_Life_Genesis_FMX.c",11
   410                        ;
   411                        ;
   412                        ;#define ANGLE_MIN 0
   413                        ;#define ANGLE_MAX 255
   414                        ;		
   415                        ;
   416                        ;
   417                        ;extern far uint8_t TILE_MAP_0[];
   418                        ;extern far uint8_t TILE_MAP_1[];
   419                        ;extern far uint8_t TILE_MAP_2[];
   420                        ;
   421                        ;extern far uint8_t TILE_MAP_PIXEL[];
   422                        ;extern far uint8_t TILE_MAP_PALETTE[];
   423                        ;
   424                        ;extern far uint8_t PNJ_CONTRACT_SPIRT_PIXEL[];
   425                        ;extern far uint8_t PNJ_CONTRACT_SPIRT_PALETTE[];
   426                        ;
   427                        ;int main (int argc, char **argv)
   428                        ;{
   429                        	.line	29
   430                        	.line	30
   431                        	code
   432                        	xdef	~~main
   433                        	func
   434                        	.function	30
   435                        ~~main:
   436                        	longa	on
   437                        	longi	on
   438 00:0000: 3B           	tsc
   439 00:0001: 38           	sec
   440 00:0002: E9 28 00     	sbc	#L2
   441 00:0005: 1B           	tcs
   442 00:0006: 0B           	phd
   443 00:0007: 5B           	tcd
   444             00000004   argc_0	set	4
   445             00000006   argv_0	set	6
   446                        	.block	30
   447                        ;	uint16_t loop, test_number = 0;
   448                        ;	uint16_t tile_map_index = 0;
   449                        ;	uint8_t i,j;
   450                        ;	uint8_t angle = ANGLE_MIN, angle_3d = 0;
   451                        ;	uint8_t dir = 1,dir_3d = 1;
  Wed Apr 14 2021  0:19                                                                                                    Page 19


   452                        ;	uint32_t loop_32;
   453                        ;	i = 0;
   454             00000000   loop_1	set	0
   455             00000002   test_number_1	set	2
   456             00000004   tile_map_index_1	set	4
   457             00000006   i_1	set	6
   458             00000007   j_1	set	7
   459             00000008   angle_1	set	8
   460             00000009   angle_3d_1	set	9
   461             0000000A   dir_1	set	10
   462             0000000B   dir_3d_1	set	11
   463             0000000C   loop_32_1	set	12
   464                        	.sym	loop,0,16,1,16
   465                        	.sym	test_number,2,16,1,16
   466                        	.sym	tile_map_index,4,16,1,16
   467                        	.sym	i,6,14,1,8
   468                        	.sym	j,7,14,1,8
   469                        	.sym	angle,8,14,1,8
   470                        	.sym	angle_3d,9,14,1,8
   471                        	.sym	dir,10,14,1,8
   472                        	.sym	dir_3d,11,14,1,8
   473                        	.sym	loop_32,12,18,1,32
   474                        	.sym	argc,4,5,6,16
   475                        	.sym	argv,6,1166,6,32
   476 00:0008: 64 1B        	stz	<L3+test_number_1
   477 00:000A: 64 1D        	stz	<L3+tile_map_index_1
   478 00:000C: E2 20        	sep	#$20
   479                        	longa	off
   480 00:000E: 64 21        	stz	<L3+angle_1
   481 00:0010: 64 22        	stz	<L3+angle_3d_1
   482 00:0012: A9 01        	lda	#$1
   483 00:0014: 85 23        	sta	<L3+dir_1
   484 00:0016: 85 24        	sta	<L3+dir_3d_1
   485                        	.line	37
   486 00:0018: 64 1F        	stz	<L3+i_1
   487                        ;	j = 0;
   488                        	.line	38
   489 00:001A: 64 20        	stz	<L3+j_1
   490                        ;	i++;
   491                        	.line	39
   492 00:001C: E6 1F        	inc	<L3+i_1
   493 00:001E: C2 20        	rep	#$20
   494                        	longa	on
   495                        ;	
   496                        ;	
   497                        ;	Get_VICKY_II_Version();
   498                        	.line	42
   499 00:0020: 22 79 10 03  	jsl	~~Get_VICKY_II_Version
   500                        ;	load_palette(0);
   501                        	.line	43
   502 00:0024: F4 00 00     	pea	#<$0
   503 00:0027: 22 EE 10 03  	jsl	~~load_palette
   504                        ;	load_palette(1);
   505                        	.line	44
   506 00:002B: F4 01 00     	pea	#<$1
   507 00:002E: 22 EE 10 03  	jsl	~~load_palette
   508                        ;	Clear_VRAM_B0_BA();
   509                        	.line	45
  Wed Apr 14 2021  0:19                                                                                                    Page 20


   510 00:0032: 22 5F 11 03  	jsl	~~Clear_VRAM_B0_BA
   511                        ;	Clear_TEXT();
   512                        	.line	46
   513 00:0036: 22 00 10 03  	jsl	~~Clear_TEXT
   514                        ;	
   515                        ;	*((volatile uint8_t *)BORDER_CTRL_REG)  = 0;
   516                        	.line	48
   517 00:003A: E2 20        	sep	#$20
   518                        	longa	off
   519 00:003C: A9 00        	lda	#$0
   520 00:003E: 8F 04 00 AF  	sta	>11468804	; volatile
   521                        ;	
   522                        ;	*((volatile uint8_t *)BM0_CONTROL_REG)  = BM_Enable;
   523                        	.line	50
   524 00:0042: 1A           	ina
   525 00:0043: 8F 00 01 AF  	sta	>11469056	; volatile
   526                        ;	*((volatile uint8_t *)BM0_START_ADDY_L) = 0;
   527                        	.line	51
   528 00:0047: 3A           	dea
   529 00:0048: 8F 01 01 AF  	sta	>11469057	; volatile
   530                        ;	*((volatile uint8_t *)BM0_START_ADDY_M) = 0;
   531                        	.line	52
   532 00:004C: 8F 02 01 AF  	sta	>11469058	; volatile
   533                        ;	*((volatile uint8_t *)BM0_START_ADDY_H) = 0x6; // => 0xB6:0000
   534                        	.line	53
   535 00:0050: A9 06        	lda	#$6
   536 00:0052: 8F 03 01 AF  	sta	>11469059	; volatile
   537                        ;	//*((volatile uint8_t *)MASTER_CTRL_REG_L) = Mstr_Ctrl_Graph_Mode_En | Mstr_Ctrl_Bitmap_En | Mstr_Ct
                    rl_Text_Mode_En | Mstr_Ctrl_Text_Overlay | Mstr_Ctrl_TileMap_En;
   538                        ;	*((volatile uint8_t *)MASTER_CTRL_REG_L) = Mstr_Ctrl_Graph_Mode_En | Mstr_Ctrl_Text_Mode_En | Mstr_C
                    trl_Text_Overlay | Mstr_Ctrl_TileMap_En;
   539                        	.line	55
   540 00:0056: A9 17        	lda	#$17
   541 00:0058: 8F 00 00 AF  	sta	>11468800	; volatile
   542 00:005C: C2 20        	rep	#$20
   543                        	longa	on
   544                        ;	
   545                        ;	VKYII_Load_Palette(TILE_MAP_PALETTE,0);
   546                        	.line	57
   547 00:005E: F4 00 00     	pea	#<$0
   548 00:0061: F4 xx xx     	pea	#^~~TILE_MAP_PALETTE
   549 00:0064: F4 xx xx     	pea	#<~~TILE_MAP_PALETTE
   550 00:0067: 22 xx xx xx  	jsl	~~VKYII_Load_Palette
   551                        ;	VKYII_Load_Palette(TILE_MAP_PALETTE,1);
   552                        	.line	58
   553 00:006B: F4 01 00     	pea	#<$1
   554 00:006E: F4 xx xx     	pea	#^~~TILE_MAP_PALETTE
   555 00:0071: F4 xx xx     	pea	#<~~TILE_MAP_PALETTE
   556 00:0074: 22 xx xx xx  	jsl	~~VKYII_Load_Palette
   557                        ;	VKYII_Load_Palette(TILE_MAP_PALETTE,2);
   558                        	.line	59
   559 00:0078: F4 02 00     	pea	#<$2
   560 00:007B: F4 xx xx     	pea	#^~~TILE_MAP_PALETTE
   561 00:007E: F4 xx xx     	pea	#<~~TILE_MAP_PALETTE
   562 00:0081: 22 xx xx xx  	jsl	~~VKYII_Load_Palette
   563                        ;	VKYII_Load_Palette(TILE_MAP_PALETTE,3);
   564                        	.line	60
   565 00:0085: F4 03 00     	pea	#<$3
  Wed Apr 14 2021  0:19                                                                                                    Page 21


   566 00:0088: F4 xx xx     	pea	#^~~TILE_MAP_PALETTE
   567 00:008B: F4 xx xx     	pea	#<~~TILE_MAP_PALETTE
   568 00:008E: 22 xx xx xx  	jsl	~~VKYII_Load_Palette
   569                        ;	
   570                        ;	/*for(loop_32=0; loop_32<128; loop_32++) // debug purpos
   571                        ;	{
   572                        ;		Copy(TILE_MAP_PIXEL, (far uint8_t *)(0xB60000+(loop_32*640)), 256,loop_32*256);
   573                        ;	}*/
   574                        ;	
   575                        ;
   576                        ;	for(loop_32=0; loop_32<128; loop_32++) // debug purpos
   577                        	.line	68
   578 00:0092: 64 25        	stz	<L3+loop_32_1
   579 00:0094: 64 27        	stz	<L3+loop_32_1+2
   580                        L10003:
   581                        ;	{
   582                        	.line	69
   583                        ;		Copy(TILE_MAP_PIXEL, (far uint8_t *)(0xB00000+(loop_32*256)), 256,loop_32*256);
   584                        	.line	70
   585 00:0096: D4 27        	pei	<L3+loop_32_1+2
   586 00:0098: D4 25        	pei	<L3+loop_32_1
   587 00:009A: A9 08 00     	lda	#$8
   588                        	xref	~~~lasl
   589 00:009D: 22 xx xx xx  	jsl	~~~lasl
   590 00:00A1: 85 01        	sta	<R0
   591 00:00A3: 86 03        	stx	<R0+2
   592 00:00A5: D4 03        	pei	<R0+2
   593 00:00A7: D4 01        	pei	<R0
   594 00:00A9: F4 00 00     	pea	#^$100
   595 00:00AC: F4 00 01     	pea	#<$100
   596 00:00AF: D4 27        	pei	<L3+loop_32_1+2
   597 00:00B1: D4 25        	pei	<L3+loop_32_1
   598 00:00B3: A9 08 00     	lda	#$8
   599                        	xref	~~~lasl
   600 00:00B6: 22 xx xx xx  	jsl	~~~lasl
   601 00:00BA: 85 05        	sta	<R1
   602 00:00BC: 86 07        	stx	<R1+2
   603 00:00BE: A9 00 00     	lda	#$0
   604 00:00C1: 18           	clc
   605 00:00C2: 65 05        	adc	<R1
   606 00:00C4: 85 09        	sta	<R2
   607 00:00C6: A9 B0 00     	lda	#$b0
   608 00:00C9: 65 07        	adc	<R1+2
   609 00:00CB: 48           	pha
   610 00:00CC: D4 09        	pei	<R2
   611 00:00CE: F4 xx xx     	pea	#^~~TILE_MAP_PIXEL
   612 00:00D1: F4 xx xx     	pea	#<~~TILE_MAP_PIXEL
   613 00:00D4: 22 xx xx xx  	jsl	~~Copy
   614                        ;	}
   615                        	.line	71
   616 00:00D8: E6 25        	inc	<L3+loop_32_1
   617 00:00DA: D0 02        	bne	L5
   618 00:00DC: E6 27        	inc	<L3+loop_32_1+2
   619                        L5:
   620 00:00DE: A5 25        	lda	<L3+loop_32_1
   621 00:00E0: C9 80 00     	cmp	#<$80
   622 00:00E3: A5 27        	lda	<L3+loop_32_1+2
   623 00:00E5: E9 00 00     	sbc	#^$80
  Wed Apr 14 2021  0:19                                                                                                    Page 22


   624 00:00E8: 90 AC        	bcc	L10003
   625                        ;	
   626                        ;	/*for(loop_32=0; loop_32<64*64*2; loop_32+=2) // debug purpos
   627                        ;	{
   628                        ;		*(far uint8_t *)(0xB30000+loop_32) = 1;
   629                        ;	}
   630                        ;	for(loop_32=0; loop_32<64*64*2; loop_32+=2) // debug purpos
   631                        ;	{
   632                        ;		*(far uint8_t *)(0xB30001+loop_32) = 0;
   633                        ;	}*/
   634                        ;	//Copy(TILE_MAP_PIXEL, (far uint8_t *)0xB00000, 256*128,0);
   635                        ;
   636                        ;	//VKYII_Load_Palette(PNJ_CONTRACT_SPIRT_PALETTE,1);
   637                        ;	
   638                        ;	
   639                        ;	// -------------------------------------------------------------------------------
   640                        ;	// ----------------- Setup the time engine and load the data ---------------------
   641                        ;	// -------------------------------------------------------------------------------
   642                        ;	*(volatile uint8_t *)TL0_START_ADDY_L   = 0x00; // @ 03:0000 in VRAM => B3:0000 on global
   643                        	.line	89
   644 00:00EA: E2 20        	sep	#$20
   645                        	longa	off
   646 00:00EC: A9 00        	lda	#$0
   647 00:00EE: 8F 01 02 AF  	sta	>11469313	; volatile
   648                        ;	*(volatile uint8_t *)TL0_START_ADDY_M   = 0x00;
   649                        	.line	90
   650 00:00F2: 8F 02 02 AF  	sta	>11469314	; volatile
   651                        ;	*(volatile uint8_t *)TL0_START_ADDY_H   = 0x03;
   652                        	.line	91
   653 00:00F6: A9 03        	lda	#$3
   654 00:00F8: 8F 03 02 AF  	sta	>11469315	; volatile
   655 00:00FC: C2 20        	rep	#$20
   656                        	longa	on
   657                        ;	
   658                        ;	*(volatile uint16_t *)TL0_TOTAL_X_SIZE_L = 64;
   659                        	.line	93
   660 00:00FE: A9 40 00     	lda	#$40
   661 00:0101: 8F 04 02 AF  	sta	>11469316	; volatile
   662                        ;	*(volatile uint16_t *)TL0_TOTAL_Y_SIZE_L = 64;
   663                        	.line	94
   664 00:0105: 8F 06 02 AF  	sta	>11469318	; volatile
   665                        ;	
   666                        ;	*(volatile uint16_t *)TL0_WINDOW_X_POS_L = 0;
   667                        	.line	96
   668 00:0109: A9 00 00     	lda	#$0
   669 00:010C: 8F 08 02 AF  	sta	>11469320	; volatile
   670                        ;	*(volatile uint16_t *)TL0_WINDOW_Y_POS_L = 480/2;
   671                        	.line	97
   672 00:0110: A9 F0 00     	lda	#$f0
   673 00:0113: 8F 0A 02 AF  	sta	>11469322	; volatile
   674                        ;	
   675                        ;	*(volatile uint8_t *)TILESET0_ADDY_L    = 0; // @ 0 in VRAM => B0:0000 on global
   676                        	.line	99
   677 00:0117: E2 20        	sep	#$20
   678                        	longa	off
   679 00:0119: A9 00        	lda	#$0
   680 00:011B: 8F 80 02 AF  	sta	>11469440	; volatile
   681                        ;	*(volatile uint8_t *)TILESET0_ADDY_M    = 0;
  Wed Apr 14 2021  0:19                                                                                                    Page 23


   682                        	.line	100
   683 00:011F: 8F 81 02 AF  	sta	>11469441	; volatile
   684                        ;	*(volatile uint8_t *)TILESET0_ADDY_H    = 0;
   685                        	.line	101
   686 00:0123: 8F 82 02 AF  	sta	>11469442	; volatile
   687                        ;	*(volatile uint8_t *)TILESET0_ADDY_CFG  = 8; // set the Tile engine to use 256*256 tile set
   688                        	.line	102
   689 00:0127: A9 08        	lda	#$8
   690 00:0129: 8F 83 02 AF  	sta	>11469443	; volatile
   691                        ;	*(volatile uint8_t *)(0xAF0283)  = 0x8; // set the Tile engine to use 256*256 tile set
   692                        	.line	103
   693 00:012D: 8F 83 02 AF  	sta	>11469443	; volatile
   694 00:0131: C2 20        	rep	#$20
   695                        	longa	on
   696                        ;	
   697                        ;	VKYII_Load_Tille_Map(TILE_MAP_0, (far uint8_t *)(0xB30000), 64*64);
   698                        	.line	105
   699 00:0133: F4 00 10     	pea	#<$1000
   700 00:0136: F4 B3 00     	pea	#^$b30000
   701 00:0139: F4 00 00     	pea	#<$b30000
   702 00:013C: F4 xx xx     	pea	#^~~TILE_MAP_0
   703 00:013F: F4 xx xx     	pea	#<~~TILE_MAP_0
   704 00:0142: 22 xx xx xx  	jsl	~~VKYII_Load_Tille_Map
   705                        ;	*(volatile uint8_t *)TL0_CONTROL_REG = 1;
   706                        	.line	106
   707 00:0146: E2 20        	sep	#$20
   708                        	longa	off
   709 00:0148: A9 01        	lda	#$1
   710 00:014A: 8F 00 02 AF  	sta	>11469312	; volatile
   711 00:014E: C2 20        	rep	#$20
   712                        	longa	on
   713                        ;	//-------------------------------------------------------------------------------
   714                        ;	/*
   715                        ;	*(volatile uint8_t *)TL2_START_ADDY_L = 0x00; // @ 05:0000 in VRAM => B5:0000 on global
   716                        ;	*(volatile uint8_t *)TL2_START_ADDY_M = 0x00;
   717                        ;	*(volatile uint8_t *)TL2_START_ADDY_H = 0x05;
   718                        ;	
   719                        ;	*(volatile uint8_t *)TL2_TOTAL_X_SIZE_L = 64;
   720                        ;	*(volatile uint8_t *)TL2_TOTAL_X_SIZE_H = 0;
   721                        ;	*(volatile uint8_t *)TL2_TOTAL_Y_SIZE_L = 64;
   722                        ;	*(volatile uint8_t *)TL2_TOTAL_Y_SIZE_H = 0;
   723                        ;	
   724                        ;	*(volatile uint8_t *)TL2_WINDOW_X_POS_L = 0;
   725                        ;	*(volatile uint8_t *)TL2_WINDOW_X_POS_H = 0;
   726                        ;	*(volatile uint8_t *)TL2_WINDOW_Y_POS_L = 480/2;
   727                        ;	*(volatile uint8_t *)TL2_WINDOW_Y_POS_H = 0;
   728                        ;	
   729                        ;	*(volatile uint8_t *)TILESET2_ADDY_L    = 0; // @ 0 in VRAM => B0:0000 on global
   730                        ;	*(volatile uint8_t *)TILESET2_ADDY_M    = 0;
   731                        ;	*(volatile uint8_t *)TILESET2_ADDY_H    = 0;
   732                        ;	*(volatile uint8_t *)TILESET2_ADDY_CFG  = 8; // set the Tile engine to use 256*256 tile set
   733                        ;	
   734                        ;	VKYII_Load_Tille_Map(TILE_MAP_2, (far uint8_t *)(0xB50000), 64*64);
   735                        ;	*(volatile uint8_t *)TL2_CONTROL_REG = 0;
   736                        ;	*/
   737                        ;	//-------------------------------------------------------------------------------
   738                        ;	
   739                        ;	//VKYII_Load_Palette(TILE_MAP_PALETTE,0);
  Wed Apr 14 2021  0:19                                                                                                    Page 24


   740                        ;	
   741                        ;	
   742                        ;	
   743                        ;	
   744                        ;	//*(volatile uint8_t *)TILESET1_ADDY_CFG = 8;
   745                        ;	//*(volatile uint8_t *)TILESET3_ADDY_CFG = 8;
   746                        ;	
   747                        ;	
   748                        ;	/**(volatile uint8_t *)TL1_CONTROL_REG = 0;
   749                        ;	*(volatile uint8_t *)TL3_CONTROL_REG = 0;*/
   750                        ;	//-------------------------------------------------------------------------------
   751                        ;
   752                        ;	point_dest[0] = Move(point_4[0], mv);
   753                        	.line	146
   754 00:0150: 38           	sec
   755 00:0151: 3B           	tsc
   756 00:0152: E9 06 00     	sbc	#6
   757 00:0155: 1B           	tcs
   758 00:0156: 1A           	ina
   759 00:0157: 85 01        	sta	<R0
   760 00:0159: 64 03        	stz	<R0+2
   761 00:015B: F4 xx xx     	pea	#<~~mv
   762 00:015E: D4 03        	pei	<R0+2
   763 00:0160: D4 01        	pei	<R0
   764 00:0162: A9 06 00     	lda	#$6
   765                        	xref	~~~nfmov
   766 00:0165: 22 xx xx xx  	jsl	~~~nfmov
   767 00:0169: 38           	sec
   768 00:016A: 3B           	tsc
   769 00:016B: E9 06 00     	sbc	#6
   770 00:016E: 1B           	tcs
   771 00:016F: 1A           	ina
   772 00:0170: 85 01        	sta	<R0
   773 00:0172: 64 03        	stz	<R0+2
   774 00:0174: F4 xx xx     	pea	#<~~point_4
   775 00:0177: D4 03        	pei	<R0+2
   776 00:0179: D4 01        	pei	<R0
   777 00:017B: A9 06 00     	lda	#$6
   778                        	xref	~~~nfmov
   779 00:017E: 22 xx xx xx  	jsl	~~~nfmov
   780 00:0182: 22 27 1E 03  	jsl	~~Move
   781 00:0186: 85 01        	sta	<R0
   782 00:0188: 86 03        	stx	<R0+2
   783 00:018A: D4 03        	pei	<R0+2
   784 00:018C: D4 01        	pei	<R0
   785 00:018E: F4 xx xx     	pea	#<~~point_dest
   786 00:0191: A9 06 00     	lda	#$6
   787                        	xref	~~~fnmov
   788 00:0194: 22 xx xx xx  	jsl	~~~fnmov
   789                        ;	
   790                        ;	while(1)
   791                        	.line	148
   792                        L10004:
   793                        ;	{
   794                        	.line	149
   795                        ;
   796                        ;
   797                        ;		
  Wed Apr 14 2021  0:19                                                                                                    Page 25


   798                        ;		Print_UINT_16(test_number, 20,20);
   799                        	.line	153
   800 00:0198: F4 14 00     	pea	#<$14
   801 00:019B: F4 14 00     	pea	#<$14
   802 00:019E: D4 1B        	pei	<L3+test_number_1
   803 00:01A0: 22 xx xx xx  	jsl	~~Print_UINT_16
   804                        ;		test_number++;
   805                        	.line	154
   806 00:01A4: E6 1B        	inc	<L3+test_number_1
   807                        ;		
   808                        ;		Drow_line(point_dest[0], point_dest[1], 70);
   809                        	.line	156
   810 00:01A6: F4 46 00     	pea	#<$46
   811 00:01A9: 38           	sec
   812 00:01AA: 3B           	tsc
   813 00:01AB: E9 06 00     	sbc	#6
   814 00:01AE: 1B           	tcs
   815 00:01AF: 1A           	ina
   816 00:01B0: 85 01        	sta	<R0
   817 00:01B2: 64 03        	stz	<R0+2
   818 00:01B4: F4 xx xx     	pea	#<~~point_dest+6
   819 00:01B7: D4 03        	pei	<R0+2
   820 00:01B9: D4 01        	pei	<R0
   821 00:01BB: A9 06 00     	lda	#$6
   822                        	xref	~~~nfmov
   823 00:01BE: 22 xx xx xx  	jsl	~~~nfmov
   824 00:01C2: 38           	sec
   825 00:01C3: 3B           	tsc
   826 00:01C4: E9 06 00     	sbc	#6
   827 00:01C7: 1B           	tcs
   828 00:01C8: 1A           	ina
   829 00:01C9: 85 01        	sta	<R0
   830 00:01CB: 64 03        	stz	<R0+2
   831 00:01CD: F4 xx xx     	pea	#<~~point_dest
   832 00:01D0: D4 03        	pei	<R0+2
   833 00:01D2: D4 01        	pei	<R0
   834 00:01D4: A9 06 00     	lda	#$6
   835                        	xref	~~~nfmov
   836 00:01D7: 22 xx xx xx  	jsl	~~~nfmov
   837 00:01DB: 22 FC 11 03  	jsl	~~Drow_line
   838                        ;		
   839                        ;		Print_UINT_8(angle, 28, 20);
   840                        	.line	158
   841 00:01DF: F4 14 00     	pea	#<$14
   842 00:01E2: F4 1C 00     	pea	#<$1c
   843 00:01E5: D4 21        	pei	<L3+angle_1
   844 00:01E7: 22 xx xx xx  	jsl	~~Print_UINT_8
   845                        ;		
   846                        ;		Print_HEX_16(point_4[1].x, 30, 20);
   847                        	.line	160
   848 00:01EB: F4 14 00     	pea	#<$14
   849 00:01EE: F4 1E 00     	pea	#<$1e
   850 00:01F1: AD xx xx     	lda	|~~point_4+6
   851 00:01F4: 48           	pha
   852 00:01F5: 22 xx xx xx  	jsl	~~Print_HEX_16
   853                        ;		Print_HEX_16(point_4[1].y, 30, 30);
   854                        	.line	161
   855 00:01F9: F4 1E 00     	pea	#<$1e
  Wed Apr 14 2021  0:19                                                                                                    Page 26


   856 00:01FC: F4 1E 00     	pea	#<$1e
   857 00:01FF: AD xx xx     	lda	|~~point_4+8
   858 00:0202: 48           	pha
   859 00:0203: 22 xx xx xx  	jsl	~~Print_HEX_16
   860                        ;		Print_INT_16(point_4[1].x, 31, 20);
   861                        	.line	162
   862 00:0207: F4 14 00     	pea	#<$14
   863 00:020A: F4 1F 00     	pea	#<$1f
   864 00:020D: AD xx xx     	lda	|~~point_4+6
   865 00:0210: 48           	pha
   866 00:0211: 22 xx xx xx  	jsl	~~Print_INT_16
   867                        ;		Print_INT_16(point_4[1].y, 31, 30);
   868                        	.line	163
   869 00:0215: F4 1E 00     	pea	#<$1e
   870 00:0218: F4 1F 00     	pea	#<$1f
   871 00:021B: AD xx xx     	lda	|~~point_4+8
   872 00:021E: 48           	pha
   873 00:021F: 22 xx xx xx  	jsl	~~Print_INT_16
   874                        ;		
   875                        ;		Print_HEX_16(Rot_Z(point_4[1],angle).x, 33, 20);
   876                        	.line	165
   877 00:0223: F4 14 00     	pea	#<$14
   878 00:0226: F4 21 00     	pea	#<$21
   879 00:0229: D4 21        	pei	<L3+angle_1
   880 00:022B: 38           	sec
   881 00:022C: 3B           	tsc
   882 00:022D: E9 06 00     	sbc	#6
   883 00:0230: 1B           	tcs
   884 00:0231: 1A           	ina
   885 00:0232: 85 01        	sta	<R0
   886 00:0234: 64 03        	stz	<R0+2
   887 00:0236: F4 xx xx     	pea	#<~~point_4+6
   888 00:0239: D4 03        	pei	<R0+2
   889 00:023B: D4 01        	pei	<R0
   890 00:023D: A9 06 00     	lda	#$6
   891                        	xref	~~~nfmov
   892 00:0240: 22 xx xx xx  	jsl	~~~nfmov
   893 00:0244: 22 B9 1C 03  	jsl	~~Rot_Z
   894 00:0248: 85 01        	sta	<R0
   895 00:024A: 86 03        	stx	<R0+2
   896 00:024C: A7 01        	lda	[<R0]
   897 00:024E: 48           	pha
   898 00:024F: 22 xx xx xx  	jsl	~~Print_HEX_16
   899                        ;		Print_HEX_16(Rot_Z(point_4[1],angle).y, 33, 30);
   900                        	.line	166
   901 00:0253: F4 1E 00     	pea	#<$1e
   902 00:0256: F4 21 00     	pea	#<$21
   903 00:0259: D4 21        	pei	<L3+angle_1
   904 00:025B: 38           	sec
   905 00:025C: 3B           	tsc
   906 00:025D: E9 06 00     	sbc	#6
   907 00:0260: 1B           	tcs
   908 00:0261: 1A           	ina
   909 00:0262: 85 01        	sta	<R0
   910 00:0264: 64 03        	stz	<R0+2
   911 00:0266: F4 xx xx     	pea	#<~~point_4+6
   912 00:0269: D4 03        	pei	<R0+2
   913 00:026B: D4 01        	pei	<R0
  Wed Apr 14 2021  0:19                                                                                                    Page 27


   914 00:026D: A9 06 00     	lda	#$6
   915                        	xref	~~~nfmov
   916 00:0270: 22 xx xx xx  	jsl	~~~nfmov
   917 00:0274: 22 B9 1C 03  	jsl	~~Rot_Z
   918 00:0278: 85 01        	sta	<R0
   919 00:027A: 86 03        	stx	<R0+2
   920 00:027C: A0 02 00     	ldy	#$2
   921 00:027F: B7 01        	lda	[<R0],Y
   922 00:0281: 48           	pha
   923 00:0282: 22 xx xx xx  	jsl	~~Print_HEX_16
   924                        ;		Print_INT_16(Rot_Z(point_4[1],angle).x, 34, 20);
   925                        	.line	167
   926 00:0286: F4 14 00     	pea	#<$14
   927 00:0289: F4 22 00     	pea	#<$22
   928 00:028C: D4 21        	pei	<L3+angle_1
   929 00:028E: 38           	sec
   930 00:028F: 3B           	tsc
   931 00:0290: E9 06 00     	sbc	#6
   932 00:0293: 1B           	tcs
   933 00:0294: 1A           	ina
   934 00:0295: 85 01        	sta	<R0
   935 00:0297: 64 03        	stz	<R0+2
   936 00:0299: F4 xx xx     	pea	#<~~point_4+6
   937 00:029C: D4 03        	pei	<R0+2
   938 00:029E: D4 01        	pei	<R0
   939 00:02A0: A9 06 00     	lda	#$6
   940                        	xref	~~~nfmov
   941 00:02A3: 22 xx xx xx  	jsl	~~~nfmov
   942 00:02A7: 22 B9 1C 03  	jsl	~~Rot_Z
   943 00:02AB: 85 01        	sta	<R0
   944 00:02AD: 86 03        	stx	<R0+2
   945 00:02AF: A7 01        	lda	[<R0]
   946 00:02B1: 48           	pha
   947 00:02B2: 22 xx xx xx  	jsl	~~Print_INT_16
   948                        ;		Print_INT_16(Rot_Z(point_4[1],angle).y, 34, 30);
   949                        	.line	168
   950 00:02B6: F4 1E 00     	pea	#<$1e
   951 00:02B9: F4 22 00     	pea	#<$22
   952 00:02BC: D4 21        	pei	<L3+angle_1
   953 00:02BE: 38           	sec
   954 00:02BF: 3B           	tsc
   955 00:02C0: E9 06 00     	sbc	#6
   956 00:02C3: 1B           	tcs
   957 00:02C4: 1A           	ina
   958 00:02C5: 85 01        	sta	<R0
   959 00:02C7: 64 03        	stz	<R0+2
   960 00:02C9: F4 xx xx     	pea	#<~~point_4+6
   961 00:02CC: D4 03        	pei	<R0+2
   962 00:02CE: D4 01        	pei	<R0
   963 00:02D0: A9 06 00     	lda	#$6
   964                        	xref	~~~nfmov
   965 00:02D3: 22 xx xx xx  	jsl	~~~nfmov
   966 00:02D7: 22 B9 1C 03  	jsl	~~Rot_Z
   967 00:02DB: 85 01        	sta	<R0
   968 00:02DD: 86 03        	stx	<R0+2
   969 00:02DF: A0 02 00     	ldy	#$2
   970 00:02E2: B7 01        	lda	[<R0],Y
   971 00:02E4: 48           	pha
  Wed Apr 14 2021  0:19                                                                                                    Page 28


   972 00:02E5: 22 xx xx xx  	jsl	~~Print_INT_16
   973                        ;		
   974                        ;		
   975                        ;		point_dest[0] = Move(Rot_Z(point_4[0],angle), mv);
   976                        	.line	171
   977 00:02E9: 38           	sec
   978 00:02EA: 3B           	tsc
   979 00:02EB: E9 06 00     	sbc	#6
   980 00:02EE: 1B           	tcs
   981 00:02EF: 1A           	ina
   982 00:02F0: 85 01        	sta	<R0
   983 00:02F2: 64 03        	stz	<R0+2
   984 00:02F4: F4 xx xx     	pea	#<~~mv
   985 00:02F7: D4 03        	pei	<R0+2
   986 00:02F9: D4 01        	pei	<R0
   987 00:02FB: A9 06 00     	lda	#$6
   988                        	xref	~~~nfmov
   989 00:02FE: 22 xx xx xx  	jsl	~~~nfmov
   990 00:0302: 38           	sec
   991 00:0303: 3B           	tsc
   992 00:0304: E9 06 00     	sbc	#6
   993 00:0307: 1B           	tcs
   994 00:0308: 1A           	ina
   995 00:0309: 85 01        	sta	<R0
   996 00:030B: 64 03        	stz	<R0+2
   997 00:030D: D4 21        	pei	<L3+angle_1
   998 00:030F: 38           	sec
   999 00:0310: 3B           	tsc
  1000 00:0311: E9 06 00     	sbc	#6
  1001 00:0314: 1B           	tcs
  1002 00:0315: 1A           	ina
  1003 00:0316: 85 05        	sta	<R1
  1004 00:0318: 64 07        	stz	<R1+2
  1005 00:031A: F4 xx xx     	pea	#<~~point_4
  1006 00:031D: D4 07        	pei	<R1+2
  1007 00:031F: D4 05        	pei	<R1
  1008 00:0321: A9 06 00     	lda	#$6
  1009                        	xref	~~~nfmov
  1010 00:0324: 22 xx xx xx  	jsl	~~~nfmov
  1011 00:0328: 22 B9 1C 03  	jsl	~~Rot_Z
  1012 00:032C: 85 05        	sta	<R1
  1013 00:032E: 86 07        	stx	<R1+2
  1014 00:0330: D4 07        	pei	<R1+2
  1015 00:0332: D4 05        	pei	<R1
  1016 00:0334: D4 03        	pei	<R0+2
  1017 00:0336: D4 01        	pei	<R0
  1018 00:0338: A9 06 00     	lda	#$6
  1019                        	xref	~~~fmov
  1020 00:033B: 22 xx xx xx  	jsl	~~~fmov
  1021 00:033F: 22 27 1E 03  	jsl	~~Move
  1022 00:0343: 85 01        	sta	<R0
  1023 00:0345: 86 03        	stx	<R0+2
  1024 00:0347: D4 03        	pei	<R0+2
  1025 00:0349: D4 01        	pei	<R0
  1026 00:034B: F4 xx xx     	pea	#<~~point_dest
  1027 00:034E: A9 06 00     	lda	#$6
  1028                        	xref	~~~fnmov
  1029 00:0351: 22 xx xx xx  	jsl	~~~fnmov
  Wed Apr 14 2021  0:19                                                                                                    Page 29


  1030                        ;		point_dest[1] = Move(Rot_Z(point_4[1],angle), mv);
  1031                        	.line	172
  1032 00:0355: 38           	sec
  1033 00:0356: 3B           	tsc
  1034 00:0357: E9 06 00     	sbc	#6
  1035 00:035A: 1B           	tcs
  1036 00:035B: 1A           	ina
  1037 00:035C: 85 01        	sta	<R0
  1038 00:035E: 64 03        	stz	<R0+2
  1039 00:0360: F4 xx xx     	pea	#<~~mv
  1040 00:0363: D4 03        	pei	<R0+2
  1041 00:0365: D4 01        	pei	<R0
  1042 00:0367: A9 06 00     	lda	#$6
  1043                        	xref	~~~nfmov
  1044 00:036A: 22 xx xx xx  	jsl	~~~nfmov
  1045 00:036E: 38           	sec
  1046 00:036F: 3B           	tsc
  1047 00:0370: E9 06 00     	sbc	#6
  1048 00:0373: 1B           	tcs
  1049 00:0374: 1A           	ina
  1050 00:0375: 85 01        	sta	<R0
  1051 00:0377: 64 03        	stz	<R0+2
  1052 00:0379: D4 21        	pei	<L3+angle_1
  1053 00:037B: 38           	sec
  1054 00:037C: 3B           	tsc
  1055 00:037D: E9 06 00     	sbc	#6
  1056 00:0380: 1B           	tcs
  1057 00:0381: 1A           	ina
  1058 00:0382: 85 05        	sta	<R1
  1059 00:0384: 64 07        	stz	<R1+2
  1060 00:0386: F4 xx xx     	pea	#<~~point_4+6
  1061 00:0389: D4 07        	pei	<R1+2
  1062 00:038B: D4 05        	pei	<R1
  1063 00:038D: A9 06 00     	lda	#$6
  1064                        	xref	~~~nfmov
  1065 00:0390: 22 xx xx xx  	jsl	~~~nfmov
  1066 00:0394: 22 B9 1C 03  	jsl	~~Rot_Z
  1067 00:0398: 85 05        	sta	<R1
  1068 00:039A: 86 07        	stx	<R1+2
  1069 00:039C: D4 07        	pei	<R1+2
  1070 00:039E: D4 05        	pei	<R1
  1071 00:03A0: D4 03        	pei	<R0+2
  1072 00:03A2: D4 01        	pei	<R0
  1073 00:03A4: A9 06 00     	lda	#$6
  1074                        	xref	~~~fmov
  1075 00:03A7: 22 xx xx xx  	jsl	~~~fmov
  1076 00:03AB: 22 27 1E 03  	jsl	~~Move
  1077 00:03AF: 85 01        	sta	<R0
  1078 00:03B1: 86 03        	stx	<R0+2
  1079 00:03B3: D4 03        	pei	<R0+2
  1080 00:03B5: D4 01        	pei	<R0
  1081 00:03B7: F4 xx xx     	pea	#<~~point_dest+6
  1082 00:03BA: A9 06 00     	lda	#$6
  1083                        	xref	~~~fnmov
  1084 00:03BD: 22 xx xx xx  	jsl	~~~fnmov
  1085                        ;		
  1086                        ;		for (loop = 0; loop<12; loop++)
  1087                        	.line	174
  Wed Apr 14 2021  0:19                                                                                                    Page 30


  1088 00:03C1: 64 19        	stz	<L3+loop_1
  1089                        L10008:
  1090                        ;			Drow_line(cube_p[line[loop].x], cube_p[line[loop].y], 0);
  1091                        	.line	175
  1092 00:03C3: F4 00 00     	pea	#<$0
  1093 00:03C6: 38           	sec
  1094 00:03C7: 3B           	tsc
  1095 00:03C8: E9 06 00     	sbc	#6
  1096 00:03CB: 1B           	tcs
  1097 00:03CC: 1A           	ina
  1098 00:03CD: 85 01        	sta	<R0
  1099 00:03CF: 64 03        	stz	<R0+2
  1100 00:03D1: A5 19        	lda	<L3+loop_1
  1101 00:03D3: 0A           	asl	A
  1102 00:03D4: 65 19        	adc	<L3+loop_1
  1103 00:03D6: 0A           	asl	A
  1104 00:03D7: AA           	tax
  1105 00:03D8: BD xx xx     	lda	|~~line+2,X
  1106 00:03DB: 0A           	asl	A
  1107 00:03DC: 7D xx xx     	adc	|~~line+2,X
  1108 00:03DF: 0A           	asl	A
  1109 00:03E0: 18           	clc
  1110 00:03E1: 69 xx xx     	adc	#<~~cube_p
  1111 00:03E4: 48           	pha
  1112 00:03E5: D4 03        	pei	<R0+2
  1113 00:03E7: D4 01        	pei	<R0
  1114 00:03E9: A9 06 00     	lda	#$6
  1115                        	xref	~~~nfmov
  1116 00:03EC: 22 xx xx xx  	jsl	~~~nfmov
  1117 00:03F0: 38           	sec
  1118 00:03F1: 3B           	tsc
  1119 00:03F2: E9 06 00     	sbc	#6
  1120 00:03F5: 1B           	tcs
  1121 00:03F6: 1A           	ina
  1122 00:03F7: 85 01        	sta	<R0
  1123 00:03F9: 64 03        	stz	<R0+2
  1124 00:03FB: A5 19        	lda	<L3+loop_1
  1125 00:03FD: 0A           	asl	A
  1126 00:03FE: 65 19        	adc	<L3+loop_1
  1127 00:0400: 0A           	asl	A
  1128 00:0401: AA           	tax
  1129 00:0402: BD xx xx     	lda	|~~line,X
  1130 00:0405: 0A           	asl	A
  1131 00:0406: 7D xx xx     	adc	|~~line,X
  1132 00:0409: 0A           	asl	A
  1133 00:040A: 18           	clc
  1134 00:040B: 69 xx xx     	adc	#<~~cube_p
  1135 00:040E: 85 11        	sta	<17
  1136 00:0410: 48           	pha
  1137 00:0411: D4 03        	pei	<R0+2
  1138 00:0413: D4 01        	pei	<R0
  1139 00:0415: A9 06 00     	lda	#$6
  1140                        	xref	~~~nfmov
  1141 00:0418: 22 xx xx xx  	jsl	~~~nfmov
  1142 00:041C: 22 FC 11 03  	jsl	~~Drow_line
  1143 00:0420: E6 19        	inc	<L3+loop_1
  1144 00:0422: A5 19        	lda	<L3+loop_1
  1145 00:0424: C9 0C 00     	cmp	#<$c
  Wed Apr 14 2021  0:19                                                                                                    Page 31


  1146 00:0427: 90 9A        	bcc	L10008
  1147                        ;		
  1148                        ;		for (loop = 0; loop<8; loop++)
  1149                        	.line	177
  1150 00:0429: 64 19        	stz	<L3+loop_1
  1151                        L10011:
  1152                        ;		{
  1153                        	.line	178
  1154                        ;			cube_p[loop] = Move(Move(Projection(Rot_Z(cube[loop],angle_3d)),mv_3d),mv_3d);
  1155                        	.line	179
  1156 00:042B: 38           	sec
  1157 00:042C: 3B           	tsc
  1158 00:042D: E9 06 00     	sbc	#6
  1159 00:0430: 1B           	tcs
  1160 00:0431: 1A           	ina
  1161 00:0432: 85 01        	sta	<R0
  1162 00:0434: 64 03        	stz	<R0+2
  1163 00:0436: F4 xx xx     	pea	#<~~mv_3d
  1164 00:0439: D4 03        	pei	<R0+2
  1165 00:043B: D4 01        	pei	<R0
  1166 00:043D: A9 06 00     	lda	#$6
  1167                        	xref	~~~nfmov
  1168 00:0440: 22 xx xx xx  	jsl	~~~nfmov
  1169 00:0444: 38           	sec
  1170 00:0445: 3B           	tsc
  1171 00:0446: E9 06 00     	sbc	#6
  1172 00:0449: 1B           	tcs
  1173 00:044A: 1A           	ina
  1174 00:044B: 85 01        	sta	<R0
  1175 00:044D: 64 03        	stz	<R0+2
  1176 00:044F: 38           	sec
  1177 00:0450: 3B           	tsc
  1178 00:0451: E9 06 00     	sbc	#6
  1179 00:0454: 1B           	tcs
  1180 00:0455: 1A           	ina
  1181 00:0456: 85 05        	sta	<R1
  1182 00:0458: 64 07        	stz	<R1+2
  1183 00:045A: F4 xx xx     	pea	#<~~mv_3d
  1184 00:045D: D4 07        	pei	<R1+2
  1185 00:045F: D4 05        	pei	<R1
  1186 00:0461: A9 06 00     	lda	#$6
  1187                        	xref	~~~nfmov
  1188 00:0464: 22 xx xx xx  	jsl	~~~nfmov
  1189 00:0468: 38           	sec
  1190 00:0469: 3B           	tsc
  1191 00:046A: E9 06 00     	sbc	#6
  1192 00:046D: 1B           	tcs
  1193 00:046E: 1A           	ina
  1194 00:046F: 85 05        	sta	<R1
  1195 00:0471: 64 07        	stz	<R1+2
  1196 00:0473: 38           	sec
  1197 00:0474: 3B           	tsc
  1198 00:0475: E9 06 00     	sbc	#6
  1199 00:0478: 1B           	tcs
  1200 00:0479: 1A           	ina
  1201 00:047A: 85 09        	sta	<R2
  1202 00:047C: 64 0B        	stz	<R2+2
  1203 00:047E: D4 22        	pei	<L3+angle_3d_1
  Wed Apr 14 2021  0:19                                                                                                    Page 32


  1204 00:0480: 38           	sec
  1205 00:0481: 3B           	tsc
  1206 00:0482: E9 06 00     	sbc	#6
  1207 00:0485: 1B           	tcs
  1208 00:0486: 1A           	ina
  1209 00:0487: 85 0D        	sta	<R3
  1210 00:0489: 64 0F        	stz	<R3+2
  1211 00:048B: A5 19        	lda	<L3+loop_1
  1212 00:048D: 0A           	asl	A
  1213 00:048E: 65 19        	adc	<L3+loop_1
  1214 00:0490: 0A           	asl	A
  1215 00:0491: 85 11        	sta	<17
  1216 00:0493: 18           	clc
  1217 00:0494: 69 xx xx     	adc	#<~~cube
  1218 00:0497: 85 15        	sta	<21
  1219 00:0499: 48           	pha
  1220 00:049A: D4 0F        	pei	<R3+2
  1221 00:049C: D4 0D        	pei	<R3
  1222 00:049E: A9 06 00     	lda	#$6
  1223                        	xref	~~~nfmov
  1224 00:04A1: 22 xx xx xx  	jsl	~~~nfmov
  1225 00:04A5: 22 B9 1C 03  	jsl	~~Rot_Z
  1226 00:04A9: 85 0D        	sta	<R3
  1227 00:04AB: 86 0F        	stx	<R3+2
  1228 00:04AD: D4 0F        	pei	<R3+2
  1229 00:04AF: D4 0D        	pei	<R3
  1230 00:04B1: D4 0B        	pei	<R2+2
  1231 00:04B3: D4 09        	pei	<R2
  1232 00:04B5: A9 06 00     	lda	#$6
  1233                        	xref	~~~fmov
  1234 00:04B8: 22 xx xx xx  	jsl	~~~fmov
  1235 00:04BC: 22 C5 1D 03  	jsl	~~Projection
  1236 00:04C0: 85 09        	sta	<R2
  1237 00:04C2: 86 0B        	stx	<R2+2
  1238 00:04C4: D4 0B        	pei	<R2+2
  1239 00:04C6: D4 09        	pei	<R2
  1240 00:04C8: D4 07        	pei	<R1+2
  1241 00:04CA: D4 05        	pei	<R1
  1242 00:04CC: A9 06 00     	lda	#$6
  1243                        	xref	~~~fmov
  1244 00:04CF: 22 xx xx xx  	jsl	~~~fmov
  1245 00:04D3: 22 27 1E 03  	jsl	~~Move
  1246 00:04D7: 85 05        	sta	<R1
  1247 00:04D9: 86 07        	stx	<R1+2
  1248 00:04DB: D4 07        	pei	<R1+2
  1249 00:04DD: D4 05        	pei	<R1
  1250 00:04DF: D4 03        	pei	<R0+2
  1251 00:04E1: D4 01        	pei	<R0
  1252 00:04E3: A9 06 00     	lda	#$6
  1253                        	xref	~~~fmov
  1254 00:04E6: 22 xx xx xx  	jsl	~~~fmov
  1255 00:04EA: 22 27 1E 03  	jsl	~~Move
  1256 00:04EE: 85 01        	sta	<R0
  1257 00:04F0: 86 03        	stx	<R0+2
  1258 00:04F2: D4 03        	pei	<R0+2
  1259 00:04F4: D4 01        	pei	<R0
  1260 00:04F6: A5 19        	lda	<L3+loop_1
  1261 00:04F8: 0A           	asl	A
  Wed Apr 14 2021  0:19                                                                                                    Page 33


  1262 00:04F9: 65 19        	adc	<L3+loop_1
  1263 00:04FB: 0A           	asl	A
  1264 00:04FC: 18           	clc
  1265 00:04FD: 69 xx xx     	adc	#<~~cube_p
  1266 00:0500: 48           	pha
  1267 00:0501: A9 06 00     	lda	#$6
  1268                        	xref	~~~fnmov
  1269 00:0504: 22 xx xx xx  	jsl	~~~fnmov
  1270                        ;			Drow_point(cube_p[loop], 10);
  1271                        	.line	180
  1272 00:0508: F4 0A 00     	pea	#<$a
  1273 00:050B: 38           	sec
  1274 00:050C: 3B           	tsc
  1275 00:050D: E9 06 00     	sbc	#6
  1276 00:0510: 1B           	tcs
  1277 00:0511: 1A           	ina
  1278 00:0512: 85 01        	sta	<R0
  1279 00:0514: 64 03        	stz	<R0+2
  1280 00:0516: A5 19        	lda	<L3+loop_1
  1281 00:0518: 0A           	asl	A
  1282 00:0519: 65 19        	adc	<L3+loop_1
  1283 00:051B: 0A           	asl	A
  1284 00:051C: 18           	clc
  1285 00:051D: 69 xx xx     	adc	#<~~cube_p
  1286 00:0520: 48           	pha
  1287 00:0521: D4 03        	pei	<R0+2
  1288 00:0523: D4 01        	pei	<R0
  1289 00:0525: A9 06 00     	lda	#$6
  1290                        	xref	~~~nfmov
  1291 00:0528: 22 xx xx xx  	jsl	~~~nfmov
  1292 00:052C: 22 9B 1A 03  	jsl	~~Drow_point
  1293                        ;			Print_HEX_16(cube_p[loop].x, 5 + loop*4, 40);
  1294                        	.line	181
  1295 00:0530: F4 28 00     	pea	#<$28
  1296 00:0533: A5 19        	lda	<L3+loop_1
  1297 00:0535: 0A           	asl	A
  1298 00:0536: 0A           	asl	A
  1299 00:0537: 18           	clc
  1300 00:0538: 69 05 00     	adc	#$5
  1301 00:053B: 48           	pha
  1302 00:053C: A5 19        	lda	<L3+loop_1
  1303 00:053E: 0A           	asl	A
  1304 00:053F: 65 19        	adc	<L3+loop_1
  1305 00:0541: 0A           	asl	A
  1306 00:0542: AA           	tax
  1307 00:0543: BD xx xx     	lda	|~~cube_p,X
  1308 00:0546: 48           	pha
  1309 00:0547: 22 xx xx xx  	jsl	~~Print_HEX_16
  1310                        ;			Print_HEX_16(cube_p[loop].y, 5 + loop*4, 50);
  1311                        	.line	182
  1312 00:054B: F4 32 00     	pea	#<$32
  1313 00:054E: A5 19        	lda	<L3+loop_1
  1314 00:0550: 0A           	asl	A
  1315 00:0551: 0A           	asl	A
  1316 00:0552: 18           	clc
  1317 00:0553: 69 05 00     	adc	#$5
  1318 00:0556: 48           	pha
  1319 00:0557: A5 19        	lda	<L3+loop_1
  Wed Apr 14 2021  0:19                                                                                                    Page 34


  1320 00:0559: 0A           	asl	A
  1321 00:055A: 65 19        	adc	<L3+loop_1
  1322 00:055C: 0A           	asl	A
  1323 00:055D: AA           	tax
  1324 00:055E: BD xx xx     	lda	|~~cube_p+2,X
  1325 00:0561: 48           	pha
  1326 00:0562: 22 xx xx xx  	jsl	~~Print_HEX_16
  1327                        ;			Print_INT_16(cube_p[loop].x, 6 + loop*4, 40);
  1328                        	.line	183
  1329 00:0566: F4 28 00     	pea	#<$28
  1330 00:0569: A5 19        	lda	<L3+loop_1
  1331 00:056B: 0A           	asl	A
  1332 00:056C: 0A           	asl	A
  1333 00:056D: 18           	clc
  1334 00:056E: 69 06 00     	adc	#$6
  1335 00:0571: 48           	pha
  1336 00:0572: A5 19        	lda	<L3+loop_1
  1337 00:0574: 0A           	asl	A
  1338 00:0575: 65 19        	adc	<L3+loop_1
  1339 00:0577: 0A           	asl	A
  1340 00:0578: AA           	tax
  1341 00:0579: BD xx xx     	lda	|~~cube_p,X
  1342 00:057C: 48           	pha
  1343 00:057D: 22 xx xx xx  	jsl	~~Print_INT_16
  1344                        ;			Print_INT_16(cube_p[loop].y, 6 + loop*4, 50);
  1345                        	.line	184
  1346 00:0581: F4 32 00     	pea	#<$32
  1347 00:0584: A5 19        	lda	<L3+loop_1
  1348 00:0586: 0A           	asl	A
  1349 00:0587: 0A           	asl	A
  1350 00:0588: 18           	clc
  1351 00:0589: 69 06 00     	adc	#$6
  1352 00:058C: 48           	pha
  1353 00:058D: A5 19        	lda	<L3+loop_1
  1354 00:058F: 0A           	asl	A
  1355 00:0590: 65 19        	adc	<L3+loop_1
  1356 00:0592: 0A           	asl	A
  1357 00:0593: AA           	tax
  1358 00:0594: BD xx xx     	lda	|~~cube_p+2,X
  1359 00:0597: 48           	pha
  1360 00:0598: 22 xx xx xx  	jsl	~~Print_INT_16
  1361                        ;		}
  1362                        	.line	185
  1363 00:059C: E6 19        	inc	<L3+loop_1
  1364 00:059E: A5 19        	lda	<L3+loop_1
  1365 00:05A0: C9 08 00     	cmp	#<$8
  1366 00:05A3: B0 03        	bcs	*+5
  1367 00:05A5: 82 83 FE     	brl	L10011
  1368                        ;		/*angle_3d++;
  1369                        ;		if (angle_3d >=18)
  1370                        ;			angle_3d = 0;*/
  1371                        ;		
  1372                        ;		
  1373                        ;		if(dir_3d== 1)
  1374                        	.line	191
  1375                        ;		{
  1376 00:05A8: E2 20        	sep	#$20
  1377                        	longa	off
  Wed Apr 14 2021  0:19                                                                                                    Page 35


  1378 00:05AA: A5 24        	lda	<L3+dir_3d_1
  1379 00:05AC: C9 01        	cmp	#<$1
  1380 00:05AE: C2 20        	rep	#$20
  1381                        	longa	on
  1382 00:05B0: D0 18        	bne	L10012
  1383                        	.line	192
  1384                        ;			angle_3d ++;
  1385                        	.line	193
  1386 00:05B2: E2 20        	sep	#$20
  1387                        	longa	off
  1388 00:05B4: E6 22        	inc	<L3+angle_3d_1
  1389                        ;			if (angle_3d >= 18)
  1390                        	.line	194
  1391                        ;			{
  1392 00:05B6: A5 22        	lda	<L3+angle_3d_1
  1393 00:05B8: C9 12        	cmp	#<$12
  1394 00:05BA: C2 20        	rep	#$20
  1395                        	longa	on
  1396 00:05BC: 90 22        	bcc	L10014
  1397                        	.line	195
  1398                        ;				dir_3d = 0;
  1399                        	.line	196
  1400 00:05BE: E2 20        	sep	#$20
  1401                        	longa	off
  1402 00:05C0: 64 24        	stz	<L3+dir_3d_1
  1403                        ;				angle_3d = 18;
  1404                        	.line	197
  1405 00:05C2: A9 12        	lda	#$12
  1406 00:05C4: 85 22        	sta	<L3+angle_3d_1
  1407 00:05C6: C2 20        	rep	#$20
  1408                        	longa	on
  1409                        ;			}
  1410                        	.line	198
  1411                        ;		}
  1412                        	.line	199
  1413                        ;		else
  1414 00:05C8: 80 16        	bra	L10014
  1415                        L10012:
  1416                        ;		{
  1417                        	.line	201
  1418                        ;			angle_3d --;
  1419                        	.line	202
  1420 00:05CA: E2 20        	sep	#$20
  1421                        	longa	off
  1422 00:05CC: C6 22        	dec	<L3+angle_3d_1
  1423                        ;			if (angle_3d <= 0)
  1424                        	.line	203
  1425                        ;			{
  1426 00:05CE: A9 00        	lda	#$0
  1427 00:05D0: C5 22        	cmp	<L3+angle_3d_1
  1428 00:05D2: C2 20        	rep	#$20
  1429                        	longa	on
  1430 00:05D4: 90 0A        	bcc	L10014
  1431                        	.line	204
  1432                        ;				dir_3d = 1;
  1433                        	.line	205
  1434 00:05D6: E2 20        	sep	#$20
  1435                        	longa	off
  Wed Apr 14 2021  0:19                                                                                                    Page 36


  1436 00:05D8: A9 01        	lda	#$1
  1437 00:05DA: 85 24        	sta	<L3+dir_3d_1
  1438                        ;				angle_3d = 0;
  1439                        	.line	206
  1440 00:05DC: 64 22        	stz	<L3+angle_3d_1
  1441 00:05DE: C2 20        	rep	#$20
  1442                        	longa	on
  1443                        ;			}
  1444                        	.line	207
  1445                        ;		}	
  1446                        	.line	208
  1447                        L10014:
  1448                        ;		
  1449                        ;		//mv_3d.x++;
  1450                        ;		for (loop = 0; loop<12; loop++)
  1451                        	.line	211
  1452 00:05E0: 64 19        	stz	<L3+loop_1
  1453                        L10018:
  1454                        ;			Drow_line(cube_p[line[loop].x], cube_p[line[loop].y], 10);
  1455                        	.line	212
  1456 00:05E2: F4 0A 00     	pea	#<$a
  1457 00:05E5: 38           	sec
  1458 00:05E6: 3B           	tsc
  1459 00:05E7: E9 06 00     	sbc	#6
  1460 00:05EA: 1B           	tcs
  1461 00:05EB: 1A           	ina
  1462 00:05EC: 85 01        	sta	<R0
  1463 00:05EE: 64 03        	stz	<R0+2
  1464 00:05F0: A5 19        	lda	<L3+loop_1
  1465 00:05F2: 0A           	asl	A
  1466 00:05F3: 65 19        	adc	<L3+loop_1
  1467 00:05F5: 0A           	asl	A
  1468 00:05F6: AA           	tax
  1469 00:05F7: BD xx xx     	lda	|~~line+2,X
  1470 00:05FA: 0A           	asl	A
  1471 00:05FB: 7D xx xx     	adc	|~~line+2,X
  1472 00:05FE: 0A           	asl	A
  1473 00:05FF: 18           	clc
  1474 00:0600: 69 xx xx     	adc	#<~~cube_p
  1475 00:0603: 48           	pha
  1476 00:0604: D4 03        	pei	<R0+2
  1477 00:0606: D4 01        	pei	<R0
  1478 00:0608: A9 06 00     	lda	#$6
  1479                        	xref	~~~nfmov
  1480 00:060B: 22 xx xx xx  	jsl	~~~nfmov
  1481 00:060F: 38           	sec
  1482 00:0610: 3B           	tsc
  1483 00:0611: E9 06 00     	sbc	#6
  1484 00:0614: 1B           	tcs
  1485 00:0615: 1A           	ina
  1486 00:0616: 85 01        	sta	<R0
  1487 00:0618: 64 03        	stz	<R0+2
  1488 00:061A: A5 19        	lda	<L3+loop_1
  1489 00:061C: 0A           	asl	A
  1490 00:061D: 65 19        	adc	<L3+loop_1
  1491 00:061F: 0A           	asl	A
  1492 00:0620: AA           	tax
  1493 00:0621: BD xx xx     	lda	|~~line,X
  Wed Apr 14 2021  0:19                                                                                                    Page 37


  1494 00:0624: 0A           	asl	A
  1495 00:0625: 7D xx xx     	adc	|~~line,X
  1496 00:0628: 0A           	asl	A
  1497 00:0629: 18           	clc
  1498 00:062A: 69 xx xx     	adc	#<~~cube_p
  1499 00:062D: 85 11        	sta	<17
  1500 00:062F: 48           	pha
  1501 00:0630: D4 03        	pei	<R0+2
  1502 00:0632: D4 01        	pei	<R0
  1503 00:0634: A9 06 00     	lda	#$6
  1504                        	xref	~~~nfmov
  1505 00:0637: 22 xx xx xx  	jsl	~~~nfmov
  1506 00:063B: 22 FC 11 03  	jsl	~~Drow_line
  1507 00:063F: E6 19        	inc	<L3+loop_1
  1508 00:0641: A5 19        	lda	<L3+loop_1
  1509 00:0643: C9 0C 00     	cmp	#<$c
  1510 00:0646: 90 9A        	bcc	L10018
  1511                        ;			
  1512                        ;		
  1513                        ;		for(loop = 0; loop<20; loop++)
  1514                        	.line	215
  1515 00:0648: 64 19        	stz	<L3+loop_1
  1516                        L10021:
  1517                        ;			Drow_line(point_dest[0], point_dest[1], 10);
  1518                        	.line	216
  1519 00:064A: F4 0A 00     	pea	#<$a
  1520 00:064D: 38           	sec
  1521 00:064E: 3B           	tsc
  1522 00:064F: E9 06 00     	sbc	#6
  1523 00:0652: 1B           	tcs
  1524 00:0653: 1A           	ina
  1525 00:0654: 85 01        	sta	<R0
  1526 00:0656: 64 03        	stz	<R0+2
  1527 00:0658: F4 xx xx     	pea	#<~~point_dest+6
  1528 00:065B: D4 03        	pei	<R0+2
  1529 00:065D: D4 01        	pei	<R0
  1530 00:065F: A9 06 00     	lda	#$6
  1531                        	xref	~~~nfmov
  1532 00:0662: 22 xx xx xx  	jsl	~~~nfmov
  1533 00:0666: 38           	sec
  1534 00:0667: 3B           	tsc
  1535 00:0668: E9 06 00     	sbc	#6
  1536 00:066B: 1B           	tcs
  1537 00:066C: 1A           	ina
  1538 00:066D: 85 01        	sta	<R0
  1539 00:066F: 64 03        	stz	<R0+2
  1540 00:0671: F4 xx xx     	pea	#<~~point_dest
  1541 00:0674: D4 03        	pei	<R0+2
  1542 00:0676: D4 01        	pei	<R0
  1543 00:0678: A9 06 00     	lda	#$6
  1544                        	xref	~~~nfmov
  1545 00:067B: 22 xx xx xx  	jsl	~~~nfmov
  1546 00:067F: 22 FC 11 03  	jsl	~~Drow_line
  1547 00:0683: E6 19        	inc	<L3+loop_1
  1548 00:0685: A5 19        	lda	<L3+loop_1
  1549 00:0687: C9 14 00     	cmp	#<$14
  1550 00:068A: 90 BE        	bcc	L10021
  1551                        ;		
  Wed Apr 14 2021  0:19                                                                                                    Page 38


  1552                        ;		*(far uint8_t *)0xB30000 = (uint8_t)tile_map_index;
  1553                        	.line	218
  1554 00:068C: E2 20        	sep	#$20
  1555                        	longa	off
  1556 00:068E: A5 1D        	lda	<L3+tile_map_index_1
  1557 00:0690: 8F 00 00 B3  	sta	>11730944
  1558                        ;		*(far uint8_t *)0xB30001 = (uint8_t)tile_map_index;
  1559                        	.line	219
  1560 00:0694: A5 1D        	lda	<L3+tile_map_index_1
  1561 00:0696: 8F 01 00 B3  	sta	>11730945
  1562                        ;		*(far uint8_t *)0xB30002 = (uint8_t)tile_map_index;
  1563                        	.line	220
  1564 00:069A: A5 1D        	lda	<L3+tile_map_index_1
  1565 00:069C: 8F 02 00 B3  	sta	>11730946
  1566                        ;		*(far uint8_t *)0xB30003 = (uint8_t)tile_map_index;
  1567                        	.line	221
  1568 00:06A0: A5 1D        	lda	<L3+tile_map_index_1
  1569 00:06A2: 8F 03 00 B3  	sta	>11730947
  1570                        ;		
  1571                        ;		
  1572                        ;		*(far uint8_t *)0xB50000 = (uint8_t)tile_map_index;
  1573                        	.line	224
  1574 00:06A6: A5 1D        	lda	<L3+tile_map_index_1
  1575 00:06A8: 8F 00 00 B5  	sta	>11862016
  1576                        ;		*(far uint8_t *)0xB50001 = (uint8_t)tile_map_index;
  1577                        	.line	225
  1578 00:06AC: A5 1D        	lda	<L3+tile_map_index_1
  1579 00:06AE: 8F 01 00 B5  	sta	>11862017
  1580                        ;		*(far uint8_t *)0xB50002 = (uint8_t)tile_map_index;
  1581                        	.line	226
  1582 00:06B2: A5 1D        	lda	<L3+tile_map_index_1
  1583 00:06B4: 8F 02 00 B5  	sta	>11862018
  1584                        ;		*(far uint8_t *)0xB50003 = (uint8_t)tile_map_index;
  1585                        	.line	227
  1586 00:06B8: A5 1D        	lda	<L3+tile_map_index_1
  1587 00:06BA: 8F 03 00 B5  	sta	>11862019
  1588                        ;		
  1589                        ;		if(dir== 1)
  1590                        	.line	229
  1591                        ;		{
  1592 00:06BE: A5 23        	lda	<L3+dir_1
  1593 00:06C0: C9 01        	cmp	#<$1
  1594 00:06C2: C2 20        	rep	#$20
  1595                        	longa	on
  1596 00:06C4: D0 18        	bne	L10022
  1597                        	.line	230
  1598                        ;			angle ++;
  1599                        	.line	231
  1600 00:06C6: E2 20        	sep	#$20
  1601                        	longa	off
  1602 00:06C8: E6 21        	inc	<L3+angle_1
  1603                        ;			if (angle >= ANGLE_MAX)
  1604                        	.line	232
  1605                        ;			{
  1606 00:06CA: A5 21        	lda	<L3+angle_1
  1607 00:06CC: C9 FF        	cmp	#<$ff
  1608 00:06CE: C2 20        	rep	#$20
  1609                        	longa	on
  Wed Apr 14 2021  0:19                                                                                                    Page 39


  1610 00:06D0: 90 22        	bcc	L10024
  1611                        	.line	233
  1612                        ;				dir = 0;
  1613                        	.line	234
  1614 00:06D2: E2 20        	sep	#$20
  1615                        	longa	off
  1616 00:06D4: 64 23        	stz	<L3+dir_1
  1617                        ;				angle = ANGLE_MAX;
  1618                        	.line	235
  1619 00:06D6: A9 FF        	lda	#$ff
  1620 00:06D8: 85 21        	sta	<L3+angle_1
  1621 00:06DA: C2 20        	rep	#$20
  1622                        	longa	on
  1623                        ;			}
  1624                        	.line	236
  1625                        ;		}
  1626                        	.line	237
  1627                        ;		else
  1628 00:06DC: 80 16        	bra	L10024
  1629                        L10022:
  1630                        ;		{
  1631                        	.line	239
  1632                        ;			angle --;
  1633                        	.line	240
  1634 00:06DE: E2 20        	sep	#$20
  1635                        	longa	off
  1636 00:06E0: C6 21        	dec	<L3+angle_1
  1637                        ;			if (angle <= ANGLE_MIN)
  1638                        	.line	241
  1639                        ;			{
  1640 00:06E2: A9 00        	lda	#$0
  1641 00:06E4: C5 21        	cmp	<L3+angle_1
  1642 00:06E6: C2 20        	rep	#$20
  1643                        	longa	on
  1644 00:06E8: 90 0A        	bcc	L10024
  1645                        	.line	242
  1646                        ;				dir = 1;
  1647                        	.line	243
  1648 00:06EA: E2 20        	sep	#$20
  1649                        	longa	off
  1650 00:06EC: A9 01        	lda	#$1
  1651 00:06EE: 85 23        	sta	<L3+dir_1
  1652                        ;				angle = ANGLE_MIN;
  1653                        	.line	244
  1654 00:06F0: 64 21        	stz	<L3+angle_1
  1655 00:06F2: C2 20        	rep	#$20
  1656                        	longa	on
  1657                        ;			}
  1658                        	.line	245
  1659                        ;		}
  1660                        	.line	246
  1661                        L10024:
  1662                        ;		tile_map_index++;
  1663                        	.line	247
  1664 00:06F4: E6 1D        	inc	<L3+tile_map_index_1
  1665                        ;		Print_INT_16(TILE_MAP_0[tile_map_index],10,10);
  1666                        	.line	248
  1667 00:06F6: F4 0A 00     	pea	#<$a
  Wed Apr 14 2021  0:19                                                                                                    Page 40


  1668 00:06F9: F4 0A 00     	pea	#<$a
  1669 00:06FC: A6 1D        	ldx	<L3+tile_map_index_1
  1670 00:06FE: BF xx xx xx  	lda	>~~TILE_MAP_0,X
  1671 00:0702: 29 FF 00     	and	#$ff
  1672 00:0705: 48           	pha
  1673 00:0706: 22 xx xx xx  	jsl	~~Print_INT_16
  1674                        ;	}
  1675                        	.line	249
  1676 00:070A: 82 8B FA     	brl	L10004
  1677                        ;	test_func_fall();
  1678                        	.line	250
  1679                        ;	while(1)
  1680                        	.line	251
  1681                        L10026:
  1682                        ;	{
  1683                        	.line	252
  1684                        ;		SCREEN_PAGE0[i] = text[j];// data;
  1685                        	.line	253
  1686 00:070D: A5 1F        	lda	<L3+i_1
  1687 00:070F: 29 FF 00     	and	#$ff
  1688 00:0712: 85 01        	sta	<R0
  1689 00:0714: A9 00 A0     	lda	#$a000
  1690 00:0717: 85 05        	sta	<R1
  1691 00:0719: A9 AF 00     	lda	#$af
  1692 00:071C: 85 07        	sta	<R1+2
  1693 00:071E: A5 20        	lda	<L3+j_1
  1694 00:0720: 29 FF 00     	and	#$ff
  1695 00:0723: AA           	tax
  1696 00:0724: E2 20        	sep	#$20
  1697                        	longa	off
  1698 00:0726: BD xx xx     	lda	|~~text,X
  1699 00:0729: A4 01        	ldy	<R0
  1700 00:072B: 97 05        	sta	[<R1],Y
  1701                        ;		i++;
  1702                        	.line	254
  1703 00:072D: E6 1F        	inc	<L3+i_1
  1704                        ;		j++;
  1705                        	.line	255
  1706 00:072F: E6 20        	inc	<L3+j_1
  1707 00:0731: C2 20        	rep	#$20
  1708                        	longa	on
  1709                        ;		if((i==0))
  1710                        	.line	256
  1711                        ;			j=0;
  1712 00:0733: A5 1F        	lda	<L3+i_1
  1713 00:0735: 29 FF 00     	and	#$ff
  1714 00:0738: D0 06        	bne	L10028
  1715                        	.line	257
  1716 00:073A: E2 20        	sep	#$20
  1717                        	longa	off
  1718 00:073C: 64 20        	stz	<L3+j_1
  1719 00:073E: C2 20        	rep	#$20
  1720                        	longa	on
  1721                        ;		if((j>=13))
  1722                        L10028:
  1723                        	.line	258
  1724                        ;			j=0;
  1725 00:0740: E2 20        	sep	#$20
  Wed Apr 14 2021  0:19                                                                                                    Page 41


  1726                        	longa	off
  1727 00:0742: A5 20        	lda	<L3+j_1
  1728 00:0744: C9 0D        	cmp	#<$d
  1729 00:0746: C2 20        	rep	#$20
  1730                        	longa	on
  1731 00:0748: 90 C3        	bcc	L10026
  1732                        	.line	259
  1733 00:074A: E2 20        	sep	#$20
  1734                        	longa	off
  1735 00:074C: 64 20        	stz	<L3+j_1
  1736 00:074E: C2 20        	rep	#$20
  1737                        	longa	on
  1738                        ;	};		
  1739                        	.line	260
  1740 00:0750: 80 BB        	bra	L10026
  1741                        	.line	260
  1742                        ;	return 0;
  1743                        	.line	261
  1744                        ;}
  1745                        	.line	262
  1746                        	.endblock	262
  1747             00000028   L2	equ	40
  1748             00000019   L3	equ	25
  1749                        	ends
  1750                        	efunc
  1751                        	.endfunc	262,25,40
  1752                        	.line	262
  1753                        ;
  1754                        ;#pragma section CODE=BANK3,offset $31000
  1755                        BANK3	section	offset $31000
  1756 03:1000:              	ends
  1757                        ;
  1758                        ;void Clear_TEXT(void)
  1759                        ;{
  1760                        	.line	266
  1761                        	.line	267
  1762                        	bank3
  1763                        	xdef	~~Clear_TEXT
  1764                        	func
  1765                        	.function	267
  1766                        ~~Clear_TEXT:
  1767                        	longa	on
  1768                        	longi	on
  1769 03:1000: 3B           	tsc
  1770 03:1001: 38           	sec
  1771 03:1002: E9 06 00     	sbc	#L20
  1772 03:1005: 1B           	tcs
  1773 03:1006: 0B           	phd
  1774 03:1007: 5B           	tcd
  1775                        	.block	267
  1776                        ;	int i =0;
  1777                        ;	for(i=0; i<(80*60); i++)
  1778             00000000   i_1	set	0
  1779                        	.sym	i,0,5,1,16
  1780 03:1008: 64 05        	stz	<L21+i_1
  1781                        	.line	269
  1782 03:100A: 64 05        	stz	<L21+i_1
  1783                        L10032:
  Wed Apr 14 2021  0:19                                                                                                    Page 42


  1784                        ;		SCREEN_PAGE0[i] = 0;// data;
  1785                        	.line	270
  1786 03:100C: A9 00 A0     	lda	#$a000
  1787 03:100F: 85 01        	sta	<R0
  1788 03:1011: A9 AF 00     	lda	#$af
  1789 03:1014: 85 03        	sta	<R0+2
  1790 03:1016: E2 20        	sep	#$20
  1791                        	longa	off
  1792 03:1018: A9 00        	lda	#$0
  1793 03:101A: A4 05        	ldy	<L21+i_1
  1794 03:101C: 97 01        	sta	[<R0],Y
  1795 03:101E: C2 20        	rep	#$20
  1796                        	longa	on
  1797 03:1020: E6 05        	inc	<L21+i_1
  1798 03:1022: 38           	sec
  1799 03:1023: A5 05        	lda	<L21+i_1
  1800 03:1025: E9 C0 12     	sbc	#<$12c0
  1801 03:1028: 70 03        	bvs	L23
  1802 03:102A: 49 00 80     	eor	#$8000
  1803                        L23:
  1804 03:102D: 10 DD        	bpl	L10032
  1805                        ;	return;
  1806                        	.line	271
  1807 03:102F: 2B           	pld
  1808 03:1030: 3B           	tsc
  1809 03:1031: 18           	clc
  1810 03:1032: 69 06 00     	adc	#L20
  1811 03:1035: 1B           	tcs
  1812 03:1036: 6B           	rtl
  1813                        ;}
  1814                        	.line	272
  1815                        	.endblock	272
  1816             00000006   L20	equ	6
  1817             00000005   L21	equ	5
  1818 03:1037:              	ends
  1819                        	efunc
  1820                        	.endfunc	272,5,6
  1821                        	.line	272
  1822                        ;
  1823                        ;void test_func_fall(void)
  1824                        ;{
  1825                        	.line	274
  1826                        	.line	275
  1827                        	bank3
  1828                        	xdef	~~test_func_fall
  1829                        	func
  1830                        	.function	275
  1831                        ~~test_func_fall:
  1832                        	longa	on
  1833                        	longi	on
  1834 03:1037: 3B           	tsc
  1835 03:1038: 38           	sec
  1836 03:1039: E9 0A 00     	sbc	#L26
  1837 03:103C: 1B           	tcs
  1838 03:103D: 0B           	phd
  1839 03:103E: 5B           	tcd
  1840                        	.block	275
  1841                        ;	int i =0;
  Wed Apr 14 2021  0:19                                                                                                    Page 43


  1842                        ;	for(i=0; i<14; i++)
  1843             00000000   i_1	set	0
  1844                        	.sym	i,0,5,1,16
  1845 03:103F: 64 09        	stz	<L27+i_1
  1846                        	.line	277
  1847 03:1041: 64 09        	stz	<L27+i_1
  1848                        L10035:
  1849                        ;		SCREEN_PAGE0[i+855] = text[i];// data;
  1850                        	.line	278
  1851 03:1043: A9 00 A0     	lda	#$a000
  1852 03:1046: 85 01        	sta	<R0
  1853 03:1048: A9 AF 00     	lda	#$af
  1854 03:104B: 85 03        	sta	<R0+2
  1855 03:104D: A9 57 03     	lda	#$357
  1856 03:1050: 18           	clc
  1857 03:1051: 65 09        	adc	<L27+i_1
  1858 03:1053: 85 05        	sta	<R1
  1859 03:1055: E2 20        	sep	#$20
  1860                        	longa	off
  1861 03:1057: A6 09        	ldx	<L27+i_1
  1862 03:1059: BD xx xx     	lda	|~~text,X
  1863 03:105C: A4 05        	ldy	<R1
  1864 03:105E: 97 01        	sta	[<R0],Y
  1865 03:1060: C2 20        	rep	#$20
  1866                        	longa	on
  1867 03:1062: E6 09        	inc	<L27+i_1
  1868 03:1064: 38           	sec
  1869 03:1065: A5 09        	lda	<L27+i_1
  1870 03:1067: E9 0E 00     	sbc	#<$e
  1871 03:106A: 70 03        	bvs	L29
  1872 03:106C: 49 00 80     	eor	#$8000
  1873                        L29:
  1874 03:106F: 10 D2        	bpl	L10035
  1875                        ;	return;
  1876                        	.line	279
  1877 03:1071: 2B           	pld
  1878 03:1072: 3B           	tsc
  1879 03:1073: 18           	clc
  1880 03:1074: 69 0A 00     	adc	#L26
  1881 03:1077: 1B           	tcs
  1882 03:1078: 6B           	rtl
  1883                        ;}
  1884                        	.line	280
  1885                        	.endblock	280
  1886             0000000A   L26	equ	10
  1887             00000009   L27	equ	9
  1888 03:1079:              	ends
  1889                        	efunc
  1890                        	.endfunc	280,9,10
  1891                        	.line	280
  1892                        ;
  1893                        ;void Get_VICKY_II_Version(void)
  1894                        ;{
  1895                        	.line	282
  1896                        	.line	283
  1897                        	bank3
  1898                        	xdef	~~Get_VICKY_II_Version
  1899                        	func
  Wed Apr 14 2021  0:19                                                                                                    Page 44


  1900                        	.function	283
  1901                        ~~Get_VICKY_II_Version:
  1902                        	longa	on
  1903                        	longi	on
  1904                        	.block	283
  1905                        ;	
  1906                        ;	SCREEN_PAGE0[80*30+0]  = *C256F_MODEL_MAJOR;// data;
  1907                        	.line	285
  1908 03:1079: E2 20        	sep	#$20
  1909                        	longa	off
  1910 03:107B: AF 0B 07 AF  	lda	>11470603	; volatile
  1911 03:107F: 8F 60 A9 AF  	sta	>11512160	; volatile
  1912                        ;	SCREEN_PAGE0[80*30+1]  = *C256F_MODEL_MINOR;// data;
  1913                        	.line	286
  1914 03:1083: AF 0C 07 AF  	lda	>11470604	; volatile
  1915 03:1087: 8F 61 A9 AF  	sta	>11512161	; volatile
  1916                        ;	
  1917                        ;	SCREEN_PAGE0[80*30+3]  = 0x30 + ((*FPGA_DOR)>>4);// data;
  1918                        	.line	288
  1919 03:108B: AF 0D 07 AF  	lda	>11470605	; volatile
  1920 03:108F: 4A           	lsr	A
  1921 03:1090: 4A           	lsr	A
  1922 03:1091: 4A           	lsr	A
  1923 03:1092: 4A           	lsr	A
  1924 03:1093: 18           	clc
  1925 03:1094: 69 30        	adc	#$30
  1926 03:1096: 8F 63 A9 AF  	sta	>11512163	; volatile
  1927                        ;	SCREEN_PAGE0[80*30+4]  = 0x30 + ((*FPGA_DOR)& 0x0F);// data;
  1928                        	.line	289
  1929 03:109A: AF 0D 07 AF  	lda	>11470605	; volatile
  1930 03:109E: 29 0F        	and	#<$f
  1931 03:10A0: 18           	clc
  1932 03:10A1: 69 30        	adc	#$30
  1933 03:10A3: 8F 64 A9 AF  	sta	>11512164	; volatile
  1934                        ;	SCREEN_PAGE0[80*30+5]  = '-';
  1935                        	.line	290
  1936 03:10A7: A9 2D        	lda	#$2d
  1937 03:10A9: 8F 65 A9 AF  	sta	>11512165	; volatile
  1938                        ;	SCREEN_PAGE0[80*30+6]  = 0x30 + ((*FPGA_MOR)>>4);// data;
  1939                        	.line	291
  1940 03:10AD: AF 0E 07 AF  	lda	>11470606	; volatile
  1941 03:10B1: 4A           	lsr	A
  1942 03:10B2: 4A           	lsr	A
  1943 03:10B3: 4A           	lsr	A
  1944 03:10B4: 4A           	lsr	A
  1945 03:10B5: 18           	clc
  1946 03:10B6: 69 30        	adc	#$30
  1947 03:10B8: 8F 66 A9 AF  	sta	>11512166	; volatile
  1948                        ;	SCREEN_PAGE0[80*30+7]  = 0x30 + ((*FPGA_MOR)& 0x0F);// data;
  1949                        	.line	292
  1950 03:10BC: AF 0E 07 AF  	lda	>11470606	; volatile
  1951 03:10C0: 29 0F        	and	#<$f
  1952 03:10C2: 18           	clc
  1953 03:10C3: 69 30        	adc	#$30
  1954 03:10C5: 8F 67 A9 AF  	sta	>11512167	; volatile
  1955                        ;	SCREEN_PAGE0[80*30+8]  = '-';
  1956                        	.line	293
  1957 03:10C9: A9 2D        	lda	#$2d
  Wed Apr 14 2021  0:19                                                                                                    Page 45


  1958 03:10CB: 8F 68 A9 AF  	sta	>11512168	; volatile
  1959                        ;	SCREEN_PAGE0[80*30+9]  = 0x30 + ((*FPGA_YOR)>>4);// data;
  1960                        	.line	294
  1961 03:10CF: AF 0F 07 AF  	lda	>11470607	; volatile
  1962 03:10D3: 4A           	lsr	A
  1963 03:10D4: 4A           	lsr	A
  1964 03:10D5: 4A           	lsr	A
  1965 03:10D6: 4A           	lsr	A
  1966 03:10D7: 18           	clc
  1967 03:10D8: 69 30        	adc	#$30
  1968 03:10DA: 8F 69 A9 AF  	sta	>11512169	; volatile
  1969                        ;	SCREEN_PAGE0[80*30+10] = 0x30 + ((*FPGA_YOR)& 0x0F);// data;
  1970                        	.line	295
  1971 03:10DE: AF 0F 07 AF  	lda	>11470607	; volatile
  1972 03:10E2: 29 0F        	and	#<$f
  1973 03:10E4: 18           	clc
  1974 03:10E5: 69 30        	adc	#$30
  1975 03:10E7: 8F 6A A9 AF  	sta	>11512170	; volatile
  1976 03:10EB: C2 20        	rep	#$20
  1977                        	longa	on
  1978                        ;	return;
  1979                        	.line	296
  1980 03:10ED: 6B           	rtl
  1981                        ;}
  1982                        	.line	297
  1983                        	.endblock	297
  1984             00000004   L32	equ	4
  1985             00000005   L33	equ	5
  1986 03:10EE:              	ends
  1987                        	efunc
  1988                        	.endfunc	297,5,4
  1989                        	.line	297
  1990                        ;
  1991                        ;void load_palette(uint8_t pal)
  1992                        ;{
  1993                        	.line	299
  1994                        	.line	300
  1995                        	bank3
  1996                        	xdef	~~load_palette
  1997                        	func
  1998                        	.function	300
  1999                        ~~load_palette:
  2000                        	longa	on
  2001                        	longi	on
  2002 03:10EE: 3B           	tsc
  2003 03:10EF: 38           	sec
  2004 03:10F0: E9 06 00     	sbc	#L36
  2005 03:10F3: 1B           	tcs
  2006 03:10F4: 0B           	phd
  2007 03:10F5: 5B           	tcd
  2008             00000004   pal_0	set	4
  2009                        	.block	300
  2010                        ;	int i;
  2011                        ;	if(pal == 0)
  2012             00000000   i_1	set	0
  2013                        	.sym	i,0,5,1,16
  2014                        	.sym	pal,4,14,6,8
  2015                        	.line	302
  Wed Apr 14 2021  0:19                                                                                                    Page 46


  2016                        ;	{
  2017 03:10F6: A5 0A        	lda	<L36+pal_0
  2018 03:10F8: 29 FF 00     	and	#$ff
  2019 03:10FB: D0 2A        	bne	L10036
  2020                        	.line	303
  2021                        ;		for(i=0; i<1014; i++)
  2022                        	.line	304
  2023 03:10FD: 64 05        	stz	<L37+i_1
  2024                        L10039:
  2025                        ;			((volatile uint8_t *)GRPH_LUT0_PTR)[i] = palette[i];
  2026                        	.line	305
  2027 03:10FF: A9 00 20     	lda	#$2000
  2028 03:1102: 85 01        	sta	<R0
  2029 03:1104: A9 AF 00     	lda	#$af
  2030 03:1107: 85 03        	sta	<R0+2
  2031 03:1109: E2 20        	sep	#$20
  2032                        	longa	off
  2033 03:110B: A6 05        	ldx	<L37+i_1
  2034 03:110D: BD xx xx     	lda	|~~palette,X
  2035 03:1110: A4 05        	ldy	<L37+i_1
  2036 03:1112: 97 01        	sta	[<R0],Y
  2037 03:1114: C2 20        	rep	#$20
  2038                        	longa	on
  2039 03:1116: E6 05        	inc	<L37+i_1
  2040 03:1118: 38           	sec
  2041 03:1119: A5 05        	lda	<L37+i_1
  2042 03:111B: E9 F6 03     	sbc	#<$3f6
  2043 03:111E: 70 03        	bvs	L40
  2044 03:1120: 49 00 80     	eor	#$8000
  2045                        L40:
  2046 03:1123: 10 DA        	bpl	L10039
  2047 03:1125: 80 28        	bra	L44
  2048                        ;	}
  2049                        	.line	306
  2050                        ;	else
  2051                        L10036:
  2052                        ;	{
  2053                        	.line	308
  2054                        ;		for(i=0; i<1014; i++)
  2055                        	.line	309
  2056 03:1127: 64 05        	stz	<L37+i_1
  2057                        L10043:
  2058                        ;			((volatile uint8_t *)GRPH_LUT1_PTR)[i] = palette[i];
  2059                        	.line	310
  2060 03:1129: A9 00 24     	lda	#$2400
  2061 03:112C: 85 01        	sta	<R0
  2062 03:112E: A9 AF 00     	lda	#$af
  2063 03:1131: 85 03        	sta	<R0+2
  2064 03:1133: E2 20        	sep	#$20
  2065                        	longa	off
  2066 03:1135: A6 05        	ldx	<L37+i_1
  2067 03:1137: BD xx xx     	lda	|~~palette,X
  2068 03:113A: A4 05        	ldy	<L37+i_1
  2069 03:113C: 97 01        	sta	[<R0],Y
  2070 03:113E: C2 20        	rep	#$20
  2071                        	longa	on
  2072 03:1140: E6 05        	inc	<L37+i_1
  2073 03:1142: 38           	sec
  Wed Apr 14 2021  0:19                                                                                                    Page 47


  2074 03:1143: A5 05        	lda	<L37+i_1
  2075 03:1145: E9 F6 03     	sbc	#<$3f6
  2076 03:1148: 70 03        	bvs	L42
  2077 03:114A: 49 00 80     	eor	#$8000
  2078                        L42:
  2079 03:114D: 10 DA        	bpl	L10043
  2080                        ;		
  2081                        ;	}
  2082                        	.line	312
  2083                        ;	return;
  2084                        	.line	313
  2085                        L44:
  2086 03:114F: A5 08        	lda	<L36+2
  2087 03:1151: 85 0A        	sta	<L36+2+2
  2088 03:1153: A5 07        	lda	<L36+1
  2089 03:1155: 85 09        	sta	<L36+1+2
  2090 03:1157: 2B           	pld
  2091 03:1158: 3B           	tsc
  2092 03:1159: 18           	clc
  2093 03:115A: 69 08 00     	adc	#L36+2
  2094 03:115D: 1B           	tcs
  2095 03:115E: 6B           	rtl
  2096                        ;}
  2097                        	.line	314
  2098                        	.endblock	314
  2099             00000006   L36	equ	6
  2100             00000005   L37	equ	5
  2101 03:115F:              	ends
  2102                        	efunc
  2103                        	.endfunc	314,5,6
  2104                        	.line	314
  2105                        ;
  2106                        ;void Clear_VRAM_B0_BA(void)
  2107                        ;{
  2108                        	.line	316
  2109                        	.line	317
  2110                        	bank3
  2111                        	xdef	~~Clear_VRAM_B0_BA
  2112                        	func
  2113                        	.function	317
  2114                        ~~Clear_VRAM_B0_BA:
  2115                        	longa	on
  2116                        	longi	on
  2117 03:115F: 3B           	tsc
  2118 03:1160: 38           	sec
  2119 03:1161: E9 08 00     	sbc	#L45
  2120 03:1164: 1B           	tcs
  2121 03:1165: 0B           	phd
  2122 03:1166: 5B           	tcd
  2123                        	.block	317
  2124                        ;	int i, j;
  2125                        ;	
  2126                        ;	//volatile uint8_t *ptr;
  2127                        ;	/*for(i=0; i<0xA; i++)
  2128                        ;	{
  2129                        ;		ptr = (volatile uint8_t *)(i<<16);
  2130                        ;		for(j=0; j<0xFFFF; j++)
  2131                        ;			ptr[j] = 0;
  Wed Apr 14 2021  0:19                                                                                                    Page 48


  2132                        ;	}*/
  2133                        ;	
  2134                        ;	for(j=0; j<0xFFFF; j++)
  2135             00000000   i_1	set	0
  2136             00000002   j_1	set	2
  2137                        	.sym	i,0,5,1,16
  2138                        	.sym	j,2,5,1,16
  2139                        	.line	328
  2140 03:1167: 64 07        	stz	<L46+j_1
  2141 03:1169: 80 16        	bra	L10047
  2142                        L10046:
  2143                        ;		((volatile uint8_t *)0xB60000)[j] = 0;
  2144                        	.line	329
  2145 03:116B: A9 00 00     	lda	#$0
  2146 03:116E: 85 01        	sta	<R0
  2147 03:1170: A9 B6 00     	lda	#$b6
  2148 03:1173: 85 03        	sta	<R0+2
  2149 03:1175: E2 20        	sep	#$20
  2150                        	longa	off
  2151 03:1177: A9 00        	lda	#$0
  2152 03:1179: A4 07        	ldy	<L46+j_1
  2153 03:117B: 97 01        	sta	[<R0],Y
  2154 03:117D: C2 20        	rep	#$20
  2155                        	longa	on
  2156 03:117F: E6 07        	inc	<L46+j_1
  2157                        L10047:
  2158 03:1181: A5 07        	lda	<L46+j_1
  2159 03:1183: C9 FF FF     	cmp	#<$ffff
  2160 03:1186: 90 E3        	bcc	L10046
  2161                        ;	for(j=0; j<0xFFFF; j++)
  2162                        	.line	330
  2163 03:1188: 64 07        	stz	<L46+j_1
  2164 03:118A: 80 16        	bra	L10051
  2165                        L10050:
  2166                        ;		((volatile uint8_t *)0xB70000)[j] = 0;
  2167                        	.line	331
  2168 03:118C: A9 00 00     	lda	#$0
  2169 03:118F: 85 01        	sta	<R0
  2170 03:1191: A9 B7 00     	lda	#$b7
  2171 03:1194: 85 03        	sta	<R0+2
  2172 03:1196: E2 20        	sep	#$20
  2173                        	longa	off
  2174 03:1198: A9 00        	lda	#$0
  2175 03:119A: A4 07        	ldy	<L46+j_1
  2176 03:119C: 97 01        	sta	[<R0],Y
  2177 03:119E: C2 20        	rep	#$20
  2178                        	longa	on
  2179 03:11A0: E6 07        	inc	<L46+j_1
  2180                        L10051:
  2181 03:11A2: A5 07        	lda	<L46+j_1
  2182 03:11A4: C9 FF FF     	cmp	#<$ffff
  2183 03:11A7: 90 E3        	bcc	L10050
  2184                        ;	for(j=0; j<0xFFFF; j++)
  2185                        	.line	332
  2186 03:11A9: 64 07        	stz	<L46+j_1
  2187 03:11AB: 80 16        	bra	L10055
  2188                        L10054:
  2189                        ;		((volatile uint8_t *)0xB80000)[j] = 0;
  Wed Apr 14 2021  0:19                                                                                                    Page 49


  2190                        	.line	333
  2191 03:11AD: A9 00 00     	lda	#$0
  2192 03:11B0: 85 01        	sta	<R0
  2193 03:11B2: A9 B8 00     	lda	#$b8
  2194 03:11B5: 85 03        	sta	<R0+2
  2195 03:11B7: E2 20        	sep	#$20
  2196                        	longa	off
  2197 03:11B9: A9 00        	lda	#$0
  2198 03:11BB: A4 07        	ldy	<L46+j_1
  2199 03:11BD: 97 01        	sta	[<R0],Y
  2200 03:11BF: C2 20        	rep	#$20
  2201                        	longa	on
  2202 03:11C1: E6 07        	inc	<L46+j_1
  2203                        L10055:
  2204 03:11C3: A5 07        	lda	<L46+j_1
  2205 03:11C5: C9 FF FF     	cmp	#<$ffff
  2206 03:11C8: 90 E3        	bcc	L10054
  2207                        ;	for(j=0; j<0xFFFF; j++)
  2208                        	.line	334
  2209 03:11CA: 64 07        	stz	<L46+j_1
  2210 03:11CC: 80 16        	bra	L10059
  2211                        L10058:
  2212                        ;		((volatile uint8_t *)0xB90000)[j] = 0;
  2213                        	.line	335
  2214 03:11CE: A9 00 00     	lda	#$0
  2215 03:11D1: 85 01        	sta	<R0
  2216 03:11D3: A9 B9 00     	lda	#$b9
  2217 03:11D6: 85 03        	sta	<R0+2
  2218 03:11D8: E2 20        	sep	#$20
  2219                        	longa	off
  2220 03:11DA: A9 00        	lda	#$0
  2221 03:11DC: A4 07        	ldy	<L46+j_1
  2222 03:11DE: 97 01        	sta	[<R0],Y
  2223 03:11E0: C2 20        	rep	#$20
  2224                        	longa	on
  2225 03:11E2: E6 07        	inc	<L46+j_1
  2226                        L10059:
  2227 03:11E4: A5 07        	lda	<L46+j_1
  2228 03:11E6: C9 FF FF     	cmp	#<$ffff
  2229 03:11E9: 90 E3        	bcc	L10058
  2230                        ;	for(j=0; j<0xFFFF; j++)
  2231                        	.line	336
  2232 03:11EB: 64 07        	stz	<L46+j_1
  2233                        ;	return;
  2234                        	.line	337
  2235 03:11ED: A5 07        	lda	<L46+j_1
  2236 03:11EF: C9 FF FF     	cmp	#<$ffff
  2237 03:11F2: B0 00        	bcs	L52
  2238                        L52:
  2239 03:11F4: 2B           	pld
  2240 03:11F5: 3B           	tsc
  2241 03:11F6: 18           	clc
  2242 03:11F7: 69 08 00     	adc	#L45
  2243 03:11FA: 1B           	tcs
  2244 03:11FB: 6B           	rtl
  2245                        ;}
  2246                        	.line	338
  2247                        	.endblock	338
  Wed Apr 14 2021  0:19                                                                                                    Page 50


  2248             00000008   L45	equ	8
  2249             00000005   L46	equ	5
  2250 03:11FC:              	ends
  2251                        	efunc
  2252                        	.endfunc	338,5,8
  2253                        	.line	338
  2254                        ;
  2255                        ;
  2256                        ;void Drow_line(struct Point a, struct Point b, uint8_t colour)
  2257                        ;{
  2258                        	.line	341
  2259                        	.line	342
  2260                        	bank3
  2261                        	xdef	~~Drow_line
  2262                        	func
  2263                        	.function	342
  2264                        ~~Drow_line:
  2265                        	longa	on
  2266                        	longi	on
  2267 03:11FC: 3B           	tsc
  2268 03:11FD: 38           	sec
  2269 03:11FE: E9 12 00     	sbc	#L54
  2270 03:1201: 1B           	tcs
  2271 03:1202: 0B           	phd
  2272 03:1203: 5B           	tcd
  2273             00000004   a_0	set	4
  2274             0000000A   b_0	set	10
  2275             00000010   colour_0	set	16
  2276                        	.block	342
  2277                        ;	uint16_t x, y;
  2278                        ;	
  2279                        ;	uint8_t *address = (uint8_t *)0xB60000;
  2280                        ;	
  2281                        ;	if(a.x == b.x) //horisontral line
  2282             00000000   x_1	set	0
  2283             00000002   y_1	set	2
  2284             00000004   address_1	set	4
  2285                        	.sym	x,0,16,1,16
  2286                        	.sym	y,2,16,1,16
  2287                        	.sym	address,4,142,1,32
  2288                        	.sym	a,4,10,6,48,5
  2289                        	.sym	b,10,10,6,48,5
  2290                        	.sym	colour,16,14,6,8
  2291 03:1204: A9 00 00     	lda	#$0
  2292 03:1207: 85 05        	sta	<L55+address_1
  2293 03:1209: A9 B6 00     	lda	#$b6
  2294 03:120C: 85 07        	sta	<L55+address_1+2
  2295                        	.line	347
  2296                        ;	{
  2297 03:120E: A5 16        	lda	<L54+a_0
  2298 03:1210: C5 1C        	cmp	<L54+b_0
  2299 03:1212: F0 03        	beq	*+5
  2300 03:1214: 82 F5 00     	brl	L10064
  2301                        	.line	348
  2302                        ;		
  2303                        ;		
  2304                        ;	
  2305                        ;		// address = address + a.x *640 start address of the first point
  Wed Apr 14 2021  0:19                                                                                                    Page 51


  2306                        ;		*(uint16_t*)UNSIGNED_MULT_A_LO = a.x;
  2307                        	.line	353
  2308 03:1217: A5 16        	lda	<L54+a_0
  2309 03:1219: 8F 00 01 00  	sta	>256
  2310                        ;		*(uint16_t*)UNSIGNED_MULT_B_LO = 640;
  2311                        	.line	354
  2312 03:121D: A9 80 02     	lda	#$280
  2313 03:1220: 8F 02 01 00  	sta	>258
  2314                        ;		
  2315                        ;		*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  2316                        	.line	356
  2317 03:1224: A5 05        	lda	<L55+address_1
  2318 03:1226: 8F 20 01 00  	sta	>288
  2319                        ;		*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  2320                        	.line	357
  2321 03:122A: A5 07        	lda	<L55+address_1+2
  2322 03:122C: 8F 22 01 00  	sta	>290
  2323                        ;		*(uint16_t*)ADDER32_B_LL = *((uint16_t*)UNSIGNED_MULT_AL_LO);
  2324                        	.line	358
  2325 03:1230: AF 04 01 00  	lda	>260
  2326 03:1234: 8F 24 01 00  	sta	>292
  2327                        ;		*(uint16_t*)ADDER32_B_HL = *((uint16_t*)UNSIGNED_MULT_AH_LO);
  2328                        	.line	359
  2329 03:1238: AF 06 01 00  	lda	>262
  2330 03:123C: 8F 26 01 00  	sta	>294
  2331                        ;		
  2332                        ;		*(uint16_t*)ADDER32_A_HL = *((uint16_t*)ADDER32_R_HL); // make sure to write the Hight part 
                    first !!!, if you load  you moddify ADDER32_A_LL first that will affect the content of the result
  2333                        	.line	361
  2334 03:1240: AF 2A 01 00  	lda	>298
  2335 03:1244: 8F 22 01 00  	sta	>290
  2336                        ;		*(uint16_t*)ADDER32_A_LL = *((uint16_t*)ADDER32_R_LL);
  2337                        	.line	362
  2338 03:1248: AF 28 01 00  	lda	>296
  2339 03:124C: 8F 20 01 00  	sta	>288
  2340                        ;
  2341                        ;		if(a.y<b.y)
  2342                        	.line	364
  2343                        ;		{
  2344 03:1250: A5 18        	lda	<L54+a_0+2
  2345 03:1252: C5 1E        	cmp	<L54+b_0+2
  2346 03:1254: B0 5B        	bcs	L10065
  2347                        	.line	365
  2348                        ;			uint16_t dy = b.y - a.y;
  2349                        ;			
  2350                        ;			*(uint16_t*)ADDER32_B_LL = a.y;
  2351                        	.block	368
  2352             00000008   dy_2	set	8
  2353                        	.sym	dy,8,16,1,16
  2354 03:1256: 38           	sec
  2355 03:1257: A5 1E        	lda	<L54+b_0+2
  2356 03:1259: E5 18        	sbc	<L54+a_0+2
  2357 03:125B: 85 09        	sta	<L55+dy_2
  2358                        	.line	368
  2359 03:125D: A5 18        	lda	<L54+a_0+2
  2360 03:125F: 8F 24 01 00  	sta	>292
  2361                        ;			*(uint16_t*)ADDER32_B_HL = 0x0000;
  2362                        	.line	369
  Wed Apr 14 2021  0:19                                                                                                    Page 52


  2363 03:1263: A9 00 00     	lda	#$0
  2364 03:1266: 8F 26 01 00  	sta	>294
  2365                        ;			
  2366                        ;			*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  2367                        	.line	371
  2368 03:126A: AF 28 01 00  	lda	>296
  2369 03:126E: 85 05        	sta	<L55+address_1
  2370                        ;			*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  2371                        	.line	372
  2372 03:1270: AF 2A 01 00  	lda	>298
  2373 03:1274: 85 07        	sta	<L55+address_1+2
  2374                        ;			
  2375                        ;			*((uint16_t*)ADDER32_B_LL) = (uint16_t)0x0001;
  2376                        	.line	374
  2377 03:1276: A9 01 00     	lda	#$1
  2378 03:1279: 8F 24 01 00  	sta	>292
  2379                        ;			*((uint16_t*)ADDER32_B_HL) = (uint16_t)0x0000;
  2380                        	.line	375
  2381 03:127D: 3A           	dea
  2382 03:127E: 8F 26 01 00  	sta	>294
  2383                        ;		
  2384                        ;			for(y=0; y < dy; y++)
  2385                        	.line	377
  2386 03:1282: 64 03        	stz	<L55+y_1
  2387 03:1284: 80 22        	bra	L10069
  2388                        L10068:
  2389                        ;			{
  2390                        	.line	378
  2391                        ;				*((volatile uint8_t *)address) = colour;
  2392                        	.line	379
  2393 03:1286: E2 20        	sep	#$20
  2394                        	longa	off
  2395 03:1288: A5 22        	lda	<L54+colour_0
  2396 03:128A: 87 05        	sta	[<L55+address_1]
  2397 03:128C: C2 20        	rep	#$20
  2398                        	longa	on
  2399                        ;				*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  2400                        	.line	380
  2401 03:128E: A5 05        	lda	<L55+address_1
  2402 03:1290: 8F 20 01 00  	sta	>288
  2403                        ;				*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  2404                        	.line	381
  2405 03:1294: A5 07        	lda	<L55+address_1+2
  2406 03:1296: 8F 22 01 00  	sta	>290
  2407                        ;				*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  2408                        	.line	382
  2409 03:129A: AF 28 01 00  	lda	>296
  2410 03:129E: 85 05        	sta	<L55+address_1
  2411                        ;				*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  2412                        	.line	383
  2413 03:12A0: AF 2A 01 00  	lda	>298
  2414 03:12A4: 85 07        	sta	<L55+address_1+2
  2415                        ;			}
  2416                        	.line	384
  2417 03:12A6: E6 03        	inc	<L55+y_1
  2418                        L10069:
  2419 03:12A8: A5 03        	lda	<L55+y_1
  2420 03:12AA: C5 09        	cmp	<L55+dy_2
  Wed Apr 14 2021  0:19                                                                                                    Page 53


  2421 03:12AC: 90 D8        	bcc	L10068
  2422 03:12AE: 82 44 06     	brl	L106
  2423                        ;		}
  2424                        	.endblock	385
  2425                        	.line	385
  2426                        ;		else
  2427                        L10065:
  2428                        ;		{
  2429                        	.line	387
  2430                        ;			uint16_t dy = a.y - b.y;
  2431                        ;			
  2432                        ;			*(uint16_t*)ADDER32_B_LL = b.y;
  2433                        	.block	390
  2434             00000008   dy_3	set	8
  2435                        	.sym	dy,8,16,1,16
  2436 03:12B1: 38           	sec
  2437 03:12B2: A5 18        	lda	<L54+a_0+2
  2438 03:12B4: E5 1E        	sbc	<L54+b_0+2
  2439 03:12B6: 85 09        	sta	<L55+dy_3
  2440                        	.line	390
  2441 03:12B8: A5 1E        	lda	<L54+b_0+2
  2442 03:12BA: 8F 24 01 00  	sta	>292
  2443                        ;			*(uint16_t*)ADDER32_B_HL = 0x0000;
  2444                        	.line	391
  2445 03:12BE: A9 00 00     	lda	#$0
  2446 03:12C1: 8F 26 01 00  	sta	>294
  2447                        ;			
  2448                        ;			*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  2449                        	.line	393
  2450 03:12C5: AF 28 01 00  	lda	>296
  2451 03:12C9: 85 05        	sta	<L55+address_1
  2452                        ;			*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  2453                        	.line	394
  2454 03:12CB: AF 2A 01 00  	lda	>298
  2455 03:12CF: 85 07        	sta	<L55+address_1+2
  2456                        ;			
  2457                        ;			*((uint16_t*)ADDER32_B_LL) = (uint16_t)0x0001;
  2458                        	.line	396
  2459 03:12D1: A9 01 00     	lda	#$1
  2460 03:12D4: 8F 24 01 00  	sta	>292
  2461                        ;			*((uint16_t*)ADDER32_B_HL) = (uint16_t)0x0000;
  2462                        	.line	397
  2463 03:12D8: 3A           	dea
  2464 03:12D9: 8F 26 01 00  	sta	>294
  2465                        ;		
  2466                        ;			for(y=0; y < dy; y++)
  2467                        	.line	399
  2468 03:12DD: 64 03        	stz	<L55+y_1
  2469 03:12DF: 80 22        	bra	L10074
  2470                        L10073:
  2471                        ;			{
  2472                        	.line	400
  2473                        ;				*((volatile uint8_t *)address) = colour;
  2474                        	.line	401
  2475 03:12E1: E2 20        	sep	#$20
  2476                        	longa	off
  2477 03:12E3: A5 22        	lda	<L54+colour_0
  2478 03:12E5: 87 05        	sta	[<L55+address_1]
  Wed Apr 14 2021  0:19                                                                                                    Page 54


  2479 03:12E7: C2 20        	rep	#$20
  2480                        	longa	on
  2481                        ;				*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  2482                        	.line	402
  2483 03:12E9: A5 05        	lda	<L55+address_1
  2484 03:12EB: 8F 20 01 00  	sta	>288
  2485                        ;				*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  2486                        	.line	403
  2487 03:12EF: A5 07        	lda	<L55+address_1+2
  2488 03:12F1: 8F 22 01 00  	sta	>290
  2489                        ;				*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  2490                        	.line	404
  2491 03:12F5: AF 28 01 00  	lda	>296
  2492 03:12F9: 85 05        	sta	<L55+address_1
  2493                        ;				*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  2494                        	.line	405
  2495 03:12FB: AF 2A 01 00  	lda	>298
  2496 03:12FF: 85 07        	sta	<L55+address_1+2
  2497                        ;			}
  2498                        	.line	406
  2499 03:1301: E6 03        	inc	<L55+y_1
  2500                        L10074:
  2501 03:1303: A5 03        	lda	<L55+y_1
  2502 03:1305: C5 09        	cmp	<L55+dy_3
  2503 03:1307: 90 D8        	bcc	L10073
  2504 03:1309: 82 E9 05     	brl	L106
  2505                        ;			
  2506                        ;			/*uint16_t dy = a.y - b.y;
  2507                        ;			uint32_t offset = b.y;
  2508                        ;			
  2509                        ;			for(y=0; y < dy; y++)
  2510                        ;			{
  2511                        ;				((volatile uint8_t *)0xB60000)[a.x + offset] = colour;
  2512                        ;				offset += 640; // move to the next line
  2513                        ;			}*/
  2514                        ;		}
  2515                        	.endblock	416
  2516                        	.line	416
  2517                        L10064:
  2518                        	.line	418
  2519                        ;	{
  2520 03:130C: A5 18        	lda	<L54+a_0+2
  2521 03:130E: C5 1E        	cmp	<L54+b_0+2
  2522 03:1310: F0 03        	beq	*+5
  2523 03:1312: 82 F9 00     	brl	L10076
  2524                        	.line	419
  2525                        ;		//uint32_t offset = a.y*640; // comput the start line
  2526                        ;		
  2527                        ;		
  2528                        ;	
  2529                        ;		// address = address + a.x *640 start address of the first point
  2530                        ;		*(uint16_t*)UNSIGNED_MULT_A_LO = a.x;
  2531                        	.line	425
  2532 03:1315: A5 16        	lda	<L54+a_0
  2533 03:1317: 8F 00 01 00  	sta	>256
  2534                        ;		*(uint16_t*)UNSIGNED_MULT_B_LO = 640;
  2535                        	.line	426
  2536 03:131B: A9 80 02     	lda	#$280
  Wed Apr 14 2021  0:19                                                                                                    Page 55


  2537 03:131E: 8F 02 01 00  	sta	>258
  2538                        ;		
  2539                        ;		*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  2540                        	.line	428
  2541 03:1322: A5 05        	lda	<L55+address_1
  2542 03:1324: 8F 20 01 00  	sta	>288
  2543                        ;		*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  2544                        	.line	429
  2545 03:1328: A5 07        	lda	<L55+address_1+2
  2546 03:132A: 8F 22 01 00  	sta	>290
  2547                        ;		*(uint16_t*)ADDER32_B_LL = *((uint16_t*)UNSIGNED_MULT_AL_LO);
  2548                        	.line	430
  2549 03:132E: AF 04 01 00  	lda	>260
  2550 03:1332: 8F 24 01 00  	sta	>292
  2551                        ;		*(uint16_t*)ADDER32_B_HL = *((uint16_t*)UNSIGNED_MULT_AH_LO);
  2552                        	.line	431
  2553 03:1336: AF 06 01 00  	lda	>262
  2554 03:133A: 8F 26 01 00  	sta	>294
  2555                        ;		
  2556                        ;		*(uint16_t*)ADDER32_A_HL = *((uint16_t*)ADDER32_R_HL); // make sure to write the Hight part 
                    first !!!, if you load  you moddify ADDER32_A_LL first that will affect the content of the result
  2557                        	.line	433
  2558 03:133E: AF 2A 01 00  	lda	>298
  2559 03:1342: 8F 22 01 00  	sta	>290
  2560                        ;		*(uint16_t*)ADDER32_A_LL = *((uint16_t*)ADDER32_R_LL);
  2561                        	.line	434
  2562 03:1346: AF 28 01 00  	lda	>296
  2563 03:134A: 8F 20 01 00  	sta	>288
  2564                        ;		
  2565                        ;		if(a.x<b.x)
  2566                        	.line	436
  2567                        ;		{
  2568 03:134E: A5 16        	lda	<L54+a_0
  2569 03:1350: C5 1C        	cmp	<L54+b_0
  2570 03:1352: B0 5D        	bcs	L10077
  2571                        	.line	437
  2572                        ;			//for(x=a.x; x < b.x; x++)
  2573                        ;			//	((volatile uint8_t *)0xB60000)[x + offset] = colour;
  2574                        ;			uint16_t dy = b.y - a.y;
  2575                        ;			
  2576                        ;			*(uint16_t*)ADDER32_B_LL = a.y;
  2577                        	.block	442
  2578             00000008   dy_4	set	8
  2579                        	.sym	dy,8,16,1,16
  2580 03:1354: 38           	sec
  2581 03:1355: A5 1E        	lda	<L54+b_0+2
  2582 03:1357: E5 18        	sbc	<L54+a_0+2
  2583 03:1359: 85 09        	sta	<L55+dy_4
  2584                        	.line	442
  2585 03:135B: A5 18        	lda	<L54+a_0+2
  2586 03:135D: 8F 24 01 00  	sta	>292
  2587                        ;			*(uint16_t*)ADDER32_B_HL = 0x0000;
  2588                        	.line	443
  2589 03:1361: A9 00 00     	lda	#$0
  2590 03:1364: 8F 26 01 00  	sta	>294
  2591                        ;			
  2592                        ;			*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  2593                        	.line	445
  Wed Apr 14 2021  0:19                                                                                                    Page 56


  2594 03:1368: AF 28 01 00  	lda	>296
  2595 03:136C: 85 05        	sta	<L55+address_1
  2596                        ;			*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  2597                        	.line	446
  2598 03:136E: AF 2A 01 00  	lda	>298
  2599 03:1372: 85 07        	sta	<L55+address_1+2
  2600                        ;			
  2601                        ;			*((uint16_t*)ADDER32_B_LL) = (uint16_t)0x0280;
  2602                        	.line	448
  2603 03:1374: A9 80 02     	lda	#$280
  2604 03:1377: 8F 24 01 00  	sta	>292
  2605                        ;			*((uint16_t*)ADDER32_B_HL) = (uint16_t)0x0000;
  2606                        	.line	449
  2607 03:137B: A9 00 00     	lda	#$0
  2608 03:137E: 8F 26 01 00  	sta	>294
  2609                        ;		
  2610                        ;			for(y=0; y < dy; y++)
  2611                        	.line	451
  2612 03:1382: 64 03        	stz	<L55+y_1
  2613 03:1384: 80 22        	bra	L10081
  2614                        L10080:
  2615                        ;			{
  2616                        	.line	452
  2617                        ;				*((volatile uint8_t *)address) = colour;
  2618                        	.line	453
  2619 03:1386: E2 20        	sep	#$20
  2620                        	longa	off
  2621 03:1388: A5 22        	lda	<L54+colour_0
  2622 03:138A: 87 05        	sta	[<L55+address_1]
  2623 03:138C: C2 20        	rep	#$20
  2624                        	longa	on
  2625                        ;				*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  2626                        	.line	454
  2627 03:138E: A5 05        	lda	<L55+address_1
  2628 03:1390: 8F 20 01 00  	sta	>288
  2629                        ;				*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  2630                        	.line	455
  2631 03:1394: A5 07        	lda	<L55+address_1+2
  2632 03:1396: 8F 22 01 00  	sta	>290
  2633                        ;				*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  2634                        	.line	456
  2635 03:139A: AF 28 01 00  	lda	>296
  2636 03:139E: 85 05        	sta	<L55+address_1
  2637                        ;				*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  2638                        	.line	457
  2639 03:13A0: AF 2A 01 00  	lda	>298
  2640 03:13A4: 85 07        	sta	<L55+address_1+2
  2641                        ;			}
  2642                        	.line	458
  2643 03:13A6: E6 03        	inc	<L55+y_1
  2644                        L10081:
  2645 03:13A8: A5 03        	lda	<L55+y_1
  2646 03:13AA: C5 09        	cmp	<L55+dy_4
  2647 03:13AC: 90 D8        	bcc	L10080
  2648 03:13AE: 82 44 05     	brl	L106
  2649                        ;		}
  2650                        	.endblock	459
  2651                        	.line	459
  Wed Apr 14 2021  0:19                                                                                                    Page 57


  2652                        ;		else
  2653                        L10077:
  2654                        ;		{
  2655                        	.line	461
  2656                        ;			//for(x=b.x; x < a.x; x++)
  2657                        ;			//	((volatile uint8_t *)0xB60000)[x + offset] = colour;
  2658                        ;			uint16_t dy = a.y - b.y;
  2659                        ;			
  2660                        ;			*(uint16_t*)ADDER32_B_LL = b.y;
  2661                        	.block	466
  2662             00000008   dy_5	set	8
  2663                        	.sym	dy,8,16,1,16
  2664 03:13B1: 38           	sec
  2665 03:13B2: A5 18        	lda	<L54+a_0+2
  2666 03:13B4: E5 1E        	sbc	<L54+b_0+2
  2667 03:13B6: 85 09        	sta	<L55+dy_5
  2668                        	.line	466
  2669 03:13B8: A5 1E        	lda	<L54+b_0+2
  2670 03:13BA: 8F 24 01 00  	sta	>292
  2671                        ;			*(uint16_t*)ADDER32_B_HL = 0x0000;
  2672                        	.line	467
  2673 03:13BE: A9 00 00     	lda	#$0
  2674 03:13C1: 8F 26 01 00  	sta	>294
  2675                        ;			
  2676                        ;			*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  2677                        	.line	469
  2678 03:13C5: AF 28 01 00  	lda	>296
  2679 03:13C9: 85 05        	sta	<L55+address_1
  2680                        ;			*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  2681                        	.line	470
  2682 03:13CB: AF 2A 01 00  	lda	>298
  2683 03:13CF: 85 07        	sta	<L55+address_1+2
  2684                        ;			
  2685                        ;			*((uint16_t*)ADDER32_B_LL) = (uint16_t)0x0280;
  2686                        	.line	472
  2687 03:13D1: A9 80 02     	lda	#$280
  2688 03:13D4: 8F 24 01 00  	sta	>292
  2689                        ;			*((uint16_t*)ADDER32_B_HL) = (uint16_t)0x0000;
  2690                        	.line	473
  2691 03:13D8: A9 00 00     	lda	#$0
  2692 03:13DB: 8F 26 01 00  	sta	>294
  2693                        ;			for(y=0; y < dy; y++)
  2694                        	.line	474
  2695 03:13DF: 64 03        	stz	<L55+y_1
  2696 03:13E1: 80 22        	bra	L10086
  2697                        L10085:
  2698                        ;			{
  2699                        	.line	475
  2700                        ;				*((volatile uint8_t *)address) = colour;
  2701                        	.line	476
  2702 03:13E3: E2 20        	sep	#$20
  2703                        	longa	off
  2704 03:13E5: A5 22        	lda	<L54+colour_0
  2705 03:13E7: 87 05        	sta	[<L55+address_1]
  2706 03:13E9: C2 20        	rep	#$20
  2707                        	longa	on
  2708                        ;				*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  2709                        	.line	477
  Wed Apr 14 2021  0:19                                                                                                    Page 58


  2710 03:13EB: A5 05        	lda	<L55+address_1
  2711 03:13ED: 8F 20 01 00  	sta	>288
  2712                        ;				*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  2713                        	.line	478
  2714 03:13F1: A5 07        	lda	<L55+address_1+2
  2715 03:13F3: 8F 22 01 00  	sta	>290
  2716                        ;				*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  2717                        	.line	479
  2718 03:13F7: AF 28 01 00  	lda	>296
  2719 03:13FB: 85 05        	sta	<L55+address_1
  2720                        ;				*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  2721                        	.line	480
  2722 03:13FD: AF 2A 01 00  	lda	>298
  2723 03:1401: 85 07        	sta	<L55+address_1+2
  2724                        ;			}
  2725                        	.line	481
  2726 03:1403: E6 03        	inc	<L55+y_1
  2727                        L10086:
  2728 03:1405: A5 03        	lda	<L55+y_1
  2729 03:1407: C5 09        	cmp	<L55+dy_5
  2730 03:1409: 90 D8        	bcc	L10085
  2731 03:140B: 82 E7 04     	brl	L106
  2732                        ;		}
  2733                        	.endblock	482
  2734                        	.line	482
  2735                        L10076:
  2736                        ;	{
  2737                        	.line	485
  2738                        ;		if(a.x<b.x) // A_X is less then B_X => quadran 1 and 2
  2739                        	.line	486
  2740                        ;		{
  2741 03:140E: A5 16        	lda	<L54+a_0
  2742 03:1410: C5 1C        	cmp	<L54+b_0
  2743 03:1412: 90 03        	bcc	*+5
  2744 03:1414: 82 3C 03     	brl	L10088
  2745                        	.line	487
  2746                        ;		
  2747                        ;			uint16_t dy, dx = b.x - a.x;
  2748                        ;			
  2749                        ;			
  2750                        ;			if(a.y < b.y) // Q1
  2751                        	.block	492
  2752             00000008   dy_6	set	8
  2753             0000000A   dx_6	set	10
  2754                        	.sym	dy,8,16,1,16
  2755                        	.sym	dx,10,16,1,16
  2756 03:1417: 38           	sec
  2757 03:1418: A5 1C        	lda	<L54+b_0
  2758 03:141A: E5 16        	sbc	<L54+a_0
  2759 03:141C: 85 0B        	sta	<L55+dx_6
  2760                        	.line	492
  2761                        ;			{
  2762 03:141E: A5 18        	lda	<L54+a_0+2
  2763 03:1420: C5 1E        	cmp	<L54+b_0+2
  2764 03:1422: 90 03        	bcc	*+5
  2765 03:1424: 82 96 01     	brl	L10089
  2766                        	.line	493
  2767                        ;				
  Wed Apr 14 2021  0:19                                                                                                    Page 59


  2768                        ;				//  |x
  2769                        ;				//-----
  2770                        ;				//  |
  2771                        ;				
  2772                        ;				uint16_t offset_y = 0; // same as ofset
  2773                        ;				uint16_t uStep;
  2774                        ;				uint16_t uStep_CPT = 0;
  2775                        ;				
  2776                        ;				
  2777                        ;				// address = address + a.x *640 start address of the first point
  2778                        ;				*(uint16_t*)UNSIGNED_MULT_A_LO = a.x;
  2779                        	.block	505
  2780             0000000C   offset_y_7	set	12
  2781             0000000E   uStep_7	set	14
  2782             00000010   uStep_CPT_7	set	16
  2783                        	.sym	offset_y,12,16,1,16
  2784                        	.sym	uStep,14,16,1,16
  2785                        	.sym	uStep_CPT,16,16,1,16
  2786 03:1427: 64 0D        	stz	<L55+offset_y_7
  2787 03:1429: 64 11        	stz	<L55+uStep_CPT_7
  2788                        	.line	505
  2789 03:142B: A5 16        	lda	<L54+a_0
  2790 03:142D: 8F 00 01 00  	sta	>256
  2791                        ;				*(uint16_t*)UNSIGNED_MULT_B_LO = 640;
  2792                        	.line	506
  2793 03:1431: A9 80 02     	lda	#$280
  2794 03:1434: 8F 02 01 00  	sta	>258
  2795                        ;				
  2796                        ;				*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  2797                        	.line	508
  2798 03:1438: A5 05        	lda	<L55+address_1
  2799 03:143A: 8F 20 01 00  	sta	>288
  2800                        ;				*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  2801                        	.line	509
  2802 03:143E: A5 07        	lda	<L55+address_1+2
  2803 03:1440: 8F 22 01 00  	sta	>290
  2804                        ;				*(uint16_t*)ADDER32_B_LL = *((uint16_t*)UNSIGNED_MULT_AL_LO);
  2805                        	.line	510
  2806 03:1444: AF 04 01 00  	lda	>260
  2807 03:1448: 8F 24 01 00  	sta	>292
  2808                        ;				*(uint16_t*)ADDER32_B_HL = *((uint16_t*)UNSIGNED_MULT_AH_LO);
  2809                        	.line	511
  2810 03:144C: AF 06 01 00  	lda	>262
  2811 03:1450: 8F 26 01 00  	sta	>294
  2812                        ;				
  2813                        ;				*(uint16_t*)ADDER32_A_HL = *((uint16_t*)ADDER32_R_HL); // make sure to write
                     the Hight part first !!!, if you load  you moddify ADDER32_A_LL first that will affect the content of the resul
                    t
  2814                        	.line	513
  2815 03:1454: AF 2A 01 00  	lda	>298
  2816 03:1458: 8F 22 01 00  	sta	>290
  2817                        ;				*(uint16_t*)ADDER32_A_LL = *((uint16_t*)ADDER32_R_LL);
  2818                        	.line	514
  2819 03:145C: AF 28 01 00  	lda	>296
  2820 03:1460: 8F 20 01 00  	sta	>288
  2821                        ;				*(uint16_t*)ADDER32_B_LL = a.y;
  2822                        	.line	515
  2823 03:1464: A5 18        	lda	<L54+a_0+2
  Wed Apr 14 2021  0:19                                                                                                    Page 60


  2824 03:1466: 8F 24 01 00  	sta	>292
  2825                        ;				*(uint16_t*)ADDER32_B_HL = 0x0000;
  2826                        	.line	516
  2827 03:146A: A9 00 00     	lda	#$0
  2828 03:146D: 8F 26 01 00  	sta	>294
  2829                        ;				
  2830                        ;				*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  2831                        	.line	518
  2832 03:1471: AF 28 01 00  	lda	>296
  2833 03:1475: 85 05        	sta	<L55+address_1
  2834                        ;				*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  2835                        	.line	519
  2836 03:1477: AF 2A 01 00  	lda	>298
  2837 03:147B: 85 07        	sta	<L55+address_1+2
  2838                        ;				
  2839                        ;				dy = b.y - a.y;
  2840                        	.line	521
  2841 03:147D: 38           	sec
  2842 03:147E: A5 1E        	lda	<L54+b_0+2
  2843 03:1480: E5 18        	sbc	<L54+a_0+2
  2844 03:1482: 85 09        	sta	<L55+dy_6
  2845                        ;				if(dx == dy)// 45*  -------------------------------------------
  2846                        	.line	522
  2847                        ;				{
  2848 03:1484: A5 0B        	lda	<L55+dx_6
  2849 03:1486: C5 09        	cmp	<L55+dy_6
  2850 03:1488: D0 3D        	bne	L10090
  2851                        	.line	523
  2852                        ;
  2853                        ;					
  2854                        ;					*((uint16_t*)ADDER32_B_LL) = (uint16_t)0x0281;
  2855                        	.line	526
  2856 03:148A: A9 81 02     	lda	#$281
  2857 03:148D: 8F 24 01 00  	sta	>292
  2858                        ;					*((uint16_t*)ADDER32_B_HL) = (uint16_t)0x0000;
  2859                        	.line	527
  2860 03:1491: A9 00 00     	lda	#$0
  2861 03:1494: 8F 26 01 00  	sta	>294
  2862                        ;					
  2863                        ;					for(y=0; y < dy; y++)
  2864                        	.line	529
  2865 03:1498: 64 03        	stz	<L55+y_1
  2866 03:149A: 80 22        	bra	L10094
  2867                        L10093:
  2868                        ;					{
  2869                        	.line	530
  2870                        ;						//((volatile uint8_t * far)address)[a.x + offset] = colour;
  2871                        ;						*((volatile uint8_t *)address) = colour;
  2872                        	.line	532
  2873 03:149C: E2 20        	sep	#$20
  2874                        	longa	off
  2875 03:149E: A5 22        	lda	<L54+colour_0
  2876 03:14A0: 87 05        	sta	[<L55+address_1]
  2877 03:14A2: C2 20        	rep	#$20
  2878                        	longa	on
  2879                        ;						
  2880                        ;						*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  2881                        	.line	534
  Wed Apr 14 2021  0:19                                                                                                    Page 61


  2882 03:14A4: A5 05        	lda	<L55+address_1
  2883 03:14A6: 8F 20 01 00  	sta	>288
  2884                        ;						*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  2885                        	.line	535
  2886 03:14AA: A5 07        	lda	<L55+address_1+2
  2887 03:14AC: 8F 22 01 00  	sta	>290
  2888                        ;						*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  2889                        	.line	536
  2890 03:14B0: AF 28 01 00  	lda	>296
  2891 03:14B4: 85 05        	sta	<L55+address_1
  2892                        ;						*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  2893                        	.line	537
  2894 03:14B6: AF 2A 01 00  	lda	>298
  2895 03:14BA: 85 07        	sta	<L55+address_1+2
  2896                        ;					}
  2897                        	.line	538
  2898 03:14BC: E6 03        	inc	<L55+y_1
  2899                        L10094:
  2900 03:14BE: A5 03        	lda	<L55+y_1
  2901 03:14C0: C5 09        	cmp	<L55+dy_6
  2902 03:14C2: 90 D8        	bcc	L10093
  2903 03:14C4: 82 2E 04     	brl	L106
  2904                        ;				}
  2905                        	.line	539
  2906                        ;				else if(dx < dy) // -------------------------------------------
  2907                        L10090:
  2908                        	.line	540
  2909                        ;				{
  2910 03:14C7: A5 0B        	lda	<L55+dx_6
  2911 03:14C9: C5 09        	cmp	<L55+dy_6
  2912 03:14CB: B0 77        	bcs	L10096
  2913                        	.line	541
  2914                        ;					
  2915                        ;					// write dx in DIV_NUM_HI to do a dx *256 directely
  2916                        ;					*((uint8_t*)UNSIGNED_DIV_NUM_LO) = 0;
  2917                        	.line	544
  2918 03:14CD: E2 20        	sep	#$20
  2919                        	longa	off
  2920 03:14CF: A9 00        	lda	#$0
  2921 03:14D1: 8F 12 01 00  	sta	>274
  2922                        ;					*((uint8_t*)UNSIGNED_DIV_NUM_HI) = dx;
  2923                        	.line	545
  2924 03:14D5: A5 0B        	lda	<L55+dx_6
  2925 03:14D7: 8F 13 01 00  	sta	>275
  2926 03:14DB: C2 20        	rep	#$20
  2927                        	longa	on
  2928                        ;					*((uint16_t*)UNSIGNED_DIV_DEM_LO) = dy;
  2929                        	.line	546
  2930 03:14DD: A5 09        	lda	<L55+dy_6
  2931 03:14DF: 8F 10 01 00  	sta	>272
  2932                        ;					uStep   = *((uint16_t*)UNSIGNED_DIV_QUO_LO); // (dx*256) /dy
  2933                        	.line	547
  2934 03:14E3: AF 14 01 00  	lda	>276
  2935 03:14E7: 85 0F        	sta	<L55+uStep_7
  2936                        ;					uStep_CPT = *((uint16_t*)UNSIGNED_DIV_QUO_LO);
  2937                        	.line	548
  2938 03:14E9: AF 14 01 00  	lda	>276
  2939 03:14ED: 85 11        	sta	<L55+uStep_CPT_7
  Wed Apr 14 2021  0:19                                                                                                    Page 62


  2940                        ;					
  2941                        ;					*((uint16_t*)ADDER32_B_LL) = (uint16_t)0x0280;
  2942                        	.line	550
  2943 03:14EF: A9 80 02     	lda	#$280
  2944 03:14F2: 8F 24 01 00  	sta	>292
  2945                        ;					*((uint16_t*)ADDER32_B_HL) = (uint16_t)0x0000;
  2946                        	.line	551
  2947 03:14F6: A9 00 00     	lda	#$0
  2948 03:14F9: 8F 26 01 00  	sta	>294
  2949                        ;					
  2950                        ;					for(y=0; y < dy; y++) // increment y by 1 as we need several y inc t
                    o make 1 x
  2951                        	.line	553
  2952 03:14FD: 64 03        	stz	<L55+y_1
  2953 03:14FF: 80 3A        	bra	L10100
  2954                        L10099:
  2955                        ;					{
  2956                        	.line	554
  2957                        ;						((volatile uint8_t *)address)[y] = colour;
  2958                        	.line	555
  2959 03:1501: E2 20        	sep	#$20
  2960                        	longa	off
  2961 03:1503: A5 22        	lda	<L54+colour_0
  2962 03:1505: A4 03        	ldy	<L55+y_1
  2963 03:1507: 97 05        	sta	[<L55+address_1],Y
  2964 03:1509: C2 20        	rep	#$20
  2965                        	longa	on
  2966                        ;						uStep_CPT += uStep;
  2967                        	.line	556
  2968 03:150B: A5 11        	lda	<L55+uStep_CPT_7
  2969 03:150D: 18           	clc
  2970 03:150E: 65 0F        	adc	<L55+uStep_7
  2971 03:1510: 85 11        	sta	<L55+uStep_CPT_7
  2972                        ;						if(uStep_CPT > 0xFF) // 256 is equal to 1 poixel so if it bi
                    gger we need to move 1 pixel on the right 
  2973                        	.line	557
  2974                        ;						{
  2975 03:1512: A9 FF 00     	lda	#$ff
  2976 03:1515: C5 11        	cmp	<L55+uStep_CPT_7
  2977 03:1517: B0 20        	bcs	L10097
  2978                        	.line	558
  2979                        ;							uStep_CPT -= 0xFF;
  2980                        	.line	559
  2981 03:1519: A9 01 FF     	lda	#$ff01
  2982 03:151C: 18           	clc
  2983 03:151D: 65 11        	adc	<L55+uStep_CPT_7
  2984 03:151F: 85 11        	sta	<L55+uStep_CPT_7
  2985                        ;							*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  2986                        	.line	560
  2987 03:1521: A5 05        	lda	<L55+address_1
  2988 03:1523: 8F 20 01 00  	sta	>288
  2989                        ;							*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  2990                        	.line	561
  2991 03:1527: A5 07        	lda	<L55+address_1+2
  2992 03:1529: 8F 22 01 00  	sta	>290
  2993                        ;							*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL
                    );
  2994                        	.line	562
  Wed Apr 14 2021  0:19                                                                                                    Page 63


  2995 03:152D: AF 28 01 00  	lda	>296
  2996 03:1531: 85 05        	sta	<L55+address_1
  2997                        ;							*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL
                    );
  2998                        	.line	563
  2999 03:1533: AF 2A 01 00  	lda	>298
  3000 03:1537: 85 07        	sta	<L55+address_1+2
  3001                        ;						}
  3002                        	.line	564
  3003                        ;					}
  3004                        	.line	565
  3005                        L10097:
  3006 03:1539: E6 03        	inc	<L55+y_1
  3007                        L10100:
  3008 03:153B: A5 03        	lda	<L55+y_1
  3009 03:153D: C5 09        	cmp	<L55+dy_6
  3010 03:153F: 90 C0        	bcc	L10099
  3011 03:1541: 82 B1 03     	brl	L106
  3012                        ;				}
  3013                        	.line	566
  3014                        ;				else // dx is bigger than dy -------------------------------------------
  3015                        L10096:
  3016                        ;				{
  3017                        	.line	568
  3018                        ;					
  3019                        ;					// comput the rate of the line
  3020                        ;					*((uint8_t*)UNSIGNED_DIV_NUM_LO) = 0;
  3021                        	.line	571
  3022 03:1544: E2 20        	sep	#$20
  3023                        	longa	off
  3024 03:1546: A9 00        	lda	#$0
  3025 03:1548: 8F 12 01 00  	sta	>274
  3026                        ;					*((uint8_t*)UNSIGNED_DIV_NUM_HI) = dy;
  3027                        	.line	572
  3028 03:154C: A5 09        	lda	<L55+dy_6
  3029 03:154E: 8F 13 01 00  	sta	>275
  3030 03:1552: C2 20        	rep	#$20
  3031                        	longa	on
  3032                        ;					*((uint16_t*)UNSIGNED_DIV_DEM_LO) = dx;
  3033                        	.line	573
  3034 03:1554: A5 0B        	lda	<L55+dx_6
  3035 03:1556: 8F 10 01 00  	sta	>272
  3036                        ;					uStep     = *((uint16_t*)UNSIGNED_DIV_QUO_LO); // (dy*256) /dx
  3037                        	.line	574
  3038 03:155A: AF 14 01 00  	lda	>276
  3039 03:155E: 85 0F        	sta	<L55+uStep_7
  3040                        ;					uStep_CPT = *((uint16_t*)UNSIGNED_DIV_QUO_LO);
  3041                        	.line	575
  3042 03:1560: AF 14 01 00  	lda	>276
  3043 03:1564: 85 11        	sta	<L55+uStep_CPT_7
  3044                        ;					
  3045                        ;					*((uint16_t*)ADDER32_B_LL) = (uint16_t)0x0280;
  3046                        	.line	577
  3047 03:1566: A9 80 02     	lda	#$280
  3048 03:1569: 8F 24 01 00  	sta	>292
  3049                        ;					*((uint16_t*)ADDER32_B_HL) = (uint16_t)0x0000;
  3050                        	.line	578
  3051 03:156D: A9 00 00     	lda	#$0
  Wed Apr 14 2021  0:19                                                                                                    Page 64


  3052 03:1570: 8F 26 01 00  	sta	>294
  3053                        ;					
  3054                        ;					//for(x=a.x; x < b.x; x++) // increment y by 1 as we need several y 
                    inc to make 1 x
  3055                        ;					for(x=0; x < dx; x++) // increment y by 1 as we need several y inc t
                    o make 1 x
  3056                        	.line	581
  3057 03:1574: 64 01        	stz	<L55+x_1
  3058 03:1576: 80 3C        	bra	L10106
  3059                        L10105:
  3060                        ;					{
  3061                        	.line	582
  3062                        ;						//((volatile uint8_t *)0xB60000)[start_line + y] = colour;
  3063                        ;						((volatile uint8_t *)address)[offset_y] = colour;
  3064                        	.line	584
  3065 03:1578: E2 20        	sep	#$20
  3066                        	longa	off
  3067 03:157A: A5 22        	lda	<L54+colour_0
  3068 03:157C: A4 0D        	ldy	<L55+offset_y_7
  3069 03:157E: 97 05        	sta	[<L55+address_1],Y
  3070 03:1580: C2 20        	rep	#$20
  3071                        	longa	on
  3072                        ;						uStep_CPT += uStep;
  3073                        	.line	585
  3074 03:1582: A5 11        	lda	<L55+uStep_CPT_7
  3075 03:1584: 18           	clc
  3076 03:1585: 65 0F        	adc	<L55+uStep_7
  3077 03:1587: 85 11        	sta	<L55+uStep_CPT_7
  3078                        ;						if(uStep_CPT > 0xFF) // 256 is equal to 1 poixel so if it bi
                    gger we need to move 1 pixel on the right 
  3079                        	.line	586
  3080                        ;						{
  3081 03:1589: A9 FF 00     	lda	#$ff
  3082 03:158C: C5 11        	cmp	<L55+uStep_CPT_7
  3083 03:158E: B0 0A        	bcs	L10107
  3084                        	.line	587
  3085                        ;							uStep_CPT -= 0xFF;
  3086                        	.line	588
  3087 03:1590: A9 01 FF     	lda	#$ff01
  3088 03:1593: 18           	clc
  3089 03:1594: 65 11        	adc	<L55+uStep_CPT_7
  3090 03:1596: 85 11        	sta	<L55+uStep_CPT_7
  3091                        ;							offset_y++;
  3092                        	.line	589
  3093 03:1598: E6 0D        	inc	<L55+offset_y_7
  3094                        ;						}
  3095                        	.line	590
  3096                        ;						//address = address + 0x00000280;
  3097                        ;						*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  3098                        L10107:
  3099                        	.line	592
  3100 03:159A: A5 05        	lda	<L55+address_1
  3101 03:159C: 8F 20 01 00  	sta	>288
  3102                        ;						*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  3103                        	.line	593
  3104 03:15A0: A5 07        	lda	<L55+address_1+2
  3105 03:15A2: 8F 22 01 00  	sta	>290
  3106                        ;						*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  Wed Apr 14 2021  0:19                                                                                                    Page 65


  3107                        	.line	594
  3108 03:15A6: AF 28 01 00  	lda	>296
  3109 03:15AA: 85 05        	sta	<L55+address_1
  3110                        ;						*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  3111                        	.line	595
  3112 03:15AC: AF 2A 01 00  	lda	>298
  3113 03:15B0: 85 07        	sta	<L55+address_1+2
  3114                        ;					}
  3115                        	.line	596
  3116 03:15B2: E6 01        	inc	<L55+x_1
  3117                        L10106:
  3118 03:15B4: A5 01        	lda	<L55+x_1
  3119 03:15B6: C5 0B        	cmp	<L55+dx_6
  3120 03:15B8: 90 BE        	bcc	L10105
  3121 03:15BA: 82 38 03     	brl	L106
  3122                        ;				}
  3123                        	.line	597
  3124                        L10089:
  3125                        ;			{
  3126                        	.line	600
  3127                        ;				// x|
  3128                        ;				//-----
  3129                        ;				//  |
  3130                        ;				
  3131                        ;				uint16_t offset_y = 0; // same as ofset
  3132                        ;				uint16_t uStep;
  3133                        ;				uint16_t uStep_CPT = 0;
  3134                        ;				
  3135                        ;				
  3136                        ;				// address = address + a.x *640 start address of the first point
  3137                        ;				*(uint16_t*)UNSIGNED_MULT_A_LO = b.x;
  3138                        	.block	611
  3139             0000000C   offset_y_8	set	12
  3140             0000000E   uStep_8	set	14
  3141             00000010   uStep_CPT_8	set	16
  3142                        	.sym	offset_y,12,16,1,16
  3143                        	.sym	uStep,14,16,1,16
  3144                        	.sym	uStep_CPT,16,16,1,16
  3145 03:15BD: 64 0D        	stz	<L55+offset_y_8
  3146 03:15BF: 64 11        	stz	<L55+uStep_CPT_8
  3147                        	.line	611
  3148 03:15C1: A5 1C        	lda	<L54+b_0
  3149 03:15C3: 8F 00 01 00  	sta	>256
  3150                        ;				*(uint16_t*)UNSIGNED_MULT_B_LO = 640;
  3151                        	.line	612
  3152 03:15C7: A9 80 02     	lda	#$280
  3153 03:15CA: 8F 02 01 00  	sta	>258
  3154                        ;				
  3155                        ;				*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  3156                        	.line	614
  3157 03:15CE: A5 05        	lda	<L55+address_1
  3158 03:15D0: 8F 20 01 00  	sta	>288
  3159                        ;				*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  3160                        	.line	615
  3161 03:15D4: A5 07        	lda	<L55+address_1+2
  3162 03:15D6: 8F 22 01 00  	sta	>290
  3163                        ;				*(uint16_t*)ADDER32_B_LL = *((uint16_t*)UNSIGNED_MULT_AL_LO);
  3164                        	.line	616
  Wed Apr 14 2021  0:19                                                                                                    Page 66


  3165 03:15DA: AF 04 01 00  	lda	>260
  3166 03:15DE: 8F 24 01 00  	sta	>292
  3167                        ;				*(uint16_t*)ADDER32_B_HL = *((uint16_t*)UNSIGNED_MULT_AH_LO);
  3168                        	.line	617
  3169 03:15E2: AF 06 01 00  	lda	>262
  3170 03:15E6: 8F 26 01 00  	sta	>294
  3171                        ;				
  3172                        ;				*(uint16_t*)ADDER32_A_HL = *((uint16_t*)ADDER32_R_HL); // make sure to write
                     the Hight part first !!!, if you load  you moddify ADDER32_A_LL first that will affect the content of the resul
                    t
  3173                        	.line	619
  3174 03:15EA: AF 2A 01 00  	lda	>298
  3175 03:15EE: 8F 22 01 00  	sta	>290
  3176                        ;				*(uint16_t*)ADDER32_A_LL = *((uint16_t*)ADDER32_R_LL);
  3177                        	.line	620
  3178 03:15F2: AF 28 01 00  	lda	>296
  3179 03:15F6: 8F 20 01 00  	sta	>288
  3180                        ;				*(uint16_t*)ADDER32_B_LL = b.y;
  3181                        	.line	621
  3182 03:15FA: A5 1E        	lda	<L54+b_0+2
  3183 03:15FC: 8F 24 01 00  	sta	>292
  3184                        ;				*(uint16_t*)ADDER32_B_HL = 0x0000;
  3185                        	.line	622
  3186 03:1600: A9 00 00     	lda	#$0
  3187 03:1603: 8F 26 01 00  	sta	>294
  3188                        ;				
  3189                        ;				*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  3190                        	.line	624
  3191 03:1607: AF 28 01 00  	lda	>296
  3192 03:160B: 85 05        	sta	<L55+address_1
  3193                        ;				*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  3194                        	.line	625
  3195 03:160D: AF 2A 01 00  	lda	>298
  3196 03:1611: 85 07        	sta	<L55+address_1+2
  3197                        ;				
  3198                        ;				dy = a.y - b.y;
  3199                        	.line	627
  3200 03:1613: 38           	sec
  3201 03:1614: A5 18        	lda	<L54+a_0+2
  3202 03:1616: E5 1E        	sbc	<L54+b_0+2
  3203 03:1618: 85 09        	sta	<L55+dy_6
  3204                        ;				if(dx == dy)// 225*  -------------------------------------------
  3205                        	.line	628
  3206                        ;				{
  3207 03:161A: A5 0B        	lda	<L55+dx_6
  3208 03:161C: C5 09        	cmp	<L55+dy_6
  3209 03:161E: D0 3D        	bne	L10109
  3210                        	.line	629
  3211                        ;
  3212                        ;					
  3213                        ;					*((uint16_t*)ADDER32_B_LL) = (uint16_t)0xFD81; // 0x027F; - 639
  3214                        	.line	632
  3215 03:1620: A9 81 FD     	lda	#$fd81
  3216 03:1623: 8F 24 01 00  	sta	>292
  3217                        ;					*((uint16_t*)ADDER32_B_HL) = (uint16_t)0xFFFF; // 0x0000
  3218                        	.line	633
  3219 03:1627: A9 FF FF     	lda	#$ffff
  3220 03:162A: 8F 26 01 00  	sta	>294
  Wed Apr 14 2021  0:19                                                                                                    Page 67


  3221                        ;					
  3222                        ;					for(y=0; y < dy; y++)
  3223                        	.line	635
  3224 03:162E: 64 03        	stz	<L55+y_1
  3225 03:1630: 80 22        	bra	L10113
  3226                        L10112:
  3227                        ;					{
  3228                        	.line	636
  3229                        ;						//((volatile uint8_t * far)address)[a.x + offset] = colour;
  3230                        ;						*((volatile uint8_t *)address) = colour;
  3231                        	.line	638
  3232 03:1632: E2 20        	sep	#$20
  3233                        	longa	off
  3234 03:1634: A5 22        	lda	<L54+colour_0
  3235 03:1636: 87 05        	sta	[<L55+address_1]
  3236 03:1638: C2 20        	rep	#$20
  3237                        	longa	on
  3238                        ;						
  3239                        ;						*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  3240                        	.line	640
  3241 03:163A: A5 05        	lda	<L55+address_1
  3242 03:163C: 8F 20 01 00  	sta	>288
  3243                        ;						*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  3244                        	.line	641
  3245 03:1640: A5 07        	lda	<L55+address_1+2
  3246 03:1642: 8F 22 01 00  	sta	>290
  3247                        ;						*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  3248                        	.line	642
  3249 03:1646: AF 28 01 00  	lda	>296
  3250 03:164A: 85 05        	sta	<L55+address_1
  3251                        ;						*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  3252                        	.line	643
  3253 03:164C: AF 2A 01 00  	lda	>298
  3254 03:1650: 85 07        	sta	<L55+address_1+2
  3255                        ;					}
  3256                        	.line	644
  3257 03:1652: E6 03        	inc	<L55+y_1
  3258                        L10113:
  3259 03:1654: A5 03        	lda	<L55+y_1
  3260 03:1656: C5 09        	cmp	<L55+dy_6
  3261 03:1658: 90 D8        	bcc	L10112
  3262 03:165A: 82 98 02     	brl	L106
  3263                        ;				}
  3264                        	.line	645
  3265                        ;				else if(dx < dy) // -------------------------------------------
  3266                        L10109:
  3267                        	.line	646
  3268                        ;				{
  3269 03:165D: A5 0B        	lda	<L55+dx_6
  3270 03:165F: C5 09        	cmp	<L55+dy_6
  3271 03:1661: B0 77        	bcs	L10115
  3272                        	.line	647
  3273                        ;					
  3274                        ;					// write dx in DIV_NUM_HI to do a dx *256 directely
  3275                        ;					*((uint8_t*)UNSIGNED_DIV_NUM_LO) = 0;
  3276                        	.line	650
  3277 03:1663: E2 20        	sep	#$20
  3278                        	longa	off
  Wed Apr 14 2021  0:19                                                                                                    Page 68


  3279 03:1665: A9 00        	lda	#$0
  3280 03:1667: 8F 12 01 00  	sta	>274
  3281                        ;					*((uint8_t*)UNSIGNED_DIV_NUM_HI) = dx;
  3282                        	.line	651
  3283 03:166B: A5 0B        	lda	<L55+dx_6
  3284 03:166D: 8F 13 01 00  	sta	>275
  3285 03:1671: C2 20        	rep	#$20
  3286                        	longa	on
  3287                        ;					*((uint16_t*)UNSIGNED_DIV_DEM_LO) = dy;
  3288                        	.line	652
  3289 03:1673: A5 09        	lda	<L55+dy_6
  3290 03:1675: 8F 10 01 00  	sta	>272
  3291                        ;					uStep   = *((uint16_t*)UNSIGNED_DIV_QUO_LO); // (dx*256) /dy
  3292                        	.line	653
  3293 03:1679: AF 14 01 00  	lda	>276
  3294 03:167D: 85 0F        	sta	<L55+uStep_8
  3295                        ;					uStep_CPT = *((uint16_t*)UNSIGNED_DIV_QUO_LO);
  3296                        	.line	654
  3297 03:167F: AF 14 01 00  	lda	>276
  3298 03:1683: 85 11        	sta	<L55+uStep_CPT_8
  3299                        ;					
  3300                        ;					*((uint16_t*)ADDER32_B_LL) = (uint16_t)0xFD80; // 0x0280; - 640
  3301                        	.line	656
  3302 03:1685: A9 80 FD     	lda	#$fd80
  3303 03:1688: 8F 24 01 00  	sta	>292
  3304                        ;					*((uint16_t*)ADDER32_B_HL) = (uint16_t)0xFFFF; // 0x0000;
  3305                        	.line	657
  3306 03:168C: A9 FF FF     	lda	#$ffff
  3307 03:168F: 8F 26 01 00  	sta	>294
  3308                        ;					
  3309                        ;					for(y=0; y < dy; y++) // increment y by 1 as we need several y inc t
                    o make 1 x
  3310                        	.line	659
  3311 03:1693: 64 03        	stz	<L55+y_1
  3312 03:1695: 80 3A        	bra	L10119
  3313                        L10118:
  3314                        ;					{
  3315                        	.line	660
  3316                        ;						((volatile uint8_t *)address)[y] = colour;
  3317                        	.line	661
  3318 03:1697: E2 20        	sep	#$20
  3319                        	longa	off
  3320 03:1699: A5 22        	lda	<L54+colour_0
  3321 03:169B: A4 03        	ldy	<L55+y_1
  3322 03:169D: 97 05        	sta	[<L55+address_1],Y
  3323 03:169F: C2 20        	rep	#$20
  3324                        	longa	on
  3325                        ;						uStep_CPT += uStep;
  3326                        	.line	662
  3327 03:16A1: A5 11        	lda	<L55+uStep_CPT_8
  3328 03:16A3: 18           	clc
  3329 03:16A4: 65 0F        	adc	<L55+uStep_8
  3330 03:16A6: 85 11        	sta	<L55+uStep_CPT_8
  3331                        ;						if(uStep_CPT > 0xFF) // 256 is equal to 1 poixel so if it bi
                    gger we need to move 1 pixel on the right 
  3332                        	.line	663
  3333                        ;						{
  3334 03:16A8: A9 FF 00     	lda	#$ff
  Wed Apr 14 2021  0:19                                                                                                    Page 69


  3335 03:16AB: C5 11        	cmp	<L55+uStep_CPT_8
  3336 03:16AD: B0 20        	bcs	L10116
  3337                        	.line	664
  3338                        ;							uStep_CPT -= 0xFF;
  3339                        	.line	665
  3340 03:16AF: A9 01 FF     	lda	#$ff01
  3341 03:16B2: 18           	clc
  3342 03:16B3: 65 11        	adc	<L55+uStep_CPT_8
  3343 03:16B5: 85 11        	sta	<L55+uStep_CPT_8
  3344                        ;							*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  3345                        	.line	666
  3346 03:16B7: A5 05        	lda	<L55+address_1
  3347 03:16B9: 8F 20 01 00  	sta	>288
  3348                        ;							*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  3349                        	.line	667
  3350 03:16BD: A5 07        	lda	<L55+address_1+2
  3351 03:16BF: 8F 22 01 00  	sta	>290
  3352                        ;							*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL
                    );
  3353                        	.line	668
  3354 03:16C3: AF 28 01 00  	lda	>296
  3355 03:16C7: 85 05        	sta	<L55+address_1
  3356                        ;							*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL
                    );
  3357                        	.line	669
  3358 03:16C9: AF 2A 01 00  	lda	>298
  3359 03:16CD: 85 07        	sta	<L55+address_1+2
  3360                        ;						}
  3361                        	.line	670
  3362                        ;					}
  3363                        	.line	671
  3364                        L10116:
  3365 03:16CF: E6 03        	inc	<L55+y_1
  3366                        L10119:
  3367 03:16D1: A5 03        	lda	<L55+y_1
  3368 03:16D3: C5 09        	cmp	<L55+dy_6
  3369 03:16D5: 90 C0        	bcc	L10118
  3370 03:16D7: 82 1B 02     	brl	L106
  3371                        ;				}
  3372                        	.line	672
  3373                        ;				else // dx is bigger than dy -------------------------------------------
  3374                        L10115:
  3375                        ;				{
  3376                        	.line	674
  3377                        ;					
  3378                        ;					// comput the rate of the line
  3379                        ;					*((uint8_t*)UNSIGNED_DIV_NUM_LO) = 0;
  3380                        	.line	677
  3381 03:16DA: E2 20        	sep	#$20
  3382                        	longa	off
  3383 03:16DC: A9 00        	lda	#$0
  3384 03:16DE: 8F 12 01 00  	sta	>274
  3385                        ;					*((uint8_t*)UNSIGNED_DIV_NUM_HI) = dy;
  3386                        	.line	678
  3387 03:16E2: A5 09        	lda	<L55+dy_6
  3388 03:16E4: 8F 13 01 00  	sta	>275
  3389 03:16E8: C2 20        	rep	#$20
  3390                        	longa	on
  Wed Apr 14 2021  0:19                                                                                                    Page 70


  3391                        ;					*((uint16_t*)UNSIGNED_DIV_DEM_LO) = dx;
  3392                        	.line	679
  3393 03:16EA: A5 0B        	lda	<L55+dx_6
  3394 03:16EC: 8F 10 01 00  	sta	>272
  3395                        ;					uStep     = *((uint16_t*)UNSIGNED_DIV_QUO_LO); // (dy*256) /dx
  3396                        	.line	680
  3397 03:16F0: AF 14 01 00  	lda	>276
  3398 03:16F4: 85 0F        	sta	<L55+uStep_8
  3399                        ;					uStep_CPT = *((uint16_t*)UNSIGNED_DIV_QUO_LO);
  3400                        	.line	681
  3401 03:16F6: AF 14 01 00  	lda	>276
  3402 03:16FA: 85 11        	sta	<L55+uStep_CPT_8
  3403                        ;					
  3404                        ;					*((uint16_t*)ADDER32_B_LL) = (uint16_t)0xFD80; // 0x0280; - 640
  3405                        	.line	683
  3406 03:16FC: A9 80 FD     	lda	#$fd80
  3407 03:16FF: 8F 24 01 00  	sta	>292
  3408                        ;					*((uint16_t*)ADDER32_B_HL) = (uint16_t)0xFFFF; // 0x0000;
  3409                        	.line	684
  3410 03:1703: A9 FF FF     	lda	#$ffff
  3411 03:1706: 8F 26 01 00  	sta	>294
  3412                        ;					
  3413                        ;					//for(x=a.x; x < b.x; x++) // increment y by 1 as we need several y 
                    inc to make 1 x
  3414                        ;					for(x=0; x < dx; x++) // increment y by 1 as we need several y inc t
                    o make 1 x
  3415                        	.line	687
  3416 03:170A: 64 01        	stz	<L55+x_1
  3417 03:170C: 80 3C        	bra	L10125
  3418                        L10124:
  3419                        ;					{
  3420                        	.line	688
  3421                        ;						//((volatile uint8_t *)0xB60000)[start_line + y] = colour;
  3422                        ;						((volatile uint8_t *)address)[offset_y] = colour;
  3423                        	.line	690
  3424 03:170E: E2 20        	sep	#$20
  3425                        	longa	off
  3426 03:1710: A5 22        	lda	<L54+colour_0
  3427 03:1712: A4 0D        	ldy	<L55+offset_y_8
  3428 03:1714: 97 05        	sta	[<L55+address_1],Y
  3429 03:1716: C2 20        	rep	#$20
  3430                        	longa	on
  3431                        ;						uStep_CPT += uStep;
  3432                        	.line	691
  3433 03:1718: A5 11        	lda	<L55+uStep_CPT_8
  3434 03:171A: 18           	clc
  3435 03:171B: 65 0F        	adc	<L55+uStep_8
  3436 03:171D: 85 11        	sta	<L55+uStep_CPT_8
  3437                        ;						if(uStep_CPT > 0xFF) // 256 is equal to 1 poixel so if it bi
                    gger we need to move 1 pixel on the right 
  3438                        	.line	692
  3439                        ;						{
  3440 03:171F: A9 FF 00     	lda	#$ff
  3441 03:1722: C5 11        	cmp	<L55+uStep_CPT_8
  3442 03:1724: B0 0A        	bcs	L10126
  3443                        	.line	693
  3444                        ;							uStep_CPT -= 0xFF;
  3445                        	.line	694
  Wed Apr 14 2021  0:19                                                                                                    Page 71


  3446 03:1726: A9 01 FF     	lda	#$ff01
  3447 03:1729: 18           	clc
  3448 03:172A: 65 11        	adc	<L55+uStep_CPT_8
  3449 03:172C: 85 11        	sta	<L55+uStep_CPT_8
  3450                        ;							offset_y++;
  3451                        	.line	695
  3452 03:172E: E6 0D        	inc	<L55+offset_y_8
  3453                        ;						}
  3454                        	.line	696
  3455                        ;						//address = address + 0x00000280;
  3456                        ;						*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  3457                        L10126:
  3458                        	.line	698
  3459 03:1730: A5 05        	lda	<L55+address_1
  3460 03:1732: 8F 20 01 00  	sta	>288
  3461                        ;						*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  3462                        	.line	699
  3463 03:1736: A5 07        	lda	<L55+address_1+2
  3464 03:1738: 8F 22 01 00  	sta	>290
  3465                        ;						*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  3466                        	.line	700
  3467 03:173C: AF 28 01 00  	lda	>296
  3468 03:1740: 85 05        	sta	<L55+address_1
  3469                        ;						*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  3470                        	.line	701
  3471 03:1742: AF 2A 01 00  	lda	>298
  3472 03:1746: 85 07        	sta	<L55+address_1+2
  3473                        ;					}
  3474                        	.line	702
  3475 03:1748: E6 01        	inc	<L55+x_1
  3476                        L10125:
  3477 03:174A: A5 01        	lda	<L55+x_1
  3478 03:174C: C5 0B        	cmp	<L55+dx_6
  3479 03:174E: 90 BE        	bcc	L10124
  3480 03:1750: 82 A2 01     	brl	L106
  3481                        ;				}
  3482                        	.line	703
  3483                        ;			}
  3484                        	.endblock	704
  3485                        	.line	704
  3486                        L10088:
  3487                        ;		{
  3488                        	.line	707
  3489                        ;
  3490                        ;			uint16_t dy, dx = a.x - b.x;
  3491                        ;
  3492                        ;			if(a.y<b.y) // Q2 - point a and b are inverted from Q1
  3493                        	.block	711
  3494             00000008   dy_9	set	8
  3495             0000000A   dx_9	set	10
  3496                        	.sym	dy,8,16,1,16
  3497                        	.sym	dx,10,16,1,16
  3498 03:1753: 38           	sec
  3499 03:1754: A5 16        	lda	<L54+a_0
  3500 03:1756: E5 1C        	sbc	<L54+b_0
  3501 03:1758: 85 0B        	sta	<L55+dx_9
  3502                        	.line	711
  3503                        ;			{
  Wed Apr 14 2021  0:19                                                                                                    Page 72


  3504 03:175A: A5 18        	lda	<L54+a_0+2
  3505 03:175C: C5 1E        	cmp	<L54+b_0+2
  3506 03:175E: 90 03        	bcc	*+5
  3507 03:1760: 82 A2 01     	brl	L10128
  3508                        	.line	712
  3509                        ;				//  | 
  3510                        ;				//-----
  3511                        ;				//  |x
  3512                        ;
  3513                        ;				uint16_t offset_y = 0; // same as ofset
  3514                        ;				uint16_t uStep;
  3515                        ;				uint16_t uStep_CPT = 0;
  3516                        ;				
  3517                        ;				
  3518                        ;				// address = address + a.x *640 start address of the first point
  3519                        ;				*(uint16_t*)UNSIGNED_MULT_A_LO = a.x;
  3520                        	.block	723
  3521             0000000C   offset_y_10	set	12
  3522             0000000E   uStep_10	set	14
  3523             00000010   uStep_CPT_10	set	16
  3524                        	.sym	offset_y,12,16,1,16
  3525                        	.sym	uStep,14,16,1,16
  3526                        	.sym	uStep_CPT,16,16,1,16
  3527 03:1763: 64 0D        	stz	<L55+offset_y_10
  3528 03:1765: 64 11        	stz	<L55+uStep_CPT_10
  3529                        	.line	723
  3530 03:1767: A5 16        	lda	<L54+a_0
  3531 03:1769: 8F 00 01 00  	sta	>256
  3532                        ;				*(uint16_t*)UNSIGNED_MULT_B_LO = 640;
  3533                        	.line	724
  3534 03:176D: A9 80 02     	lda	#$280
  3535 03:1770: 8F 02 01 00  	sta	>258
  3536                        ;				
  3537                        ;				*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  3538                        	.line	726
  3539 03:1774: A5 05        	lda	<L55+address_1
  3540 03:1776: 8F 20 01 00  	sta	>288
  3541                        ;				*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  3542                        	.line	727
  3543 03:177A: A5 07        	lda	<L55+address_1+2
  3544 03:177C: 8F 22 01 00  	sta	>290
  3545                        ;				*(uint16_t*)ADDER32_B_LL = *((uint16_t*)UNSIGNED_MULT_AL_LO);
  3546                        	.line	728
  3547 03:1780: AF 04 01 00  	lda	>260
  3548 03:1784: 8F 24 01 00  	sta	>292
  3549                        ;				*(uint16_t*)ADDER32_B_HL = *((uint16_t*)UNSIGNED_MULT_AH_LO);
  3550                        	.line	729
  3551 03:1788: AF 06 01 00  	lda	>262
  3552 03:178C: 8F 26 01 00  	sta	>294
  3553                        ;				
  3554                        ;				*(uint16_t*)ADDER32_A_HL = *((uint16_t*)ADDER32_R_HL); // make sure to write
                     the Hight part first !!!, if you load  you moddify ADDER32_A_LL first that will affect the content of the resul
                    t
  3555                        	.line	731
  3556 03:1790: AF 2A 01 00  	lda	>298
  3557 03:1794: 8F 22 01 00  	sta	>290
  3558                        ;				*(uint16_t*)ADDER32_A_LL = *((uint16_t*)ADDER32_R_LL);
  3559                        	.line	732
  Wed Apr 14 2021  0:19                                                                                                    Page 73


  3560 03:1798: AF 28 01 00  	lda	>296
  3561 03:179C: 8F 20 01 00  	sta	>288
  3562                        ;				*(uint16_t*)ADDER32_B_LL = a.y;
  3563                        	.line	733
  3564 03:17A0: A5 18        	lda	<L54+a_0+2
  3565 03:17A2: 8F 24 01 00  	sta	>292
  3566                        ;				*(uint16_t*)ADDER32_B_HL = 0x0000;
  3567                        	.line	734
  3568 03:17A6: A9 00 00     	lda	#$0
  3569 03:17A9: 8F 26 01 00  	sta	>294
  3570                        ;				
  3571                        ;				*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  3572                        	.line	736
  3573 03:17AD: AF 28 01 00  	lda	>296
  3574 03:17B1: 85 05        	sta	<L55+address_1
  3575                        ;				*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  3576                        	.line	737
  3577 03:17B3: AF 2A 01 00  	lda	>298
  3578 03:17B7: 85 07        	sta	<L55+address_1+2
  3579                        ;				
  3580                        ;				dy = b.y - a.y;
  3581                        	.line	739
  3582 03:17B9: 38           	sec
  3583 03:17BA: A5 1E        	lda	<L54+b_0+2
  3584 03:17BC: E5 18        	sbc	<L54+a_0+2
  3585 03:17BE: 85 09        	sta	<L55+dy_9
  3586                        ;				if(dx == dy)// 225*  -------------------------------------------
  3587                        	.line	740
  3588                        ;				{
  3589 03:17C0: A5 0B        	lda	<L55+dx_9
  3590 03:17C2: C5 09        	cmp	<L55+dy_9
  3591 03:17C4: D0 3D        	bne	L10129
  3592                        	.line	741
  3593                        ;
  3594                        ;					
  3595                        ;					*((uint16_t*)ADDER32_B_LL) = (uint16_t)0xFD81; // 0x027F; - 639
  3596                        	.line	744
  3597 03:17C6: A9 81 FD     	lda	#$fd81
  3598 03:17C9: 8F 24 01 00  	sta	>292
  3599                        ;					*((uint16_t*)ADDER32_B_HL) = (uint16_t)0xFFFF; // 0x0000
  3600                        	.line	745
  3601 03:17CD: A9 FF FF     	lda	#$ffff
  3602 03:17D0: 8F 26 01 00  	sta	>294
  3603                        ;					
  3604                        ;					for(y=0; y < dy; y++)
  3605                        	.line	747
  3606 03:17D4: 64 03        	stz	<L55+y_1
  3607 03:17D6: 80 22        	bra	L10133
  3608                        L10132:
  3609                        ;					{
  3610                        	.line	748
  3611                        ;						//((volatile uint8_t * far)address)[a.x + offset] = colour;
  3612                        ;						*((volatile uint8_t *)address) = colour;
  3613                        	.line	750
  3614 03:17D8: E2 20        	sep	#$20
  3615                        	longa	off
  3616 03:17DA: A5 22        	lda	<L54+colour_0
  3617 03:17DC: 87 05        	sta	[<L55+address_1]
  Wed Apr 14 2021  0:19                                                                                                    Page 74


  3618 03:17DE: C2 20        	rep	#$20
  3619                        	longa	on
  3620                        ;						
  3621                        ;						*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  3622                        	.line	752
  3623 03:17E0: A5 05        	lda	<L55+address_1
  3624 03:17E2: 8F 20 01 00  	sta	>288
  3625                        ;						*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  3626                        	.line	753
  3627 03:17E6: A5 07        	lda	<L55+address_1+2
  3628 03:17E8: 8F 22 01 00  	sta	>290
  3629                        ;						*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  3630                        	.line	754
  3631 03:17EC: AF 28 01 00  	lda	>296
  3632 03:17F0: 85 05        	sta	<L55+address_1
  3633                        ;						*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  3634                        	.line	755
  3635 03:17F2: AF 2A 01 00  	lda	>298
  3636 03:17F6: 85 07        	sta	<L55+address_1+2
  3637                        ;					}
  3638                        	.line	756
  3639 03:17F8: E6 03        	inc	<L55+y_1
  3640                        L10133:
  3641 03:17FA: A5 03        	lda	<L55+y_1
  3642 03:17FC: C5 09        	cmp	<L55+dy_9
  3643 03:17FE: 90 D8        	bcc	L10132
  3644 03:1800: 82 F2 00     	brl	L106
  3645                        ;				}
  3646                        	.line	757
  3647                        ;				else if(dx < dy) // -------------------------------------------
  3648                        L10129:
  3649                        	.line	758
  3650                        ;				{
  3651 03:1803: A5 0B        	lda	<L55+dx_9
  3652 03:1805: C5 09        	cmp	<L55+dy_9
  3653 03:1807: B0 76        	bcs	L10135
  3654                        	.line	759
  3655                        ;					
  3656                        ;					// write dx in DIV_NUM_HI to do a dx *256 directely
  3657                        ;					*((uint8_t*)UNSIGNED_DIV_NUM_LO) = 0;
  3658                        	.line	762
  3659 03:1809: E2 20        	sep	#$20
  3660                        	longa	off
  3661 03:180B: A9 00        	lda	#$0
  3662 03:180D: 8F 12 01 00  	sta	>274
  3663                        ;					*((uint8_t*)UNSIGNED_DIV_NUM_HI) = dx;
  3664                        	.line	763
  3665 03:1811: A5 0B        	lda	<L55+dx_9
  3666 03:1813: 8F 13 01 00  	sta	>275
  3667 03:1817: C2 20        	rep	#$20
  3668                        	longa	on
  3669                        ;					*((uint16_t*)UNSIGNED_DIV_DEM_LO) = dy;
  3670                        	.line	764
  3671 03:1819: A5 09        	lda	<L55+dy_9
  3672 03:181B: 8F 10 01 00  	sta	>272
  3673                        ;					uStep   = *((uint16_t*)UNSIGNED_DIV_QUO_LO); // (dx*256) /dy
  3674                        	.line	765
  3675 03:181F: AF 14 01 00  	lda	>276
  Wed Apr 14 2021  0:19                                                                                                    Page 75


  3676 03:1823: 85 0F        	sta	<L55+uStep_10
  3677                        ;					uStep_CPT = *((uint16_t*)UNSIGNED_DIV_QUO_LO);
  3678                        	.line	766
  3679 03:1825: AF 14 01 00  	lda	>276
  3680 03:1829: 85 11        	sta	<L55+uStep_CPT_10
  3681                        ;					
  3682                        ;					*((uint16_t*)ADDER32_B_LL) = (uint16_t)0xFD80; // 0x0280; - 640
  3683                        	.line	768
  3684 03:182B: A9 80 FD     	lda	#$fd80
  3685 03:182E: 8F 24 01 00  	sta	>292
  3686                        ;					*((uint16_t*)ADDER32_B_HL) = (uint16_t)0xFFFF; // 0x0000;
  3687                        	.line	769
  3688 03:1832: A9 FF FF     	lda	#$ffff
  3689 03:1835: 8F 26 01 00  	sta	>294
  3690                        ;					
  3691                        ;					for(y=0; y < dy; y++) // increment y by 1 as we need several y inc t
                    o make 1 x
  3692                        	.line	771
  3693 03:1839: 64 03        	stz	<L55+y_1
  3694 03:183B: 80 3A        	bra	L10139
  3695                        L10138:
  3696                        ;					{
  3697                        	.line	772
  3698                        ;						((volatile uint8_t *)address)[y] = colour;
  3699                        	.line	773
  3700 03:183D: E2 20        	sep	#$20
  3701                        	longa	off
  3702 03:183F: A5 22        	lda	<L54+colour_0
  3703 03:1841: A4 03        	ldy	<L55+y_1
  3704 03:1843: 97 05        	sta	[<L55+address_1],Y
  3705 03:1845: C2 20        	rep	#$20
  3706                        	longa	on
  3707                        ;						uStep_CPT += uStep;
  3708                        	.line	774
  3709 03:1847: A5 11        	lda	<L55+uStep_CPT_10
  3710 03:1849: 18           	clc
  3711 03:184A: 65 0F        	adc	<L55+uStep_10
  3712 03:184C: 85 11        	sta	<L55+uStep_CPT_10
  3713                        ;						if(uStep_CPT > 0xFF) // 256 is equal to 1 poixel so if it bi
                    gger we need to move 1 pixel on the right 
  3714                        	.line	775
  3715                        ;						{
  3716 03:184E: A9 FF 00     	lda	#$ff
  3717 03:1851: C5 11        	cmp	<L55+uStep_CPT_10
  3718 03:1853: B0 20        	bcs	L10136
  3719                        	.line	776
  3720                        ;							uStep_CPT -= 0xFF;
  3721                        	.line	777
  3722 03:1855: A9 01 FF     	lda	#$ff01
  3723 03:1858: 18           	clc
  3724 03:1859: 65 11        	adc	<L55+uStep_CPT_10
  3725 03:185B: 85 11        	sta	<L55+uStep_CPT_10
  3726                        ;							*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  3727                        	.line	778
  3728 03:185D: A5 05        	lda	<L55+address_1
  3729 03:185F: 8F 20 01 00  	sta	>288
  3730                        ;							*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  3731                        	.line	779
  Wed Apr 14 2021  0:19                                                                                                    Page 76


  3732 03:1863: A5 07        	lda	<L55+address_1+2
  3733 03:1865: 8F 22 01 00  	sta	>290
  3734                        ;							*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL
                    );
  3735                        	.line	780
  3736 03:1869: AF 28 01 00  	lda	>296
  3737 03:186D: 85 05        	sta	<L55+address_1
  3738                        ;							*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL
                    );
  3739                        	.line	781
  3740 03:186F: AF 2A 01 00  	lda	>298
  3741 03:1873: 85 07        	sta	<L55+address_1+2
  3742                        ;						}
  3743                        	.line	782
  3744                        ;					}
  3745                        	.line	783
  3746                        L10136:
  3747 03:1875: E6 03        	inc	<L55+y_1
  3748                        L10139:
  3749 03:1877: A5 03        	lda	<L55+y_1
  3750 03:1879: C5 09        	cmp	<L55+dy_9
  3751 03:187B: 90 C0        	bcc	L10138
  3752 03:187D: 80 76        	bra	L106
  3753                        ;				}
  3754                        	.line	784
  3755                        ;				else // dx is bigger than dy -------------------------------------------
  3756                        L10135:
  3757                        ;				{
  3758                        	.line	786
  3759                        ;					
  3760                        ;					// comput the rate of the line
  3761                        ;					*((uint8_t*)UNSIGNED_DIV_NUM_LO) = 0;
  3762                        	.line	789
  3763 03:187F: E2 20        	sep	#$20
  3764                        	longa	off
  3765 03:1881: A9 00        	lda	#$0
  3766 03:1883: 8F 12 01 00  	sta	>274
  3767                        ;					*((uint8_t*)UNSIGNED_DIV_NUM_HI) = dy;
  3768                        	.line	790
  3769 03:1887: A5 09        	lda	<L55+dy_9
  3770 03:1889: 8F 13 01 00  	sta	>275
  3771 03:188D: C2 20        	rep	#$20
  3772                        	longa	on
  3773                        ;					*((uint16_t*)UNSIGNED_DIV_DEM_LO) = dx;
  3774                        	.line	791
  3775 03:188F: A5 0B        	lda	<L55+dx_9
  3776 03:1891: 8F 10 01 00  	sta	>272
  3777                        ;					uStep     = *((uint16_t*)UNSIGNED_DIV_QUO_LO); // (dy*256) /dx
  3778                        	.line	792
  3779 03:1895: AF 14 01 00  	lda	>276
  3780 03:1899: 85 0F        	sta	<L55+uStep_10
  3781                        ;					uStep_CPT = *((uint16_t*)UNSIGNED_DIV_QUO_LO);
  3782                        	.line	793
  3783 03:189B: AF 14 01 00  	lda	>276
  3784 03:189F: 85 11        	sta	<L55+uStep_CPT_10
  3785                        ;					
  3786                        ;					*((uint16_t*)ADDER32_B_LL) = (uint16_t)0xFD80; // 0x0280; - 640
  3787                        	.line	795
  Wed Apr 14 2021  0:19                                                                                                    Page 77


  3788 03:18A1: A9 80 FD     	lda	#$fd80
  3789 03:18A4: 8F 24 01 00  	sta	>292
  3790                        ;					*((uint16_t*)ADDER32_B_HL) = (uint16_t)0xFFFF; // 0x0000;
  3791                        	.line	796
  3792 03:18A8: A9 FF FF     	lda	#$ffff
  3793 03:18AB: 8F 26 01 00  	sta	>294
  3794                        ;					
  3795                        ;					//for(x=a.x; x < b.x; x++) // increment y by 1 as we need several y 
                    inc to make 1 x
  3796                        ;					for(x=0; x < dx; x++) // increment y by 1 as we need several y inc t
                    o make 1 x
  3797                        	.line	799
  3798 03:18AF: 64 01        	stz	<L55+x_1
  3799 03:18B1: 80 3C        	bra	L10145
  3800                        L10144:
  3801                        ;					{
  3802                        	.line	800
  3803                        ;						//((volatile uint8_t *)0xB60000)[start_line + y] = colour;
  3804                        ;						((volatile uint8_t *)address)[offset_y] = colour;
  3805                        	.line	802
  3806 03:18B3: E2 20        	sep	#$20
  3807                        	longa	off
  3808 03:18B5: A5 22        	lda	<L54+colour_0
  3809 03:18B7: A4 0D        	ldy	<L55+offset_y_10
  3810 03:18B9: 97 05        	sta	[<L55+address_1],Y
  3811 03:18BB: C2 20        	rep	#$20
  3812                        	longa	on
  3813                        ;						uStep_CPT += uStep;
  3814                        	.line	803
  3815 03:18BD: A5 11        	lda	<L55+uStep_CPT_10
  3816 03:18BF: 18           	clc
  3817 03:18C0: 65 0F        	adc	<L55+uStep_10
  3818 03:18C2: 85 11        	sta	<L55+uStep_CPT_10
  3819                        ;						if(uStep_CPT > 0xFF) // 256 is equal to 1 poixel so if it bi
                    gger we need to move 1 pixel on the right 
  3820                        	.line	804
  3821                        ;						{
  3822 03:18C4: A9 FF 00     	lda	#$ff
  3823 03:18C7: C5 11        	cmp	<L55+uStep_CPT_10
  3824 03:18C9: B0 0A        	bcs	L10146
  3825                        	.line	805
  3826                        ;							uStep_CPT -= 0xFF;
  3827                        	.line	806
  3828 03:18CB: A9 01 FF     	lda	#$ff01
  3829 03:18CE: 18           	clc
  3830 03:18CF: 65 11        	adc	<L55+uStep_CPT_10
  3831 03:18D1: 85 11        	sta	<L55+uStep_CPT_10
  3832                        ;							offset_y++;
  3833                        	.line	807
  3834 03:18D3: E6 0D        	inc	<L55+offset_y_10
  3835                        ;						}
  3836                        	.line	808
  3837                        ;						//address = address + 0x00000280;
  3838                        ;						*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  3839                        L10146:
  3840                        	.line	810
  3841 03:18D5: A5 05        	lda	<L55+address_1
  3842 03:18D7: 8F 20 01 00  	sta	>288
  Wed Apr 14 2021  0:19                                                                                                    Page 78


  3843                        ;						*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  3844                        	.line	811
  3845 03:18DB: A5 07        	lda	<L55+address_1+2
  3846 03:18DD: 8F 22 01 00  	sta	>290
  3847                        ;						*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  3848                        	.line	812
  3849 03:18E1: AF 28 01 00  	lda	>296
  3850 03:18E5: 85 05        	sta	<L55+address_1
  3851                        ;						*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  3852                        	.line	813
  3853 03:18E7: AF 2A 01 00  	lda	>298
  3854 03:18EB: 85 07        	sta	<L55+address_1+2
  3855                        ;					}
  3856                        	.line	814
  3857 03:18ED: E6 01        	inc	<L55+x_1
  3858                        L10145:
  3859 03:18EF: A5 01        	lda	<L55+x_1
  3860 03:18F1: C5 0B        	cmp	<L55+dx_9
  3861 03:18F3: 90 BE        	bcc	L10144
  3862                        ;				}
  3863                        	.line	815
  3864                        ;			}
  3865                        	.endblock	816
  3866                        	.line	816
  3867                        ;			else // Q3
  3868                        ;		}
  3869                        	.endblock	705
  3870                        	.line	705
  3871                        ;		else
  3872                        ;			}
  3873                        	.endblock	598
  3874                        	.line	598
  3875                        ;			else // // Q4
  3876                        ;	}
  3877                        	.line	483
  3878                        ;	else // -----------------------------------------------------------------------
  3879                        ;	}
  3880                        	.line	417
  3881                        ;	else if(a.y == b.y) // vertical line
  3882                        L106:
  3883 03:18F5: A5 14        	lda	<L54+2
  3884 03:18F7: 85 22        	sta	<L54+2+14
  3885 03:18F9: A5 13        	lda	<L54+1
  3886 03:18FB: 85 21        	sta	<L54+1+14
  3887 03:18FD: 2B           	pld
  3888 03:18FE: 3B           	tsc
  3889 03:18FF: 18           	clc
  3890 03:1900: 69 20 00     	adc	#L54+14
  3891 03:1903: 1B           	tcs
  3892 03:1904: 6B           	rtl
  3893                        L10128:
  3894                        ;			{
  3895                        	.line	818
  3896                        ;				//  |
  3897                        ;				//-----
  3898                        ;				// x| 
  3899                        ;				
  3900                        ;				uint16_t offset_y = 0; // same as ofset
  Wed Apr 14 2021  0:19                                                                                                    Page 79


  3901                        ;				uint16_t uStep;
  3902                        ;				uint16_t uStep_CPT = 0;
  3903                        ;				
  3904                        ;				
  3905                        ;				// address = address + a.x *640 start address of the first point
  3906                        ;				*(uint16_t*)UNSIGNED_MULT_A_LO = b.x;
  3907                        	.block	829
  3908             0000000C   offset_y_11	set	12
  3909             0000000E   uStep_11	set	14
  3910             00000010   uStep_CPT_11	set	16
  3911                        	.sym	offset_y,12,16,1,16
  3912                        	.sym	uStep,14,16,1,16
  3913                        	.sym	uStep_CPT,16,16,1,16
  3914 03:1905: 64 0D        	stz	<L55+offset_y_11
  3915 03:1907: 64 11        	stz	<L55+uStep_CPT_11
  3916                        	.line	829
  3917 03:1909: A5 1C        	lda	<L54+b_0
  3918 03:190B: 8F 00 01 00  	sta	>256
  3919                        ;				*(uint16_t*)UNSIGNED_MULT_B_LO = 640;
  3920                        	.line	830
  3921 03:190F: A9 80 02     	lda	#$280
  3922 03:1912: 8F 02 01 00  	sta	>258
  3923                        ;				
  3924                        ;				*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  3925                        	.line	832
  3926 03:1916: A5 05        	lda	<L55+address_1
  3927 03:1918: 8F 20 01 00  	sta	>288
  3928                        ;				*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  3929                        	.line	833
  3930 03:191C: A5 07        	lda	<L55+address_1+2
  3931 03:191E: 8F 22 01 00  	sta	>290
  3932                        ;				*(uint16_t*)ADDER32_B_LL = *((uint16_t*)UNSIGNED_MULT_AL_LO);
  3933                        	.line	834
  3934 03:1922: AF 04 01 00  	lda	>260
  3935 03:1926: 8F 24 01 00  	sta	>292
  3936                        ;				*(uint16_t*)ADDER32_B_HL = *((uint16_t*)UNSIGNED_MULT_AH_LO);
  3937                        	.line	835
  3938 03:192A: AF 06 01 00  	lda	>262
  3939 03:192E: 8F 26 01 00  	sta	>294
  3940                        ;				
  3941                        ;				*(uint16_t*)ADDER32_A_HL = *((uint16_t*)ADDER32_R_HL); // make sure to write
                     the Hight part first !!!, if you load  you moddify ADDER32_A_LL first that will affect the content of the resul
                    t
  3942                        	.line	837
  3943 03:1932: AF 2A 01 00  	lda	>298
  3944 03:1936: 8F 22 01 00  	sta	>290
  3945                        ;				*(uint16_t*)ADDER32_A_LL = *((uint16_t*)ADDER32_R_LL);
  3946                        	.line	838
  3947 03:193A: AF 28 01 00  	lda	>296
  3948 03:193E: 8F 20 01 00  	sta	>288
  3949                        ;				*(uint16_t*)ADDER32_B_LL = b.y;
  3950                        	.line	839
  3951 03:1942: A5 1E        	lda	<L54+b_0+2
  3952 03:1944: 8F 24 01 00  	sta	>292
  3953                        ;				*(uint16_t*)ADDER32_B_HL = 0x0000;
  3954                        	.line	840
  3955 03:1948: A9 00 00     	lda	#$0
  3956 03:194B: 8F 26 01 00  	sta	>294
  Wed Apr 14 2021  0:19                                                                                                    Page 80


  3957                        ;				
  3958                        ;				*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  3959                        	.line	842
  3960 03:194F: AF 28 01 00  	lda	>296
  3961 03:1953: 85 05        	sta	<L55+address_1
  3962                        ;				*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  3963                        	.line	843
  3964 03:1955: AF 2A 01 00  	lda	>298
  3965 03:1959: 85 07        	sta	<L55+address_1+2
  3966                        ;				
  3967                        ;				dy = a.y - b.y;
  3968                        	.line	845
  3969 03:195B: 38           	sec
  3970 03:195C: A5 18        	lda	<L54+a_0+2
  3971 03:195E: E5 1E        	sbc	<L54+b_0+2
  3972 03:1960: 85 09        	sta	<L55+dy_9
  3973                        ;				if(dx == dy)// 45*  -------------------------------------------
  3974                        	.line	846
  3975                        ;				{
  3976 03:1962: A5 0B        	lda	<L55+dx_9
  3977 03:1964: C5 09        	cmp	<L55+dy_9
  3978 03:1966: D0 3D        	bne	L10148
  3979                        	.line	847
  3980                        ;
  3981                        ;					
  3982                        ;					*((uint16_t*)ADDER32_B_LL) = (uint16_t)0x0281;
  3983                        	.line	850
  3984 03:1968: A9 81 02     	lda	#$281
  3985 03:196B: 8F 24 01 00  	sta	>292
  3986                        ;					*((uint16_t*)ADDER32_B_HL) = (uint16_t)0x0000;
  3987                        	.line	851
  3988 03:196F: A9 00 00     	lda	#$0
  3989 03:1972: 8F 26 01 00  	sta	>294
  3990                        ;					
  3991                        ;					for(y=0; y < dy; y++)
  3992                        	.line	853
  3993 03:1976: 64 03        	stz	<L55+y_1
  3994 03:1978: 80 22        	bra	L10152
  3995                        L10151:
  3996                        ;					{
  3997                        	.line	854
  3998                        ;						//((volatile uint8_t * far)address)[a.x + offset] = colour;
  3999                        ;						*((volatile uint8_t *)address) = colour;
  4000                        	.line	856
  4001 03:197A: E2 20        	sep	#$20
  4002                        	longa	off
  4003 03:197C: A5 22        	lda	<L54+colour_0
  4004 03:197E: 87 05        	sta	[<L55+address_1]
  4005 03:1980: C2 20        	rep	#$20
  4006                        	longa	on
  4007                        ;						
  4008                        ;						*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  4009                        	.line	858
  4010 03:1982: A5 05        	lda	<L55+address_1
  4011 03:1984: 8F 20 01 00  	sta	>288
  4012                        ;						*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  4013                        	.line	859
  4014 03:1988: A5 07        	lda	<L55+address_1+2
  Wed Apr 14 2021  0:19                                                                                                    Page 81


  4015 03:198A: 8F 22 01 00  	sta	>290
  4016                        ;						*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  4017                        	.line	860
  4018 03:198E: AF 28 01 00  	lda	>296
  4019 03:1992: 85 05        	sta	<L55+address_1
  4020                        ;						*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  4021                        	.line	861
  4022 03:1994: AF 2A 01 00  	lda	>298
  4023 03:1998: 85 07        	sta	<L55+address_1+2
  4024                        ;					}
  4025                        	.line	862
  4026 03:199A: E6 03        	inc	<L55+y_1
  4027                        L10152:
  4028 03:199C: A5 03        	lda	<L55+y_1
  4029 03:199E: C5 09        	cmp	<L55+dy_9
  4030 03:19A0: 90 D8        	bcc	L10151
  4031 03:19A2: 82 50 FF     	brl	L106
  4032                        ;				}
  4033                        	.line	863
  4034                        ;				else if(dx < dy) // -------------------------------------------
  4035                        L10148:
  4036                        	.line	864
  4037                        ;				{
  4038 03:19A5: A5 0B        	lda	<L55+dx_9
  4039 03:19A7: C5 09        	cmp	<L55+dy_9
  4040 03:19A9: B0 77        	bcs	L10154
  4041                        	.line	865
  4042                        ;					
  4043                        ;					// write dx in DIV_NUM_HI to do a dx *256 directely
  4044                        ;					*((uint8_t*)UNSIGNED_DIV_NUM_LO) = 0;
  4045                        	.line	868
  4046 03:19AB: E2 20        	sep	#$20
  4047                        	longa	off
  4048 03:19AD: A9 00        	lda	#$0
  4049 03:19AF: 8F 12 01 00  	sta	>274
  4050                        ;					*((uint8_t*)UNSIGNED_DIV_NUM_HI) = dx;
  4051                        	.line	869
  4052 03:19B3: A5 0B        	lda	<L55+dx_9
  4053 03:19B5: 8F 13 01 00  	sta	>275
  4054 03:19B9: C2 20        	rep	#$20
  4055                        	longa	on
  4056                        ;					*((uint16_t*)UNSIGNED_DIV_DEM_LO) = dy;
  4057                        	.line	870
  4058 03:19BB: A5 09        	lda	<L55+dy_9
  4059 03:19BD: 8F 10 01 00  	sta	>272
  4060                        ;					uStep   = *((uint16_t*)UNSIGNED_DIV_QUO_LO); // (dx*256) /dy
  4061                        	.line	871
  4062 03:19C1: AF 14 01 00  	lda	>276
  4063 03:19C5: 85 0F        	sta	<L55+uStep_11
  4064                        ;					uStep_CPT = *((uint16_t*)UNSIGNED_DIV_QUO_LO);
  4065                        	.line	872
  4066 03:19C7: AF 14 01 00  	lda	>276
  4067 03:19CB: 85 11        	sta	<L55+uStep_CPT_11
  4068                        ;					
  4069                        ;					*((uint16_t*)ADDER32_B_LL) = (uint16_t)0x0280;
  4070                        	.line	874
  4071 03:19CD: A9 80 02     	lda	#$280
  4072 03:19D0: 8F 24 01 00  	sta	>292
  Wed Apr 14 2021  0:19                                                                                                    Page 82


  4073                        ;					*((uint16_t*)ADDER32_B_HL) = (uint16_t)0x0000;
  4074                        	.line	875
  4075 03:19D4: A9 00 00     	lda	#$0
  4076 03:19D7: 8F 26 01 00  	sta	>294
  4077                        ;					
  4078                        ;					for(y=0; y < dy; y++) // increment y by 1 as we need several y inc t
                    o make 1 x
  4079                        	.line	877
  4080 03:19DB: 64 03        	stz	<L55+y_1
  4081 03:19DD: 80 3A        	bra	L10158
  4082                        L10157:
  4083                        ;					{
  4084                        	.line	878
  4085                        ;						((volatile uint8_t *)address)[y] = colour;
  4086                        	.line	879
  4087 03:19DF: E2 20        	sep	#$20
  4088                        	longa	off
  4089 03:19E1: A5 22        	lda	<L54+colour_0
  4090 03:19E3: A4 03        	ldy	<L55+y_1
  4091 03:19E5: 97 05        	sta	[<L55+address_1],Y
  4092 03:19E7: C2 20        	rep	#$20
  4093                        	longa	on
  4094                        ;						uStep_CPT += uStep;
  4095                        	.line	880
  4096 03:19E9: A5 11        	lda	<L55+uStep_CPT_11
  4097 03:19EB: 18           	clc
  4098 03:19EC: 65 0F        	adc	<L55+uStep_11
  4099 03:19EE: 85 11        	sta	<L55+uStep_CPT_11
  4100                        ;						if(uStep_CPT > 0xFF) // 256 is equal to 1 poixel so if it bi
                    gger we need to move 1 pixel on the right 
  4101                        	.line	881
  4102                        ;						{
  4103 03:19F0: A9 FF 00     	lda	#$ff
  4104 03:19F3: C5 11        	cmp	<L55+uStep_CPT_11
  4105 03:19F5: B0 20        	bcs	L10155
  4106                        	.line	882
  4107                        ;							uStep_CPT -= 0xFF;
  4108                        	.line	883
  4109 03:19F7: A9 01 FF     	lda	#$ff01
  4110 03:19FA: 18           	clc
  4111 03:19FB: 65 11        	adc	<L55+uStep_CPT_11
  4112 03:19FD: 85 11        	sta	<L55+uStep_CPT_11
  4113                        ;							*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  4114                        	.line	884
  4115 03:19FF: A5 05        	lda	<L55+address_1
  4116 03:1A01: 8F 20 01 00  	sta	>288
  4117                        ;							*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  4118                        	.line	885
  4119 03:1A05: A5 07        	lda	<L55+address_1+2
  4120 03:1A07: 8F 22 01 00  	sta	>290
  4121                        ;							*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL
                    );
  4122                        	.line	886
  4123 03:1A0B: AF 28 01 00  	lda	>296
  4124 03:1A0F: 85 05        	sta	<L55+address_1
  4125                        ;							*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL
                    );
  4126                        	.line	887
  Wed Apr 14 2021  0:19                                                                                                    Page 83


  4127 03:1A11: AF 2A 01 00  	lda	>298
  4128 03:1A15: 85 07        	sta	<L55+address_1+2
  4129                        ;						}
  4130                        	.line	888
  4131                        ;					}
  4132                        	.line	889
  4133                        L10155:
  4134 03:1A17: E6 03        	inc	<L55+y_1
  4135                        L10158:
  4136 03:1A19: A5 03        	lda	<L55+y_1
  4137 03:1A1B: C5 09        	cmp	<L55+dy_9
  4138 03:1A1D: 90 C0        	bcc	L10157
  4139 03:1A1F: 82 D3 FE     	brl	L106
  4140                        ;				}
  4141                        	.line	890
  4142                        ;				else // dx is bigger than dy -------------------------------------------
  4143                        L10154:
  4144                        ;				{
  4145                        	.line	892
  4146                        ;					
  4147                        ;					// comput the rate of the line
  4148                        ;					*((uint8_t*)UNSIGNED_DIV_NUM_LO) = 0;
  4149                        	.line	895
  4150 03:1A22: E2 20        	sep	#$20
  4151                        	longa	off
  4152 03:1A24: A9 00        	lda	#$0
  4153 03:1A26: 8F 12 01 00  	sta	>274
  4154                        ;					*((uint8_t*)UNSIGNED_DIV_NUM_HI) = dy;
  4155                        	.line	896
  4156 03:1A2A: A5 09        	lda	<L55+dy_9
  4157 03:1A2C: 8F 13 01 00  	sta	>275
  4158 03:1A30: C2 20        	rep	#$20
  4159                        	longa	on
  4160                        ;					*((uint16_t*)UNSIGNED_DIV_DEM_LO) = dx;
  4161                        	.line	897
  4162 03:1A32: A5 0B        	lda	<L55+dx_9
  4163 03:1A34: 8F 10 01 00  	sta	>272
  4164                        ;					uStep     = *((uint16_t*)UNSIGNED_DIV_QUO_LO); // (dy*256) /dx
  4165                        	.line	898
  4166 03:1A38: AF 14 01 00  	lda	>276
  4167 03:1A3C: 85 0F        	sta	<L55+uStep_11
  4168                        ;					uStep_CPT = *((uint16_t*)UNSIGNED_DIV_QUO_LO);
  4169                        	.line	899
  4170 03:1A3E: AF 14 01 00  	lda	>276
  4171 03:1A42: 85 11        	sta	<L55+uStep_CPT_11
  4172                        ;					
  4173                        ;					*((uint16_t*)ADDER32_B_LL) = (uint16_t)0x0280;
  4174                        	.line	901
  4175 03:1A44: A9 80 02     	lda	#$280
  4176 03:1A47: 8F 24 01 00  	sta	>292
  4177                        ;					*((uint16_t*)ADDER32_B_HL) = (uint16_t)0x0000;
  4178                        	.line	902
  4179 03:1A4B: A9 00 00     	lda	#$0
  4180 03:1A4E: 8F 26 01 00  	sta	>294
  4181                        ;					
  4182                        ;					//for(x=a.x; x < b.x; x++) // increment y by 1 as we need several y 
                    inc to make 1 x
  4183                        ;					for(x=0; x < dx; x++) // increment y by 1 as we need several y inc t
  Wed Apr 14 2021  0:19                                                                                                    Page 84


                    o make 1 x
  4184                        	.line	905
  4185 03:1A52: 64 01        	stz	<L55+x_1
  4186 03:1A54: 80 3C        	bra	L10164
  4187                        L10163:
  4188                        ;					{
  4189                        	.line	906
  4190                        ;						//((volatile uint8_t *)0xB60000)[start_line + y] = colour;
  4191                        ;						((volatile uint8_t *)address)[offset_y] = colour;
  4192                        	.line	908
  4193 03:1A56: E2 20        	sep	#$20
  4194                        	longa	off
  4195 03:1A58: A5 22        	lda	<L54+colour_0
  4196 03:1A5A: A4 0D        	ldy	<L55+offset_y_11
  4197 03:1A5C: 97 05        	sta	[<L55+address_1],Y
  4198 03:1A5E: C2 20        	rep	#$20
  4199                        	longa	on
  4200                        ;						uStep_CPT += uStep;
  4201                        	.line	909
  4202 03:1A60: A5 11        	lda	<L55+uStep_CPT_11
  4203 03:1A62: 18           	clc
  4204 03:1A63: 65 0F        	adc	<L55+uStep_11
  4205 03:1A65: 85 11        	sta	<L55+uStep_CPT_11
  4206                        ;						if(uStep_CPT > 0xFF) // 256 is equal to 1 poixel so if it bi
                    gger we need to move 1 pixel on the right 
  4207                        	.line	910
  4208                        ;						{
  4209 03:1A67: A9 FF 00     	lda	#$ff
  4210 03:1A6A: C5 11        	cmp	<L55+uStep_CPT_11
  4211 03:1A6C: B0 0A        	bcs	L10165
  4212                        	.line	911
  4213                        ;							uStep_CPT -= 0xFF;
  4214                        	.line	912
  4215 03:1A6E: A9 01 FF     	lda	#$ff01
  4216 03:1A71: 18           	clc
  4217 03:1A72: 65 11        	adc	<L55+uStep_CPT_11
  4218 03:1A74: 85 11        	sta	<L55+uStep_CPT_11
  4219                        ;							offset_y++;
  4220                        	.line	913
  4221 03:1A76: E6 0D        	inc	<L55+offset_y_11
  4222                        ;						}
  4223                        	.line	914
  4224                        ;						//address = address + 0x00000280;
  4225                        ;						*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  4226                        L10165:
  4227                        	.line	916
  4228 03:1A78: A5 05        	lda	<L55+address_1
  4229 03:1A7A: 8F 20 01 00  	sta	>288
  4230                        ;						*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  4231                        	.line	917
  4232 03:1A7E: A5 07        	lda	<L55+address_1+2
  4233 03:1A80: 8F 22 01 00  	sta	>290
  4234                        ;						*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  4235                        	.line	918
  4236 03:1A84: AF 28 01 00  	lda	>296
  4237 03:1A88: 85 05        	sta	<L55+address_1
  4238                        ;						*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  4239                        	.line	919
  Wed Apr 14 2021  0:19                                                                                                    Page 85


  4240 03:1A8A: AF 2A 01 00  	lda	>298
  4241 03:1A8E: 85 07        	sta	<L55+address_1+2
  4242                        ;					}
  4243                        	.line	920
  4244 03:1A90: E6 01        	inc	<L55+x_1
  4245                        L10164:
  4246 03:1A92: A5 01        	lda	<L55+x_1
  4247 03:1A94: C5 0B        	cmp	<L55+dx_9
  4248 03:1A96: 90 BE        	bcc	L10163
  4249 03:1A98: 82 5A FE     	brl	L106
  4250                        ;				}
  4251                        	.line	921
  4252                        ;			}
  4253                        	.endblock	922
  4254                        	.line	922
  4255                        ;		}
  4256                        	.endblock	923
  4257                        	.line	923
  4258                        ;	}
  4259                        	.line	924
  4260                        ;	return;
  4261                        	.line	925
  4262                        ;}
  4263                        	.line	926
  4264                        	.endblock	926
  4265             00000012   L54	equ	18
  4266             00000001   L55	equ	1
  4267 03:1A9B:              	ends
  4268                        	efunc
  4269                        	.endfunc	926,1,18
  4270                        	.line	926
  4271                        ;
  4272                        ;
  4273                        ;void Drow_point(struct Point a, uint8_t colour)
  4274                        ;{
  4275                        	.line	929
  4276                        	.line	930
  4277                        	bank3
  4278                        	xdef	~~Drow_point
  4279                        	func
  4280                        	.function	930
  4281                        ~~Drow_point:
  4282                        	longa	on
  4283                        	longi	on
  4284 03:1A9B: 3B           	tsc
  4285 03:1A9C: 38           	sec
  4286 03:1A9D: E9 04 00     	sbc	#L107
  4287 03:1AA0: 1B           	tcs
  4288 03:1AA1: 0B           	phd
  4289 03:1AA2: 5B           	tcd
  4290             00000004   a_0	set	4
  4291             0000000A   colour_0	set	10
  4292                        	.block	930
  4293                        ;
  4294                        ;	uint8_t *address = (uint8_t *)0xB60000;
  4295                        ;	
  4296                        ;	// address = address + a.x *640 start address of the first point
  4297                        ;	*(uint16_t*)UNSIGNED_MULT_A_LO = a.x;
  Wed Apr 14 2021  0:19                                                                                                    Page 86


  4298             00000000   address_1	set	0
  4299                        	.sym	address,0,142,1,32
  4300                        	.sym	a,4,10,6,48,5
  4301                        	.sym	colour,10,14,6,8
  4302 03:1AA3: A9 00 00     	lda	#$0
  4303 03:1AA6: 85 01        	sta	<L108+address_1
  4304 03:1AA8: A9 B6 00     	lda	#$b6
  4305 03:1AAB: 85 03        	sta	<L108+address_1+2
  4306                        	.line	935
  4307 03:1AAD: A5 08        	lda	<L107+a_0
  4308 03:1AAF: 8F 00 01 00  	sta	>256
  4309                        ;	*(uint16_t*)UNSIGNED_MULT_B_LO = 640;
  4310                        	.line	936
  4311 03:1AB3: A9 80 02     	lda	#$280
  4312 03:1AB6: 8F 02 01 00  	sta	>258
  4313                        ;	
  4314                        ;	*(uint16_t*)ADDER32_A_LL = *((uint16_t*)&address);
  4315                        	.line	938
  4316 03:1ABA: A5 01        	lda	<L108+address_1
  4317 03:1ABC: 8F 20 01 00  	sta	>288
  4318                        ;	*(uint16_t*)ADDER32_A_HL = *((uint16_t*)&address+1);
  4319                        	.line	939
  4320 03:1AC0: A5 03        	lda	<L108+address_1+2
  4321 03:1AC2: 8F 22 01 00  	sta	>290
  4322                        ;	*(uint16_t*)ADDER32_B_LL = *((uint16_t*)UNSIGNED_MULT_AL_LO);
  4323                        	.line	940
  4324 03:1AC6: AF 04 01 00  	lda	>260
  4325 03:1ACA: 8F 24 01 00  	sta	>292
  4326                        ;	*(uint16_t*)ADDER32_B_HL = *((uint16_t*)UNSIGNED_MULT_AH_LO);
  4327                        	.line	941
  4328 03:1ACE: AF 06 01 00  	lda	>262
  4329 03:1AD2: 8F 26 01 00  	sta	>294
  4330                        ;	
  4331                        ;	*(uint16_t*)ADDER32_A_HL = *((uint16_t*)ADDER32_R_HL); // make sure to write the Hight part first !!
                    !, if you load  you moddify ADDER32_A_LL first that will affect the content of the result
  4332                        	.line	943
  4333 03:1AD6: AF 2A 01 00  	lda	>298
  4334 03:1ADA: 8F 22 01 00  	sta	>290
  4335                        ;	*(uint16_t*)ADDER32_A_LL = *((uint16_t*)ADDER32_R_LL);
  4336                        	.line	944
  4337 03:1ADE: AF 28 01 00  	lda	>296
  4338 03:1AE2: 8F 20 01 00  	sta	>288
  4339                        ;	*(uint16_t*)ADDER32_B_LL = a.y;
  4340                        	.line	945
  4341 03:1AE6: A5 0A        	lda	<L107+a_0+2
  4342 03:1AE8: 8F 24 01 00  	sta	>292
  4343                        ;	*(uint16_t*)ADDER32_B_HL = 0x0000;
  4344                        	.line	946
  4345 03:1AEC: A9 00 00     	lda	#$0
  4346 03:1AEF: 8F 26 01 00  	sta	>294
  4347                        ;	
  4348                        ;	*((uint16_t*)&address)   = *((uint16_t*)ADDER32_R_LL);
  4349                        	.line	948
  4350 03:1AF3: AF 28 01 00  	lda	>296
  4351 03:1AF7: 85 01        	sta	<L108+address_1
  4352                        ;	*((uint16_t*)&address+1) = *((uint16_t*)ADDER32_R_HL);
  4353                        	.line	949
  4354 03:1AF9: AF 2A 01 00  	lda	>298
  Wed Apr 14 2021  0:19                                                                                                    Page 87


  4355 03:1AFD: 85 03        	sta	<L108+address_1+2
  4356                        ;
  4357                        ;	*((volatile uint8_t *)address) = colour;
  4358                        	.line	951
  4359 03:1AFF: E2 20        	sep	#$20
  4360                        	longa	off
  4361 03:1B01: A5 0E        	lda	<L107+colour_0
  4362 03:1B03: 87 01        	sta	[<L108+address_1]
  4363 03:1B05: C2 20        	rep	#$20
  4364                        	longa	on
  4365                        ;	return;
  4366                        	.line	952
  4367 03:1B07: A5 06        	lda	<L107+2
  4368 03:1B09: 85 0E        	sta	<L107+2+8
  4369 03:1B0B: A5 05        	lda	<L107+1
  4370 03:1B0D: 85 0D        	sta	<L107+1+8
  4371 03:1B0F: 2B           	pld
  4372 03:1B10: 3B           	tsc
  4373 03:1B11: 18           	clc
  4374 03:1B12: 69 0C 00     	adc	#L107+8
  4375 03:1B15: 1B           	tcs
  4376 03:1B16: 6B           	rtl
  4377                        ;}
  4378                        	.line	953
  4379                        	.endblock	953
  4380             00000004   L107	equ	4
  4381             00000001   L108	equ	1
  4382 03:1B17:              	ends
  4383                        	efunc
  4384                        	.endfunc	953,1,4
  4385                        	.line	953
  4386                        ;
  4387                        ;struct Point Rot_X(struct Point a, uint8_t angle)
  4388                        ;{
  4389                        	.line	955
  4390                        	.line	956
  4391                        	bank3
  4392                        	xdef	~~Rot_X
  4393                        	func
  4394                        	.function	956
  4395                        ~~Rot_X:
  4396                        	longa	on
  4397                        	longi	on
  4398 03:1B17: 3B           	tsc
  4399 03:1B18: 38           	sec
  4400 03:1B19: E9 12 00     	sbc	#L111
  4401 03:1B1C: 1B           	tcs
  4402 03:1B1D: 0B           	phd
  4403 03:1B1E: 5B           	tcd
  4404             00000004   a_0	set	4
  4405             0000000A   angle_0	set	10
  4406                        	.block	956
  4407                        ;	//			[1		0		0		]
  4408                        ;	//rot x	=	[0		cos(th)	-sin(th)]
  4409                        ;	//			[0		sin(th)	sin(th)	]
  4410                        ;	struct Point res;
  4411                        ;	uint16_t temp_a;
  4412                        ;	uint16_t temp_b;
  Wed Apr 14 2021  0:19                                                                                                    Page 88


  4413                        ;	
  4414                        ;	//-------------------------------------------------
  4415                        ;	res.x = a.x;
  4416             00000000   res_1	set	0
  4417             00000006   temp_a_1	set	6
  4418             00000008   temp_b_1	set	8
  4419                        	.sym	res,0,10,1,48,5
  4420                        	.sym	temp_a,6,16,1,16
  4421                        	.sym	temp_b,8,16,1,16
  4422                        	.sym	a,4,10,6,48,5
  4423                        	.sym	angle,10,14,6,8
  4424                        	.line	965
  4425 03:1B1F: A5 16        	lda	<L111+a_0
  4426 03:1B21: 85 09        	sta	<L112+res_1
  4427                        ;	
  4428                        ;	//-------------------------------------------------
  4429                        ;	*(uint16_t*)UNSIGNED_MULT_A_LO = TRIGO_COS[angle>>1];
  4430                        	.line	968
  4431 03:1B23: A5 1C        	lda	<L111+angle_0
  4432 03:1B25: 29 FF 00     	and	#$ff
  4433 03:1B28: A2 01 00     	ldx	#<$1
  4434                        	xref	~~~asr
  4435 03:1B2B: 22 xx xx xx  	jsl	~~~asr
  4436 03:1B2F: 0A           	asl	A
  4437 03:1B30: AA           	tax
  4438 03:1B31: BD xx xx     	lda	|~~TRIGO_COS,X
  4439 03:1B34: 8F 00 01 00  	sta	>256
  4440                        ;	*(uint16_t*)UNSIGNED_MULT_B_LO = a.y;
  4441                        	.line	969
  4442 03:1B38: A5 18        	lda	<L111+a_0+2
  4443 03:1B3A: 8F 02 01 00  	sta	>258
  4444                        ;	temp_a = *((uint16_t*)UNSIGNED_MULT_AH_LO);
  4445                        	.line	970
  4446 03:1B3E: AF 06 01 00  	lda	>262
  4447 03:1B42: 85 0F        	sta	<L112+temp_a_1
  4448                        ;	
  4449                        ;	*(uint16_t*)UNSIGNED_MULT_A_LO = (-TRIGO_SIN[angle>>1]);
  4450                        	.line	972
  4451 03:1B44: A5 1C        	lda	<L111+angle_0
  4452 03:1B46: 29 FF 00     	and	#$ff
  4453 03:1B49: A2 01 00     	ldx	#<$1
  4454                        	xref	~~~asr
  4455 03:1B4C: 22 xx xx xx  	jsl	~~~asr
  4456 03:1B50: 0A           	asl	A
  4457 03:1B51: AA           	tax
  4458 03:1B52: 38           	sec
  4459 03:1B53: A9 00 00     	lda	#$0
  4460 03:1B56: FD xx xx     	sbc	|~~TRIGO_SIN,X
  4461 03:1B59: 8F 00 01 00  	sta	>256
  4462                        ;	*(uint16_t*)UNSIGNED_MULT_B_LO = a.z;
  4463                        	.line	973
  4464 03:1B5D: A5 1A        	lda	<L111+a_0+4
  4465 03:1B5F: 8F 02 01 00  	sta	>258
  4466                        ;	temp_b = *((uint16_t*)UNSIGNED_MULT_AH_LO);
  4467                        	.line	974
  4468 03:1B63: AF 06 01 00  	lda	>262
  4469 03:1B67: 85 11        	sta	<L112+temp_b_1
  4470 03:1B69: 18           	clc
  Wed Apr 14 2021  0:19                                                                                                    Page 89


  4471 03:1B6A: 65 0F        	adc	<L112+temp_a_1
  4472 03:1B6C: 85 0B        	sta	<L112+res_1+2
  4473                        ;	
  4474                        ;	//-------------------------------------------------
  4475                        ;	*(uint16_t*)UNSIGNED_MULT_A_LO = TRIGO_SIN[angle>>1];
  4476                        	.line	978
  4477 03:1B6E: A5 1C        	lda	<L111+angle_0
  4478 03:1B70: 29 FF 00     	and	#$ff
  4479 03:1B73: A2 01 00     	ldx	#<$1
  4480                        	xref	~~~asr
  4481 03:1B76: 22 xx xx xx  	jsl	~~~asr
  4482 03:1B7A: 0A           	asl	A
  4483 03:1B7B: AA           	tax
  4484 03:1B7C: BD xx xx     	lda	|~~TRIGO_SIN,X
  4485 03:1B7F: 8F 00 01 00  	sta	>256
  4486                        ;	*(uint16_t*)UNSIGNED_MULT_B_LO = a.y;
  4487                        	.line	979
  4488 03:1B83: A5 18        	lda	<L111+a_0+2
  4489 03:1B85: 8F 02 01 00  	sta	>258
  4490                        ;	temp_a = *((uint16_t*)UNSIGNED_MULT_AH_LO);
  4491                        	.line	980
  4492 03:1B89: AF 06 01 00  	lda	>262
  4493 03:1B8D: 85 0F        	sta	<L112+temp_a_1
  4494                        ;	
  4495                        ;	*(uint16_t*)UNSIGNED_MULT_A_LO = TRIGO_COS[angle>>1];
  4496                        	.line	982
  4497 03:1B8F: A5 1C        	lda	<L111+angle_0
  4498 03:1B91: 29 FF 00     	and	#$ff
  4499 03:1B94: A2 01 00     	ldx	#<$1
  4500                        	xref	~~~asr
  4501 03:1B97: 22 xx xx xx  	jsl	~~~asr
  4502 03:1B9B: 0A           	asl	A
  4503 03:1B9C: AA           	tax
  4504 03:1B9D: BD xx xx     	lda	|~~TRIGO_COS,X
  4505 03:1BA0: 8F 00 01 00  	sta	>256
  4506                        ;	*(uint16_t*)UNSIGNED_MULT_B_LO = a.z;
  4507                        	.line	983
  4508 03:1BA4: A5 1A        	lda	<L111+a_0+4
  4509 03:1BA6: 8F 02 01 00  	sta	>258
  4510                        ;	temp_b = *((uint16_t*)UNSIGNED_MULT_AH_LO);
  4511                        	.line	984
  4512 03:1BAA: AF 06 01 00  	lda	>262
  4513 03:1BAE: 85 11        	sta	<L112+temp_b_1
  4514 03:1BB0: 18           	clc
  4515 03:1BB1: 65 0F        	adc	<L112+temp_a_1
  4516 03:1BB3: 85 0D        	sta	<L112+res_1+4
  4517                        ;	
  4518                        ;	return res;
  4519                        	.line	987
  4520 03:1BB5: 18           	clc
  4521 03:1BB6: 7B           	tdc
  4522 03:1BB7: 69 09 00     	adc	#<L112+res_1
  4523 03:1BBA: 85 01        	sta	<R0
  4524 03:1BBC: A9 00 00     	lda	#$0
  4525 03:1BBF: 48           	pha
  4526 03:1BC0: D4 01        	pei	<R0
  4527 03:1BC2: F4 xx xx     	pea	#^L10166
  4528 03:1BC5: F4 xx xx     	pea	#<L10166
  Wed Apr 14 2021  0:19                                                                                                    Page 90


  4529 03:1BC8: A9 06 00     	lda	#$6
  4530                        	xref	~~~fmov
  4531 03:1BCB: 22 xx xx xx  	jsl	~~~fmov
  4532 03:1BCF: A9 xx xx     	lda	#^L10166
  4533 03:1BD2: AA           	tax
  4534 03:1BD3: A9 xx xx     	lda	#<L10166
  4535 03:1BD6: A8           	tay
  4536 03:1BD7: A5 14        	lda	<L111+2
  4537 03:1BD9: 85 1C        	sta	<L111+2+8
  4538 03:1BDB: A5 13        	lda	<L111+1
  4539 03:1BDD: 85 1B        	sta	<L111+1+8
  4540 03:1BDF: 2B           	pld
  4541 03:1BE0: 3B           	tsc
  4542 03:1BE1: 18           	clc
  4543 03:1BE2: 69 1A 00     	adc	#L111+8
  4544 03:1BE5: 1B           	tcs
  4545 03:1BE6: 98           	tya
  4546 03:1BE7: 6B           	rtl
  4547                        ;}
  4548                        	.line	988
  4549                        	.endblock	988
  4550             00000012   L111	equ	18
  4551             00000009   L112	equ	9
  4552 03:1BE8:              	ends
  4553                        	efunc
  4554                        	udata
  4555                        L10166:
  4556 00:0000:              	ds	6
  4557 00:0006:              	ends
  4558                        	.endfunc	988,9,18
  4559                        	.line	988
  4560                        ;
  4561                        ;struct Point Rot_Y(struct Point a, uint8_t angle)
  4562                        ;{
  4563                        	.line	990
  4564                        	.line	991
  4565                        	bank3
  4566                        	xdef	~~Rot_Y
  4567                        	func
  4568                        	.function	991
  4569                        ~~Rot_Y:
  4570                        	longa	on
  4571                        	longi	on
  4572 03:1BE8: 3B           	tsc
  4573 03:1BE9: 38           	sec
  4574 03:1BEA: E9 12 00     	sbc	#L115
  4575 03:1BED: 1B           	tcs
  4576 03:1BEE: 0B           	phd
  4577 03:1BEF: 5B           	tcd
  4578             00000004   a_0	set	4
  4579             0000000A   angle_0	set	10
  4580                        	.block	991
  4581                        ;	//			[cos(th)	0	sin(th)	]
  4582                        ;	//rot x	=	[0			1	0		]
  4583                        ;	//			[-sin(th)	0	cos(th)	]
  4584                        ;	struct Point res;
  4585                        ;	uint16_t temp_a;
  4586                        ;	uint16_t temp_b;
  Wed Apr 14 2021  0:19                                                                                                    Page 91


  4587                        ;	
  4588                        ;	//-------------------------------------------------
  4589                        ;	*(uint16_t*)UNSIGNED_MULT_A_LO = TRIGO_COS[angle>>1];
  4590             00000000   res_1	set	0
  4591             00000006   temp_a_1	set	6
  4592             00000008   temp_b_1	set	8
  4593                        	.sym	res,0,10,1,48,5
  4594                        	.sym	temp_a,6,16,1,16
  4595                        	.sym	temp_b,8,16,1,16
  4596                        	.sym	a,4,10,6,48,5
  4597                        	.sym	angle,10,14,6,8
  4598                        	.line	1000
  4599 03:1BF0: A5 1C        	lda	<L115+angle_0
  4600 03:1BF2: 29 FF 00     	and	#$ff
  4601 03:1BF5: A2 01 00     	ldx	#<$1
  4602                        	xref	~~~asr
  4603 03:1BF8: 22 xx xx xx  	jsl	~~~asr
  4604 03:1BFC: 0A           	asl	A
  4605 03:1BFD: AA           	tax
  4606 03:1BFE: BD xx xx     	lda	|~~TRIGO_COS,X
  4607 03:1C01: 8F 00 01 00  	sta	>256
  4608                        ;	*(uint16_t*)UNSIGNED_MULT_B_LO = a.x;
  4609                        	.line	1001
  4610 03:1C05: A5 16        	lda	<L115+a_0
  4611 03:1C07: 8F 02 01 00  	sta	>258
  4612                        ;	temp_a = *((uint16_t*)UNSIGNED_MULT_AH_LO);
  4613                        	.line	1002
  4614 03:1C0B: AF 06 01 00  	lda	>262
  4615 03:1C0F: 85 0F        	sta	<L116+temp_a_1
  4616                        ;	
  4617                        ;	*(uint16_t*)UNSIGNED_MULT_A_LO = TRIGO_SIN[angle>>1];
  4618                        	.line	1004
  4619 03:1C11: A5 1C        	lda	<L115+angle_0
  4620 03:1C13: 29 FF 00     	and	#$ff
  4621 03:1C16: A2 01 00     	ldx	#<$1
  4622                        	xref	~~~asr
  4623 03:1C19: 22 xx xx xx  	jsl	~~~asr
  4624 03:1C1D: 0A           	asl	A
  4625 03:1C1E: AA           	tax
  4626 03:1C1F: BD xx xx     	lda	|~~TRIGO_SIN,X
  4627 03:1C22: 8F 00 01 00  	sta	>256
  4628                        ;	*(uint16_t*)UNSIGNED_MULT_B_LO = a.z;
  4629                        	.line	1005
  4630 03:1C26: A5 1A        	lda	<L115+a_0+4
  4631 03:1C28: 8F 02 01 00  	sta	>258
  4632                        ;	temp_b = *((uint16_t*)UNSIGNED_MULT_AH_LO);
  4633                        	.line	1006
  4634 03:1C2C: AF 06 01 00  	lda	>262
  4635 03:1C30: 85 11        	sta	<L116+temp_b_1
  4636 03:1C32: 18           	clc
  4637 03:1C33: 65 0F        	adc	<L116+temp_a_1
  4638 03:1C35: 85 0B        	sta	<L116+res_1+2
  4639                        ;	
  4640                        ;	//-------------------------------------------------
  4641                        ;	res.y = a.y;
  4642                        	.line	1010
  4643 03:1C37: A5 18        	lda	<L115+a_0+2
  4644 03:1C39: 85 0B        	sta	<L116+res_1+2
  Wed Apr 14 2021  0:19                                                                                                    Page 92


  4645                        ;	
  4646                        ;	//-------------------------------------------------
  4647                        ;	*(uint16_t*)UNSIGNED_MULT_A_LO = (-TRIGO_SIN[angle>>1]);
  4648                        	.line	1013
  4649 03:1C3B: A5 1C        	lda	<L115+angle_0
  4650 03:1C3D: 29 FF 00     	and	#$ff
  4651 03:1C40: A2 01 00     	ldx	#<$1
  4652                        	xref	~~~asr
  4653 03:1C43: 22 xx xx xx  	jsl	~~~asr
  4654 03:1C47: 0A           	asl	A
  4655 03:1C48: AA           	tax
  4656 03:1C49: 38           	sec
  4657 03:1C4A: A9 00 00     	lda	#$0
  4658 03:1C4D: FD xx xx     	sbc	|~~TRIGO_SIN,X
  4659 03:1C50: 8F 00 01 00  	sta	>256
  4660                        ;	*(uint16_t*)UNSIGNED_MULT_B_LO = a.x;
  4661                        	.line	1014
  4662 03:1C54: A5 16        	lda	<L115+a_0
  4663 03:1C56: 8F 02 01 00  	sta	>258
  4664                        ;	temp_a = *((uint16_t*)UNSIGNED_MULT_AH_LO);
  4665                        	.line	1015
  4666 03:1C5A: AF 06 01 00  	lda	>262
  4667 03:1C5E: 85 0F        	sta	<L116+temp_a_1
  4668                        ;	
  4669                        ;	*(uint16_t*)UNSIGNED_MULT_A_LO = TRIGO_COS[angle>>1];
  4670                        	.line	1017
  4671 03:1C60: A5 1C        	lda	<L115+angle_0
  4672 03:1C62: 29 FF 00     	and	#$ff
  4673 03:1C65: A2 01 00     	ldx	#<$1
  4674                        	xref	~~~asr
  4675 03:1C68: 22 xx xx xx  	jsl	~~~asr
  4676 03:1C6C: 0A           	asl	A
  4677 03:1C6D: AA           	tax
  4678 03:1C6E: BD xx xx     	lda	|~~TRIGO_COS,X
  4679 03:1C71: 8F 00 01 00  	sta	>256
  4680                        ;	*(uint16_t*)UNSIGNED_MULT_B_LO = a.z;
  4681                        	.line	1018
  4682 03:1C75: A5 1A        	lda	<L115+a_0+4
  4683 03:1C77: 8F 02 01 00  	sta	>258
  4684                        ;	temp_b = *((uint16_t*)UNSIGNED_MULT_AH_LO);
  4685                        	.line	1019
  4686 03:1C7B: AF 06 01 00  	lda	>262
  4687 03:1C7F: 85 11        	sta	<L116+temp_b_1
  4688 03:1C81: 18           	clc
  4689 03:1C82: 65 0F        	adc	<L116+temp_a_1
  4690 03:1C84: 85 0D        	sta	<L116+res_1+4
  4691                        ;	
  4692                        ;	return res;
  4693                        	.line	1022
  4694 03:1C86: 18           	clc
  4695 03:1C87: 7B           	tdc
  4696 03:1C88: 69 09 00     	adc	#<L116+res_1
  4697 03:1C8B: 85 01        	sta	<R0
  4698 03:1C8D: A9 00 00     	lda	#$0
  4699 03:1C90: 48           	pha
  4700 03:1C91: D4 01        	pei	<R0
  4701 03:1C93: F4 xx xx     	pea	#^L10167
  4702 03:1C96: F4 xx xx     	pea	#<L10167
  Wed Apr 14 2021  0:19                                                                                                    Page 93


  4703 03:1C99: A9 06 00     	lda	#$6
  4704                        	xref	~~~fmov
  4705 03:1C9C: 22 xx xx xx  	jsl	~~~fmov
  4706 03:1CA0: A9 xx xx     	lda	#^L10167
  4707 03:1CA3: AA           	tax
  4708 03:1CA4: A9 xx xx     	lda	#<L10167
  4709 03:1CA7: A8           	tay
  4710 03:1CA8: A5 14        	lda	<L115+2
  4711 03:1CAA: 85 1C        	sta	<L115+2+8
  4712 03:1CAC: A5 13        	lda	<L115+1
  4713 03:1CAE: 85 1B        	sta	<L115+1+8
  4714 03:1CB0: 2B           	pld
  4715 03:1CB1: 3B           	tsc
  4716 03:1CB2: 18           	clc
  4717 03:1CB3: 69 1A 00     	adc	#L115+8
  4718 03:1CB6: 1B           	tcs
  4719 03:1CB7: 98           	tya
  4720 03:1CB8: 6B           	rtl
  4721                        ;}
  4722                        	.line	1023
  4723                        	.endblock	1023
  4724             00000012   L115	equ	18
  4725             00000009   L116	equ	9
  4726 03:1CB9:              	ends
  4727                        	efunc
  4728                        	udata
  4729                        L10167:
  4730 00:0006:              	ds	6
  4731 00:000C:              	ends
  4732                        	.endfunc	1023,9,18
  4733                        	.line	1023
  4734                        ;
  4735                        ;struct Point Rot_Z(struct Point a, uint8_t angle)
  4736                        ;{
  4737                        	.line	1025
  4738                        	.line	1026
  4739                        	bank3
  4740                        	xdef	~~Rot_Z
  4741                        	func
  4742                        	.function	1026
  4743                        ~~Rot_Z:
  4744                        	longa	on
  4745                        	longi	on
  4746 03:1CB9: 3B           	tsc
  4747 03:1CBA: 38           	sec
  4748 03:1CBB: E9 12 00     	sbc	#L119
  4749 03:1CBE: 1B           	tcs
  4750 03:1CBF: 0B           	phd
  4751 03:1CC0: 5B           	tcd
  4752             00000004   a_0	set	4
  4753             0000000A   angle_0	set	10
  4754                        	.block	1026
  4755                        ;	//			[cos(th)	-sin(th)	0]
  4756                        ;	//rot x	=	[sin(th)	cos(th)		0]
  4757                        ;	//			[0			0			1]
  4758                        ;	struct Point res;
  4759                        ;	
  4760                        ;	//-------------------------------------------------
  Wed Apr 14 2021  0:19                                                                                                    Page 94


  4761                        ;	*(uint16_t*)SIGNED_MULT_A_LO = TRIGO_COS[angle];
  4762             00000000   res_1	set	0
  4763                        	.sym	res,0,10,1,48,5
  4764                        	.sym	a,4,10,6,48,5
  4765                        	.sym	angle,10,14,6,8
  4766                        	.line	1033
  4767 03:1CC1: A5 1C        	lda	<L119+angle_0
  4768 03:1CC3: 29 FF 00     	and	#$ff
  4769 03:1CC6: 0A           	asl	A
  4770 03:1CC7: AA           	tax
  4771 03:1CC8: BD xx xx     	lda	|~~TRIGO_COS,X
  4772 03:1CCB: 8F 08 01 00  	sta	>264
  4773                        ;	*(uint16_t*)SIGNED_MULT_B_LO = a.x;
  4774                        	.line	1034
  4775 03:1CCF: A5 16        	lda	<L119+a_0
  4776 03:1CD1: 8F 0A 01 00  	sta	>266
  4777                        ;	*(uint8_t*)ADDER32_A_LL = *((uint8_t*)SIGNED_MULT_AL_HI);
  4778                        	.line	1035
  4779 03:1CD5: E2 20        	sep	#$20
  4780                        	longa	off
  4781 03:1CD7: AF 0D 01 00  	lda	>269
  4782 03:1CDB: 8F 20 01 00  	sta	>288
  4783                        ;	*(uint8_t*)ADDER32_A_LH = *((uint8_t*)SIGNED_MULT_AH_LO);
  4784                        	.line	1036
  4785 03:1CDF: AF 0E 01 00  	lda	>270
  4786 03:1CE3: 8F 21 01 00  	sta	>289
  4787 03:1CE7: C2 20        	rep	#$20
  4788                        	longa	on
  4789                        ;	
  4790                        ;	*(uint16_t*)SIGNED_MULT_A_LO = TRIGO_SIN[(angle + 128)%255]; //sin(x + 128) => you het -sin(x)
  4791                        	.line	1038
  4792 03:1CE9: A5 1C        	lda	<L119+angle_0
  4793 03:1CEB: 29 FF 00     	and	#$ff
  4794 03:1CEE: 18           	clc
  4795 03:1CEF: 69 80 00     	adc	#$80
  4796 03:1CF2: A2 FF 00     	ldx	#<$ff
  4797                        	xref	~~~mod
  4798 03:1CF5: 22 xx xx xx  	jsl	~~~mod
  4799 03:1CF9: 0A           	asl	A
  4800 03:1CFA: AA           	tax
  4801 03:1CFB: BD xx xx     	lda	|~~TRIGO_SIN,X
  4802 03:1CFE: 8F 08 01 00  	sta	>264
  4803                        ;	*(uint16_t*)SIGNED_MULT_B_LO = a.y;
  4804                        	.line	1039
  4805 03:1D02: A5 18        	lda	<L119+a_0+2
  4806 03:1D04: 8F 0A 01 00  	sta	>266
  4807                        ;	*(uint8_t*)ADDER32_B_LL = *((uint8_t*)SIGNED_MULT_AL_HI);
  4808                        	.line	1040
  4809 03:1D08: E2 20        	sep	#$20
  4810                        	longa	off
  4811 03:1D0A: AF 0D 01 00  	lda	>269
  4812 03:1D0E: 8F 24 01 00  	sta	>292
  4813                        ;	*(uint8_t*)ADDER32_B_LH = *((uint8_t*)SIGNED_MULT_AH_LO);
  4814                        	.line	1041
  4815 03:1D12: AF 0E 01 00  	lda	>270
  4816 03:1D16: 8F 25 01 00  	sta	>293
  4817 03:1D1A: C2 20        	rep	#$20
  4818                        	longa	on
  Wed Apr 14 2021  0:19                                                                                                    Page 95


  4819                        ;	
  4820                        ;	*(uint16_t*)ADDER32_A_HL = 0;
  4821                        	.line	1043
  4822 03:1D1C: A9 00 00     	lda	#$0
  4823 03:1D1F: 8F 22 01 00  	sta	>290
  4824                        ;	*(uint16_t*)ADDER32_B_HL = 0;
  4825                        	.line	1044
  4826 03:1D23: 8F 26 01 00  	sta	>294
  4827                        ;	
  4828                        ;	res.x = *(uint16_t*)ADDER32_R_LL;
  4829                        	.line	1046
  4830 03:1D27: AF 28 01 00  	lda	>296
  4831 03:1D2B: 85 0D        	sta	<L120+res_1
  4832                        ;	
  4833                        ;	//-------------------------------------------------
  4834                        ;	*(uint16_t*)SIGNED_MULT_A_LO = TRIGO_SIN[angle];
  4835                        	.line	1049
  4836 03:1D2D: A5 1C        	lda	<L119+angle_0
  4837 03:1D2F: 29 FF 00     	and	#$ff
  4838 03:1D32: 0A           	asl	A
  4839 03:1D33: AA           	tax
  4840 03:1D34: BD xx xx     	lda	|~~TRIGO_SIN,X
  4841 03:1D37: 8F 08 01 00  	sta	>264
  4842                        ;	*(uint16_t*)SIGNED_MULT_B_LO = a.x;
  4843                        	.line	1050
  4844 03:1D3B: A5 16        	lda	<L119+a_0
  4845 03:1D3D: 8F 0A 01 00  	sta	>266
  4846                        ;	*(uint8_t*)ADDER32_A_LL = *((uint8_t*)SIGNED_MULT_AL_HI);
  4847                        	.line	1051
  4848 03:1D41: E2 20        	sep	#$20
  4849                        	longa	off
  4850 03:1D43: AF 0D 01 00  	lda	>269
  4851 03:1D47: 8F 20 01 00  	sta	>288
  4852                        ;	*(uint8_t*)ADDER32_A_LH = *((uint8_t*)SIGNED_MULT_AH_LO);
  4853                        	.line	1052
  4854 03:1D4B: AF 0E 01 00  	lda	>270
  4855 03:1D4F: 8F 21 01 00  	sta	>289
  4856 03:1D53: C2 20        	rep	#$20
  4857                        	longa	on
  4858                        ;	
  4859                        ;	*(uint16_t*)SIGNED_MULT_A_LO = TRIGO_COS[angle];
  4860                        	.line	1054
  4861 03:1D55: A5 1C        	lda	<L119+angle_0
  4862 03:1D57: 29 FF 00     	and	#$ff
  4863 03:1D5A: 0A           	asl	A
  4864 03:1D5B: AA           	tax
  4865 03:1D5C: BD xx xx     	lda	|~~TRIGO_COS,X
  4866 03:1D5F: 8F 08 01 00  	sta	>264
  4867                        ;	*(uint16_t*)SIGNED_MULT_B_LO = a.y;
  4868                        	.line	1055
  4869 03:1D63: A5 18        	lda	<L119+a_0+2
  4870 03:1D65: 8F 0A 01 00  	sta	>266
  4871                        ;	*(uint8_t*)ADDER32_B_LL = *((uint8_t*)SIGNED_MULT_AL_HI);
  4872                        	.line	1056
  4873 03:1D69: E2 20        	sep	#$20
  4874                        	longa	off
  4875 03:1D6B: AF 0D 01 00  	lda	>269
  4876 03:1D6F: 8F 24 01 00  	sta	>292
  Wed Apr 14 2021  0:19                                                                                                    Page 96


  4877                        ;	*(uint8_t*)ADDER32_B_LH = *((uint8_t*)SIGNED_MULT_AH_LO);
  4878                        	.line	1057
  4879 03:1D73: AF 0E 01 00  	lda	>270
  4880 03:1D77: 8F 25 01 00  	sta	>293
  4881 03:1D7B: C2 20        	rep	#$20
  4882                        	longa	on
  4883                        ;	
  4884                        ;	*(uint16_t*)ADDER32_A_HL = 0;
  4885                        	.line	1059
  4886 03:1D7D: A9 00 00     	lda	#$0
  4887 03:1D80: 8F 22 01 00  	sta	>290
  4888                        ;	*(uint16_t*)ADDER32_B_HL = 0;
  4889                        	.line	1060
  4890 03:1D84: 8F 26 01 00  	sta	>294
  4891                        ;	
  4892                        ;	res.y = *(uint16_t*)ADDER32_R_LL;
  4893                        	.line	1062
  4894 03:1D88: AF 28 01 00  	lda	>296
  4895 03:1D8C: 85 0F        	sta	<L120+res_1+2
  4896                        ;
  4897                        ;	//-------------------------------------------------
  4898                        ;	res.z = a.z;
  4899                        	.line	1065
  4900 03:1D8E: A5 1A        	lda	<L119+a_0+4
  4901 03:1D90: 85 11        	sta	<L120+res_1+4
  4902                        ;	
  4903                        ;	return res;
  4904                        	.line	1067
  4905 03:1D92: 18           	clc
  4906 03:1D93: 7B           	tdc
  4907 03:1D94: 69 0D 00     	adc	#<L120+res_1
  4908 03:1D97: 85 01        	sta	<R0
  4909 03:1D99: A9 00 00     	lda	#$0
  4910 03:1D9C: 48           	pha
  4911 03:1D9D: D4 01        	pei	<R0
  4912 03:1D9F: F4 xx xx     	pea	#^L10168
  4913 03:1DA2: F4 xx xx     	pea	#<L10168
  4914 03:1DA5: A9 06 00     	lda	#$6
  4915                        	xref	~~~fmov
  4916 03:1DA8: 22 xx xx xx  	jsl	~~~fmov
  4917 03:1DAC: A9 xx xx     	lda	#^L10168
  4918 03:1DAF: AA           	tax
  4919 03:1DB0: A9 xx xx     	lda	#<L10168
  4920 03:1DB3: A8           	tay
  4921 03:1DB4: A5 14        	lda	<L119+2
  4922 03:1DB6: 85 1C        	sta	<L119+2+8
  4923 03:1DB8: A5 13        	lda	<L119+1
  4924 03:1DBA: 85 1B        	sta	<L119+1+8
  4925 03:1DBC: 2B           	pld
  4926 03:1DBD: 3B           	tsc
  4927 03:1DBE: 18           	clc
  4928 03:1DBF: 69 1A 00     	adc	#L119+8
  4929 03:1DC2: 1B           	tcs
  4930 03:1DC3: 98           	tya
  4931 03:1DC4: 6B           	rtl
  4932                        ;}
  4933                        	.line	1068
  4934                        	.endblock	1068
  Wed Apr 14 2021  0:19                                                                                                    Page 97


  4935             00000012   L119	equ	18
  4936             0000000D   L120	equ	13
  4937 03:1DC5:              	ends
  4938                        	efunc
  4939                        	udata
  4940                        L10168:
  4941 00:000C:              	ds	6
  4942 00:0012:              	ends
  4943                        	.endfunc	1068,13,18
  4944                        	.line	1068
  4945                        ;
  4946                        ;struct Point Projection(struct Point a)
  4947                        ;{
  4948                        	.line	1070
  4949                        	.line	1071
  4950                        	bank3
  4951                        	xdef	~~Projection
  4952                        	func
  4953                        	.function	1071
  4954                        ~~Projection:
  4955                        	longa	on
  4956                        	longi	on
  4957 03:1DC5: 3B           	tsc
  4958 03:1DC6: 38           	sec
  4959 03:1DC7: E9 0A 00     	sbc	#L123
  4960 03:1DCA: 1B           	tcs
  4961 03:1DCB: 0B           	phd
  4962 03:1DCC: 5B           	tcd
  4963             00000004   a_0	set	4
  4964                        	.block	1071
  4965                        ;	struct Point res;
  4966                        ;	res.x = a.x*20/a.z;
  4967             00000000   res_1	set	0
  4968                        	.sym	res,0,10,1,48,5
  4969                        	.sym	a,4,10,6,48,5
  4970                        	.line	1073
  4971 03:1DCD: A5 0E        	lda	<L123+a_0
  4972 03:1DCF: A2 14 00     	ldx	#<$14
  4973                        	xref	~~~mul
  4974 03:1DD2: 22 xx xx xx  	jsl	~~~mul
  4975 03:1DD6: A6 12        	ldx	<L123+a_0+4
  4976                        	xref	~~~udv
  4977 03:1DD8: 22 xx xx xx  	jsl	~~~udv
  4978 03:1DDC: 85 05        	sta	<L124+res_1
  4979                        ;	res.y = a.y*20/a.z;
  4980                        	.line	1074
  4981 03:1DDE: A5 10        	lda	<L123+a_0+2
  4982 03:1DE0: A2 14 00     	ldx	#<$14
  4983                        	xref	~~~mul
  4984 03:1DE3: 22 xx xx xx  	jsl	~~~mul
  4985 03:1DE7: A6 12        	ldx	<L123+a_0+4
  4986                        	xref	~~~udv
  4987 03:1DE9: 22 xx xx xx  	jsl	~~~udv
  4988 03:1DED: 85 07        	sta	<L124+res_1+2
  4989                        ;	res.z = 1;
  4990                        	.line	1075
  4991 03:1DEF: A9 01 00     	lda	#$1
  4992 03:1DF2: 85 09        	sta	<L124+res_1+4
  Wed Apr 14 2021  0:19                                                                                                    Page 98


  4993                        ;	return res;
  4994                        	.line	1076
  4995 03:1DF4: 18           	clc
  4996 03:1DF5: 7B           	tdc
  4997 03:1DF6: 69 05 00     	adc	#<L124+res_1
  4998 03:1DF9: 85 01        	sta	<R0
  4999 03:1DFB: A9 00 00     	lda	#$0
  5000 03:1DFE: 48           	pha
  5001 03:1DFF: D4 01        	pei	<R0
  5002 03:1E01: F4 xx xx     	pea	#^L10169
  5003 03:1E04: F4 xx xx     	pea	#<L10169
  5004 03:1E07: A9 06 00     	lda	#$6
  5005                        	xref	~~~fmov
  5006 03:1E0A: 22 xx xx xx  	jsl	~~~fmov
  5007 03:1E0E: A9 xx xx     	lda	#^L10169
  5008 03:1E11: AA           	tax
  5009 03:1E12: A9 xx xx     	lda	#<L10169
  5010 03:1E15: A8           	tay
  5011 03:1E16: A5 0C        	lda	<L123+2
  5012 03:1E18: 85 12        	sta	<L123+2+6
  5013 03:1E1A: A5 0B        	lda	<L123+1
  5014 03:1E1C: 85 11        	sta	<L123+1+6
  5015 03:1E1E: 2B           	pld
  5016 03:1E1F: 3B           	tsc
  5017 03:1E20: 18           	clc
  5018 03:1E21: 69 10 00     	adc	#L123+6
  5019 03:1E24: 1B           	tcs
  5020 03:1E25: 98           	tya
  5021 03:1E26: 6B           	rtl
  5022                        ;}
  5023                        	.line	1077
  5024                        	.endblock	1077
  5025             0000000A   L123	equ	10
  5026             00000005   L124	equ	5
  5027 03:1E27:              	ends
  5028                        	efunc
  5029                        	udata
  5030                        L10169:
  5031 00:0012:              	ds	6
  5032 00:0018:              	ends
  5033                        	.endfunc	1077,5,10
  5034                        	.line	1077
  5035                        ;
  5036                        ;struct Point Move(struct Point a, struct Point m)
  5037                        ;{
  5038                        	.line	1079
  5039                        	.line	1080
  5040                        	bank3
  5041                        	xdef	~~Move
  5042                        	func
  5043                        	.function	1080
  5044                        ~~Move:
  5045                        	longa	on
  5046                        	longi	on
  5047 03:1E27: 3B           	tsc
  5048 03:1E28: 38           	sec
  5049 03:1E29: E9 0A 00     	sbc	#L127
  5050 03:1E2C: 1B           	tcs
  Wed Apr 14 2021  0:19                                                                                                    Page 99


  5051 03:1E2D: 0B           	phd
  5052 03:1E2E: 5B           	tcd
  5053             00000004   a_0	set	4
  5054             0000000A   m_0	set	10
  5055                        	.block	1080
  5056                        ;
  5057                        ;	struct Point res;
  5058                        ;
  5059                        ;	res.x = a.x + m.x;
  5060             00000000   res_1	set	0
  5061                        	.sym	res,0,10,1,48,5
  5062                        	.sym	a,4,10,6,48,5
  5063                        	.sym	m,10,10,6,48,5
  5064                        	.line	1084
  5065 03:1E2F: A5 0E        	lda	<L127+a_0
  5066 03:1E31: 18           	clc
  5067 03:1E32: 65 14        	adc	<L127+m_0
  5068 03:1E34: 85 05        	sta	<L128+res_1
  5069                        ;	res.y = a.y + m.y;
  5070                        	.line	1085
  5071 03:1E36: A5 10        	lda	<L127+a_0+2
  5072 03:1E38: 18           	clc
  5073 03:1E39: 65 16        	adc	<L127+m_0+2
  5074 03:1E3B: 85 07        	sta	<L128+res_1+2
  5075                        ;	res.z = a.z + m.z;
  5076                        	.line	1086
  5077 03:1E3D: A5 12        	lda	<L127+a_0+4
  5078 03:1E3F: 18           	clc
  5079 03:1E40: 65 18        	adc	<L127+m_0+4
  5080 03:1E42: 85 09        	sta	<L128+res_1+4
  5081                        ;	
  5082                        ;	return res;
  5083                        	.line	1088
  5084 03:1E44: 18           	clc
  5085 03:1E45: 7B           	tdc
  5086 03:1E46: 69 05 00     	adc	#<L128+res_1
  5087 03:1E49: 85 01        	sta	<R0
  5088 03:1E4B: A9 00 00     	lda	#$0
  5089 03:1E4E: 48           	pha
  5090 03:1E4F: D4 01        	pei	<R0
  5091 03:1E51: F4 xx xx     	pea	#^L10170
  5092 03:1E54: F4 xx xx     	pea	#<L10170
  5093 03:1E57: A9 06 00     	lda	#$6
  5094                        	xref	~~~fmov
  5095 03:1E5A: 22 xx xx xx  	jsl	~~~fmov
  5096 03:1E5E: A9 xx xx     	lda	#^L10170
  5097 03:1E61: AA           	tax
  5098 03:1E62: A9 xx xx     	lda	#<L10170
  5099 03:1E65: A8           	tay
  5100 03:1E66: A5 0C        	lda	<L127+2
  5101 03:1E68: 85 18        	sta	<L127+2+12
  5102 03:1E6A: A5 0B        	lda	<L127+1
  5103 03:1E6C: 85 17        	sta	<L127+1+12
  5104 03:1E6E: 2B           	pld
  5105 03:1E6F: 3B           	tsc
  5106 03:1E70: 18           	clc
  5107 03:1E71: 69 16 00     	adc	#L127+12
  5108 03:1E74: 1B           	tcs
  Wed Apr 14 2021  0:19                                                                                                    Page 100


  5109 03:1E75: 98           	tya
  5110 03:1E76: 6B           	rtl
  5111                        ;}
  5112                        	.line	1089
  5113                        	.endblock	1089
  5114             0000000A   L127	equ	10
  5115             00000005   L128	equ	5
  5116 03:1E77:              	ends
  5117                        	efunc
  5118                        	udata
  5119                        L10170:
  5120 00:0018:              	ds	6
  5121 00:001E:              	ends
  5122                        	.endfunc	1089,5,10
  5123                        	.line	1089
  5124                        ;
  5125                        ;void Print_string(uint8_t *data, uint16_t x, uint16_t y)
  5126                        ;{
  5127                        	.line	1091
  5128                        	.line	1092
  5129                        	bank3
  5130                        	xdef	~~Print_string
  5131                        	func
  5132                        	.function	1092
  5133                        ~~Print_string:
  5134                        	longa	on
  5135                        	longi	on
  5136 03:1E77: 3B           	tsc
  5137 03:1E78: 38           	sec
  5138 03:1E79: E9 05 00     	sbc	#L131
  5139 03:1E7C: 1B           	tcs
  5140 03:1E7D: 0B           	phd
  5141 03:1E7E: 5B           	tcd
  5142             00000004   data_0	set	4
  5143             00000008   x_0	set	8
  5144             0000000A   y_0	set	10
  5145                        	.block	1092
  5146                        ;	
  5147                        ;	uint16_t line_offset = x * 80;
  5148                        ;	uint16_t string_offset = 0;
  5149                        ;	uint8_t text = data[0];
  5150                        ;	
  5151                        ;	/*while(text != 0x00)
  5152                        ;	{
  5153                        ;		text = data[string_offset]
  5154                        ;		if(text == '\n')
  5155                        ;			string_offset = string_offset - y + 80;
  5156                        ;		if(text == '\n')
  5157                        ;		{
  5158                        ;			string_offset -= y;
  5159                        ;			y=0;
  5160                        ;		}
  5161                        ;		SCREEN_PAGE0[screen_pos]  = text;
  5162                        ;		screen_pos++
  5163                        ;		y++;
  5164                        ;	}*/
  5165                        ;}
  5166             00000000   line_offset_1	set	0
  Wed Apr 14 2021  0:19                                                                                                    Page 101


  5167             00000002   string_offset_1	set	2
  5168             00000004   text_1	set	4
  5169                        	.sym	line_offset,0,16,1,16
  5170                        	.sym	string_offset,2,16,1,16
  5171                        	.sym	text,4,14,1,8
  5172                        	.sym	data,4,142,6,32
  5173                        	.sym	x,8,16,6,16
  5174                        	.sym	y,10,16,6,16
  5175 03:1E7F: A5 0D        	lda	<L131+x_0
  5176 03:1E81: A2 50 00     	ldx	#<$50
  5177                        	xref	~~~mul
  5178 03:1E84: 22 xx xx xx  	jsl	~~~mul
  5179 03:1E88: 85 01        	sta	<L132+line_offset_1
  5180 03:1E8A: 64 03        	stz	<L132+string_offset_1
  5181 03:1E8C: E2 20        	sep	#$20
  5182                        	longa	off
  5183 03:1E8E: A7 09        	lda	[<L131+data_0]
  5184 03:1E90: 85 05        	sta	<L132+text_1
  5185 03:1E92: C2 20        	rep	#$20
  5186                        	longa	on
  5187                        	.line	1112
  5188 03:1E94: A5 07        	lda	<L131+2
  5189 03:1E96: 85 0F        	sta	<L131+2+8
  5190 03:1E98: A5 06        	lda	<L131+1
  5191 03:1E9A: 85 0E        	sta	<L131+1+8
  5192 03:1E9C: 2B           	pld
  5193 03:1E9D: 3B           	tsc
  5194 03:1E9E: 18           	clc
  5195 03:1E9F: 69 0D 00     	adc	#L131+8
  5196 03:1EA2: 1B           	tcs
  5197 03:1EA3: 6B           	rtl
  5198                        	.endblock	1112
  5199             00000005   L131	equ	5
  5200             00000001   L132	equ	1
  5201 03:1EA4:              	ends
  5202                        	efunc
  5203                        	.endfunc	1112,1,5
  5204                        	.line	1112
  5205                        ;
  5206                        	.line	1112
  5207                        	.file	"D:\Old_PC\C256\FMX\Project\Half_Life_Genesis_C\Half_Life_code\Half_Life_Genesis_FMX.c",1091
  5208                        	xref	~~VKYII_Load_Tille_Map
  5209                        	xref	~~VKYII_Load_Palette
  5210                        	xref	~~Print_INT_16
  5211                        	xref	~~Print_UINT_16
  5212                        	xref	~~Print_UINT_8
  5213                        	xref	~~Print_HEX_16
  5214                        	xref	~~Copy
  5215                        	xref	~~TILE_MAP_PALETTE
  5216                        	xref	~~TILE_MAP_PIXEL
  5217                        	xref	~~TILE_MAP_0
  5218                        	.sym	~~Print_string,~~Print_string,65,2,0
  5219                        	.sym	~~VKYII_Load_Tille_Map,~~VKYII_Load_Tille_Map,69,18,0
  5220                        	.sym	~~main,~~main,69,2,0
  5221                        	.sym	~~TILE_MAP_PALETTE,~~TILE_MAP_PALETTE,110,18,0,0
  5222                        	.sym	~~TILE_MAP_PIXEL,~~TILE_MAP_PIXEL,110,18,0,0
  5223                        	.sym	~~TILE_MAP_0,~~TILE_MAP_0,110,18,0,0
  5224                        	.sym	FILE,0,10,14,160,6
  Wed Apr 14 2021  0:19                                                                                                    Page 102


  5225                        	.sym	fpos_t,0,7,14,32
  5226                        	.sym	size_t,0,16,14,16
  5227                        	.sym	va_list,0,142,14,32
  5228                        	.sym	~~TROGO_TAN,~~TROGO_TAN,112,2,0,256
  5229                        	.sym	~~TRIGO_COS,~~TRIGO_COS,112,2,0,256
  5230                        	.sym	~~TRIGO_SIN,~~TRIGO_SIN,112,2,0,256
  5231                        	.sym	~~palette,~~palette,110,2,0,1024
  5232                        	.sym	~~VKYII_Load_Palette,~~VKYII_Load_Palette,65,18,0
  5233                        	.sym	~~Projection,~~Projection,74,2,0,5
  5234                        	.sym	~~Move,~~Move,74,2,0,5
  5235                        	.sym	~~Rot_Z,~~Rot_Z,74,2,0,5
  5236                        	.sym	~~Rot_Y,~~Rot_Y,74,2,0,5
  5237                        	.sym	~~Rot_X,~~Rot_X,74,2,0,5
  5238                        	.sym	~~Drow_point,~~Drow_point,65,2,0
  5239                        	.sym	~~Drow_line,~~Drow_line,65,2,0
  5240                        	.sym	~~Clear_TEXT,~~Clear_TEXT,65,2,0
  5241                        	.sym	~~Clear_VRAM_B0_BA,~~Clear_VRAM_B0_BA,65,2,0
  5242                        	.sym	~~Get_VICKY_II_Version,~~Get_VICKY_II_Version,65,2,0
  5243                        	.sym	~~load_palette,~~load_palette,65,2,0
  5244                        	.sym	~~test_func_fall,~~test_func_fall,65,2,0
  5245                        	.sym	~~mv_3d,~~mv_3d,10,2,48,5
  5246                        	.sym	~~mv,~~mv,10,2,48,5
  5247                        	.sym	~~result_projection,~~result_projection,106,2,0,5,2
  5248                        	.sym	~~line,~~line,106,2,0,5,12
  5249                        	.sym	~~cube_p,~~cube_p,106,2,0,5,8
  5250                        	.sym	~~cube,~~cube,106,2,0,5,8
  5251                        	.sym	~~point_dest,~~point_dest,106,2,0,5,2
  5252                        	.sym	~~point_4,~~point_4,106,2,0,5,2
  5253                        	.sym	~~point_3,~~point_3,106,2,0,5,2
  5254                        	.sym	~~point_2,~~point_2,106,2,0,5,4
  5255                        	.sym	~~points,~~points,106,2,0,5,18
  5256                        	.sym	~~text,~~text,110,2,0,14
  5257                        	.sym	~~Print_INT_16,~~Print_INT_16,65,18,0
  5258                        	.sym	~~Print_UINT_16,~~Print_UINT_16,65,18,0
  5259                        	.sym	~~Print_UINT_8,~~Print_UINT_8,65,18,0
  5260                        	.sym	~~Print_HEX_16,~~Print_HEX_16,65,18,0
  5261                        	.sym	~~Copy,~~Copy,65,18,0
  5262                        	.sym	acia_t,0,10,14,32,4
  5263                        	.sym	pia_t,0,10,14,32,3
  5264                        	.sym	via_t,0,10,14,128,2
  5265                        	.sym	imaxdiv_t,0,10,14,64,1
  5266                        	.sym	uintmax_t,0,18,14,32
  5267                        	.sym	intmax_t,0,7,14,32
  5268                        	.sym	uintptr_t,0,16,14,16
  5269                        	.sym	intptr_t,0,5,14,16
  5270                        	.sym	uint32_t,0,18,14,32
  5271                        	.sym	int32_t,0,7,14,32
  5272                        	.sym	uint16_t,0,16,14,16
  5273                        	.sym	int16_t,0,5,14,16
  5274                        	.sym	uint8_t,0,14,14,8
  5275                        	.sym	int8_t,0,2,14,8
  5276                        	.sym	wchar_t,0,14,14,8


      Lines assembled: 5276
      Errors: 0
